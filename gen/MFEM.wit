module_name         = "MFEM"

input               = ["mfem/general/array.hpp", "mfem/mesh/mesh.hpp", "mfem/mesh/ncmesh.hpp", "mfem/fem/fe_coll.hpp", "mfem/fem/fespace.hpp", "mfem/fem/intrules.hpp", "mfem/fem/coefficient.hpp", "mfem/fem/gridfunc.hpp", "mfem/fem/bilinearform.hpp", "mfem/fem/bilininteg.hpp", "mfem/fem/linearform.hpp", "mfem/fem/lininteg.hpp", "mfem/fem/nonlinearform.hpp", "mfem/fem/nonlininteg.hpp", "mfem/fem/datacollection.hpp", "mfem/linalg/vector.hpp", "mfem/linalg/sparsemat.hpp", "mfem/linalg/solvers.hpp", "mfem/linalg/handle.hpp", "mfem/linalg/operator.hpp", "mfem/linalg/matrix.hpp", "mfem/linalg/sparsesmoothers.hpp"]

extra_headers       = ["templates.h"]

include_dirs        = [".", "%MFEM_INC_DIR%" ]

clang_opts          = ["-resource-dir", "/home/dogiermann/Repos/spack/opt/spack/linux-manjaro21-zen/gcc-11.2.0/llvm-13.0.1-ujjeg2kym5yi5vzurktjtknit5xexaow/lib/clang/13.0.1"]

cxx-std             = "c++17"

veto_list           = "jlMFEM-veto.h"

auto_veto           = true # Setting this to false leads to the error that a class called "So" is not found. 

export              = "all"

export_blacklist    = [ "begin", "end", "<<"]

# all generated code in a single file:
n_classes_per_file = 0
