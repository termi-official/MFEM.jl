// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jllibMFEM.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<mfem::MixedWeakGradDotIntegrator> : std::false_type { };
  template<> struct DefaultConstructible<mfem::MixedWeakGradDotIntegrator> : std::false_type { };
template<> struct SuperType<mfem::MixedWeakGradDotIntegrator> { typedef mfem::MixedScalarVectorIntegrator type; };
}

// Class generating the wrapper for type mfem::MixedWeakGradDotIntegrator
// signature to use in the veto file: mfem::MixedWeakGradDotIntegrator
struct Jlmfem_MixedWeakGradDotIntegrator: public Wrapper {

  Jlmfem_MixedWeakGradDotIntegrator(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type mfem::MixedWeakGradDotIntegrator (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:1033:7
    jlcxx::TypeWrapper<mfem::MixedWeakGradDotIntegrator>  t = jlModule.add_type<mfem::MixedWeakGradDotIntegrator>("mfem!MixedWeakGradDotIntegrator",
      jlcxx::julia_base_type<mfem::MixedScalarVectorIntegrator>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<mfem::MixedWeakGradDotIntegrator>>(new jlcxx::TypeWrapper<mfem::MixedWeakGradDotIntegrator>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void mfem::MixedWeakGradDotIntegrator::MixedWeakGradDotIntegrator(mfem::VectorCoefficient &) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:1036:4
    t.constructor<mfem::VectorCoefficient &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for bool mfem::MixedWeakGradDotIntegrator::VerifyFiniteElementTypes(const mfem::FiniteElement &, const mfem::FiniteElement &) (" __HERE__ ")");
    // signature to use in the veto list: bool mfem::MixedWeakGradDotIntegrator::VerifyFiniteElementTypes(const mfem::FiniteElement &, const mfem::FiniteElement &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:1039:24
    t.method("VerifyFiniteElementTypes", [](mfem::MixedWeakGradDotIntegrator const& a, const mfem::FiniteElement & arg0, const mfem::FiniteElement & arg1)->bool { return a.VerifyFiniteElementTypes(arg0, arg1); });
    t.method("VerifyFiniteElementTypes", [](mfem::MixedWeakGradDotIntegrator const* a, const mfem::FiniteElement & arg0, const mfem::FiniteElement & arg1)->bool { return a->VerifyFiniteElementTypes(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for const char * mfem::MixedWeakGradDotIntegrator::FiniteElementTypeFailureMessage() (" __HERE__ ")");
    // signature to use in the veto list: const char * mfem::MixedWeakGradDotIntegrator::FiniteElementTypeFailureMessage()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:1048:32
    t.method("FiniteElementTypeFailureMessage", [](mfem::MixedWeakGradDotIntegrator const& a) { return (std::string)a.FiniteElementTypeFailureMessage(); });
    t.method("FiniteElementTypeFailureMessage", [](mfem::MixedWeakGradDotIntegrator const* a) { return (std::string)a->FiniteElementTypeFailureMessage(); });

    DEBUG_MSG("Adding wrapper for int mfem::MixedWeakGradDotIntegrator::GetIntegrationOrder(const mfem::FiniteElement &, const mfem::FiniteElement &, mfem::ElementTransformation &) (" __HERE__ ")");
    // signature to use in the veto list: int mfem::MixedWeakGradDotIntegrator::GetIntegrationOrder(const mfem::FiniteElement &, const mfem::FiniteElement &, mfem::ElementTransformation &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:1057:23
    t.method("GetIntegrationOrder", [](mfem::MixedWeakGradDotIntegrator& a, const mfem::FiniteElement & arg0, const mfem::FiniteElement & arg1, mfem::ElementTransformation & arg2)->int { return a.GetIntegrationOrder(arg0, arg1, arg2); });
    t.method("GetIntegrationOrder", [](mfem::MixedWeakGradDotIntegrator* a, const mfem::FiniteElement & arg0, const mfem::FiniteElement & arg1, mfem::ElementTransformation & arg2)->int { return a->GetIntegrationOrder(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedWeakGradDotIntegrator::CalcShape(const mfem::FiniteElement &, mfem::ElementTransformation &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedWeakGradDotIntegrator::CalcShape(const mfem::FiniteElement &, mfem::ElementTransformation &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:1062:24
    t.method("CalcShape", [](mfem::MixedWeakGradDotIntegrator& a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, mfem::Vector & arg2)->void { a.CalcShape(arg0, arg1, arg2); });
    t.method("CalcShape", [](mfem::MixedWeakGradDotIntegrator* a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, mfem::Vector & arg2)->void { a->CalcShape(arg0, arg1, arg2); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<mfem::MixedWeakGradDotIntegrator>> type_;
};
std::shared_ptr<Wrapper> newJlmfem_MixedWeakGradDotIntegrator(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new Jlmfem_MixedWeakGradDotIntegrator(module));
}
