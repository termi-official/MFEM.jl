// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jllibMFEM.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<mfem::VectorDeltaCoefficient> : std::false_type { };
  template<> struct DefaultConstructible<mfem::VectorDeltaCoefficient> : std::false_type { };
template<> struct SuperType<mfem::VectorDeltaCoefficient> { typedef mfem::VectorCoefficient type; };
}

// Class generating the wrapper for type mfem::VectorDeltaCoefficient
// signature to use in the veto file: mfem::VectorDeltaCoefficient
struct Jlmfem_VectorDeltaCoefficient: public Wrapper {

  Jlmfem_VectorDeltaCoefficient(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type mfem::VectorDeltaCoefficient (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:779:7
    jlcxx::TypeWrapper<mfem::VectorDeltaCoefficient>  t = jlModule.add_type<mfem::VectorDeltaCoefficient>("mfem!VectorDeltaCoefficient",
      jlcxx::julia_base_type<mfem::VectorCoefficient>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<mfem::VectorDeltaCoefficient>>(new jlcxx::TypeWrapper<mfem::VectorDeltaCoefficient>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void mfem::VectorDeltaCoefficient::VectorDeltaCoefficient(int) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:787:4
    t.constructor<int>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::VectorDeltaCoefficient::VectorDeltaCoefficient(const mfem::Vector &) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:792:4
    t.constructor<const mfem::Vector &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::VectorDeltaCoefficient::VectorDeltaCoefficient(const mfem::Vector &, double, double) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:797:4
    t.constructor<const mfem::Vector &, double, double>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::VectorDeltaCoefficient::VectorDeltaCoefficient(const mfem::Vector &, double, double, double) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:802:4
    t.constructor<const mfem::Vector &, double, double, double>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::VectorDeltaCoefficient::VectorDeltaCoefficient(const mfem::Vector &, double, double, double, double) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:807:4
    t.constructor<const mfem::Vector &, double, double, double, double>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void mfem::VectorDeltaCoefficient::SetTime(double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorDeltaCoefficient::SetTime(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:812:9
    t.method("SetTime", [](mfem::VectorDeltaCoefficient& a, double arg0)->void { a.SetTime(arg0); });
    t.method("SetTime", [](mfem::VectorDeltaCoefficient* a, double arg0)->void { a->SetTime(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::VectorDeltaCoefficient::SetDeltaCoefficient(const mfem::DeltaCoefficient &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorDeltaCoefficient::SetDeltaCoefficient(const mfem::DeltaCoefficient &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:817:9
    t.method("SetDeltaCoefficient", [](mfem::VectorDeltaCoefficient& a, const mfem::DeltaCoefficient & arg0)->void { a.SetDeltaCoefficient(arg0); });
    t.method("SetDeltaCoefficient", [](mfem::VectorDeltaCoefficient* a, const mfem::DeltaCoefficient & arg0)->void { a->SetDeltaCoefficient(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::DeltaCoefficient & mfem::VectorDeltaCoefficient::GetDeltaCoefficient() (" __HERE__ ")");
    // signature to use in the veto list: mfem::DeltaCoefficient & mfem::VectorDeltaCoefficient::GetDeltaCoefficient()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:820:22
    t.method("GetDeltaCoefficient", [](mfem::VectorDeltaCoefficient& a)->mfem::DeltaCoefficient & { return a.GetDeltaCoefficient(); });
    t.method("GetDeltaCoefficient", [](mfem::VectorDeltaCoefficient* a)->mfem::DeltaCoefficient & { return a->GetDeltaCoefficient(); });

    DEBUG_MSG("Adding wrapper for void mfem::VectorDeltaCoefficient::SetScale(double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorDeltaCoefficient::SetScale(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:822:9
    t.method("SetScale", [](mfem::VectorDeltaCoefficient& a, double arg0)->void { a.SetScale(arg0); });
    t.method("SetScale", [](mfem::VectorDeltaCoefficient* a, double arg0)->void { a->SetScale(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::VectorDeltaCoefficient::SetDirection(const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorDeltaCoefficient::SetDirection(const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:823:9
    t.method("SetDirection", [](mfem::VectorDeltaCoefficient& a, const mfem::Vector & arg0)->void { a.SetDirection(arg0); });
    t.method("SetDirection", [](mfem::VectorDeltaCoefficient* a, const mfem::Vector & arg0)->void { a->SetDirection(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::VectorDeltaCoefficient::SetDeltaCenter(const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorDeltaCoefficient::SetDeltaCenter(const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:825:9
    t.method("SetDeltaCenter", [](mfem::VectorDeltaCoefficient& a, const mfem::Vector & arg0)->void { a.SetDeltaCenter(arg0); });
    t.method("SetDeltaCenter", [](mfem::VectorDeltaCoefficient* a, const mfem::Vector & arg0)->void { a->SetDeltaCenter(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::VectorDeltaCoefficient::GetDeltaCenter(mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorDeltaCoefficient::GetDeltaCenter(mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:826:9
    t.method("GetDeltaCenter", [](mfem::VectorDeltaCoefficient& a, mfem::Vector & arg0)->void { a.GetDeltaCenter(arg0); });
    t.method("GetDeltaCenter", [](mfem::VectorDeltaCoefficient* a, mfem::Vector & arg0)->void { a->GetDeltaCenter(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::VectorDeltaCoefficient::EvalDelta(mfem::Vector &, mfem::ElementTransformation &, const mfem::IntegrationPoint &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorDeltaCoefficient::EvalDelta(mfem::Vector &, mfem::ElementTransformation &, const mfem::IntegrationPoint &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:831:17
    t.method("EvalDelta", [](mfem::VectorDeltaCoefficient& a, mfem::Vector & arg0, mfem::ElementTransformation & arg1, const mfem::IntegrationPoint & arg2)->void { a.EvalDelta(arg0, arg1, arg2); });
    t.method("EvalDelta", [](mfem::VectorDeltaCoefficient* a, mfem::Vector & arg0, mfem::ElementTransformation & arg1, const mfem::IntegrationPoint & arg2)->void { a->EvalDelta(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void mfem::VectorDeltaCoefficient::Eval(mfem::Vector &, mfem::ElementTransformation &, const mfem::IntegrationPoint &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorDeltaCoefficient::Eval(mfem::Vector &, mfem::ElementTransformation &, const mfem::IntegrationPoint &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:837:17
    t.method("Eval", [](mfem::VectorDeltaCoefficient& a, mfem::Vector & arg0, mfem::ElementTransformation & arg1, const mfem::IntegrationPoint & arg2)->void { a.Eval(arg0, arg1, arg2); });
    t.method("Eval", [](mfem::VectorDeltaCoefficient* a, mfem::Vector & arg0, mfem::ElementTransformation & arg1, const mfem::IntegrationPoint & arg2)->void { a->Eval(arg0, arg1, arg2); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<mfem::VectorDeltaCoefficient>> type_;
};
std::shared_ptr<Wrapper> newJlmfem_VectorDeltaCoefficient(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new Jlmfem_VectorDeltaCoefficient(module));
}
