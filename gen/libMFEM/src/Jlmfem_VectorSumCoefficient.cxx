// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jllibMFEM.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<mfem::VectorSumCoefficient> : std::false_type { };
  template<> struct DefaultConstructible<mfem::VectorSumCoefficient> : std::false_type { };
template<> struct SuperType<mfem::VectorSumCoefficient> { typedef mfem::VectorCoefficient type; };
}

// Class generating the wrapper for type mfem::VectorSumCoefficient
// signature to use in the veto file: mfem::VectorSumCoefficient
struct Jlmfem_VectorSumCoefficient: public Wrapper {

  Jlmfem_VectorSumCoefficient(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type mfem::VectorSumCoefficient (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1572:7
    jlcxx::TypeWrapper<mfem::VectorSumCoefficient>  t = jlModule.add_type<mfem::VectorSumCoefficient>("mfem!VectorSumCoefficient",
      jlcxx::julia_base_type<mfem::VectorCoefficient>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<mfem::VectorSumCoefficient>>(new jlcxx::TypeWrapper<mfem::VectorSumCoefficient>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void mfem::VectorSumCoefficient::VectorSumCoefficient(int) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1592:4
    t.constructor<int>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::VectorSumCoefficient::VectorSumCoefficient(mfem::VectorCoefficient &, mfem::VectorCoefficient &, double, double) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1596:4
    t.constructor<mfem::VectorCoefficient &, mfem::VectorCoefficient &>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<mfem::VectorCoefficient &, mfem::VectorCoefficient &, double>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<mfem::VectorCoefficient &, mfem::VectorCoefficient &, double, double>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::VectorSumCoefficient::VectorSumCoefficient(mfem::VectorCoefficient &, mfem::VectorCoefficient &, mfem::Coefficient &, mfem::Coefficient &) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1601:4
    t.constructor<mfem::VectorCoefficient &, mfem::VectorCoefficient &, mfem::Coefficient &, mfem::Coefficient &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void mfem::VectorSumCoefficient::SetTime(double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorSumCoefficient::SetTime(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1605:9
    t.method("SetTime", [](mfem::VectorSumCoefficient& a, double arg0)->void { a.SetTime(arg0); });
    t.method("SetTime", [](mfem::VectorSumCoefficient* a, double arg0)->void { a->SetTime(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::VectorSumCoefficient::SetACoef(mfem::VectorCoefficient &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorSumCoefficient::SetACoef(mfem::VectorCoefficient &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1608:9
    t.method("SetACoef", [](mfem::VectorSumCoefficient& a, mfem::VectorCoefficient & arg0)->void { a.SetACoef(arg0); });
    t.method("SetACoef", [](mfem::VectorSumCoefficient* a, mfem::VectorCoefficient & arg0)->void { a->SetACoef(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::VectorCoefficient * mfem::VectorSumCoefficient::GetACoef() (" __HERE__ ")");
    // signature to use in the veto list: mfem::VectorCoefficient * mfem::VectorSumCoefficient::GetACoef()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1610:24
    t.method("GetACoef", [](mfem::VectorSumCoefficient const& a)->mfem::VectorCoefficient * { return a.GetACoef(); });
    t.method("GetACoef", [](mfem::VectorSumCoefficient const* a)->mfem::VectorCoefficient * { return a->GetACoef(); });

    DEBUG_MSG("Adding wrapper for void mfem::VectorSumCoefficient::SetBCoef(mfem::VectorCoefficient &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorSumCoefficient::SetBCoef(mfem::VectorCoefficient &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1613:9
    t.method("SetBCoef", [](mfem::VectorSumCoefficient& a, mfem::VectorCoefficient & arg0)->void { a.SetBCoef(arg0); });
    t.method("SetBCoef", [](mfem::VectorSumCoefficient* a, mfem::VectorCoefficient & arg0)->void { a->SetBCoef(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::VectorCoefficient * mfem::VectorSumCoefficient::GetBCoef() (" __HERE__ ")");
    // signature to use in the veto list: mfem::VectorCoefficient * mfem::VectorSumCoefficient::GetBCoef()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1615:24
    t.method("GetBCoef", [](mfem::VectorSumCoefficient const& a)->mfem::VectorCoefficient * { return a.GetBCoef(); });
    t.method("GetBCoef", [](mfem::VectorSumCoefficient const* a)->mfem::VectorCoefficient * { return a->GetBCoef(); });

    DEBUG_MSG("Adding wrapper for void mfem::VectorSumCoefficient::SetAlphaCoef(mfem::Coefficient &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorSumCoefficient::SetAlphaCoef(mfem::Coefficient &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1618:9
    t.method("SetAlphaCoef", [](mfem::VectorSumCoefficient& a, mfem::Coefficient & arg0)->void { a.SetAlphaCoef(arg0); });
    t.method("SetAlphaCoef", [](mfem::VectorSumCoefficient* a, mfem::Coefficient & arg0)->void { a->SetAlphaCoef(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::Coefficient * mfem::VectorSumCoefficient::GetAlphaCoef() (" __HERE__ ")");
    // signature to use in the veto list: mfem::Coefficient * mfem::VectorSumCoefficient::GetAlphaCoef()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1620:18
    t.method("GetAlphaCoef", [](mfem::VectorSumCoefficient const& a)->mfem::Coefficient * { return a.GetAlphaCoef(); });
    t.method("GetAlphaCoef", [](mfem::VectorSumCoefficient const* a)->mfem::Coefficient * { return a->GetAlphaCoef(); });

    DEBUG_MSG("Adding wrapper for void mfem::VectorSumCoefficient::SetBetaCoef(mfem::Coefficient &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorSumCoefficient::SetBetaCoef(mfem::Coefficient &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1623:9
    t.method("SetBetaCoef", [](mfem::VectorSumCoefficient& a, mfem::Coefficient & arg0)->void { a.SetBetaCoef(arg0); });
    t.method("SetBetaCoef", [](mfem::VectorSumCoefficient* a, mfem::Coefficient & arg0)->void { a->SetBetaCoef(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::Coefficient * mfem::VectorSumCoefficient::GetBetaCoef() (" __HERE__ ")");
    // signature to use in the veto list: mfem::Coefficient * mfem::VectorSumCoefficient::GetBetaCoef()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1625:18
    t.method("GetBetaCoef", [](mfem::VectorSumCoefficient const& a)->mfem::Coefficient * { return a.GetBetaCoef(); });
    t.method("GetBetaCoef", [](mfem::VectorSumCoefficient const* a)->mfem::Coefficient * { return a->GetBetaCoef(); });

    DEBUG_MSG("Adding wrapper for void mfem::VectorSumCoefficient::SetA(const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorSumCoefficient::SetA(const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1628:9
    t.method("SetA", [](mfem::VectorSumCoefficient& a, const mfem::Vector & arg0)->void { a.SetA(arg0); });
    t.method("SetA", [](mfem::VectorSumCoefficient* a, const mfem::Vector & arg0)->void { a->SetA(arg0); });

    DEBUG_MSG("Adding wrapper for const mfem::Vector & mfem::VectorSumCoefficient::GetA() (" __HERE__ ")");
    // signature to use in the veto list: const mfem::Vector & mfem::VectorSumCoefficient::GetA()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1630:19
    t.method("GetA", [](mfem::VectorSumCoefficient const& a)->const mfem::Vector & { return a.GetA(); });
    t.method("GetA", [](mfem::VectorSumCoefficient const* a)->const mfem::Vector & { return a->GetA(); });

    DEBUG_MSG("Adding wrapper for void mfem::VectorSumCoefficient::SetB(const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorSumCoefficient::SetB(const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1633:9
    t.method("SetB", [](mfem::VectorSumCoefficient& a, const mfem::Vector & arg0)->void { a.SetB(arg0); });
    t.method("SetB", [](mfem::VectorSumCoefficient* a, const mfem::Vector & arg0)->void { a->SetB(arg0); });

    DEBUG_MSG("Adding wrapper for const mfem::Vector & mfem::VectorSumCoefficient::GetB() (" __HERE__ ")");
    // signature to use in the veto list: const mfem::Vector & mfem::VectorSumCoefficient::GetB()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1635:19
    t.method("GetB", [](mfem::VectorSumCoefficient const& a)->const mfem::Vector & { return a.GetB(); });
    t.method("GetB", [](mfem::VectorSumCoefficient const* a)->const mfem::Vector & { return a->GetB(); });

    DEBUG_MSG("Adding wrapper for void mfem::VectorSumCoefficient::SetAlpha(double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorSumCoefficient::SetAlpha(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1638:9
    t.method("SetAlpha", [](mfem::VectorSumCoefficient& a, double arg0)->void { a.SetAlpha(arg0); });
    t.method("SetAlpha", [](mfem::VectorSumCoefficient* a, double arg0)->void { a->SetAlpha(arg0); });

    DEBUG_MSG("Adding wrapper for double mfem::VectorSumCoefficient::GetAlpha() (" __HERE__ ")");
    // signature to use in the veto list: double mfem::VectorSumCoefficient::GetAlpha()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1640:11
    t.method("GetAlpha", [](mfem::VectorSumCoefficient const& a)->double { return a.GetAlpha(); });
    t.method("GetAlpha", [](mfem::VectorSumCoefficient const* a)->double { return a->GetAlpha(); });

    DEBUG_MSG("Adding wrapper for void mfem::VectorSumCoefficient::SetBeta(double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorSumCoefficient::SetBeta(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1643:9
    t.method("SetBeta", [](mfem::VectorSumCoefficient& a, double arg0)->void { a.SetBeta(arg0); });
    t.method("SetBeta", [](mfem::VectorSumCoefficient* a, double arg0)->void { a->SetBeta(arg0); });

    DEBUG_MSG("Adding wrapper for double mfem::VectorSumCoefficient::GetBeta() (" __HERE__ ")");
    // signature to use in the veto list: double mfem::VectorSumCoefficient::GetBeta()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1645:11
    t.method("GetBeta", [](mfem::VectorSumCoefficient const& a)->double { return a.GetBeta(); });
    t.method("GetBeta", [](mfem::VectorSumCoefficient const* a)->double { return a->GetBeta(); });

    DEBUG_MSG("Adding wrapper for void mfem::VectorSumCoefficient::Eval(mfem::Vector &, mfem::ElementTransformation &, const mfem::IntegrationPoint &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::VectorSumCoefficient::Eval(mfem::Vector &, mfem::ElementTransformation &, const mfem::IntegrationPoint &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1648:17
    t.method("Eval", [](mfem::VectorSumCoefficient& a, mfem::Vector & arg0, mfem::ElementTransformation & arg1, const mfem::IntegrationPoint & arg2)->void { a.Eval(arg0, arg1, arg2); });
    t.method("Eval", [](mfem::VectorSumCoefficient* a, mfem::Vector & arg0, mfem::ElementTransformation & arg1, const mfem::IntegrationPoint & arg2)->void { a->Eval(arg0, arg1, arg2); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<mfem::VectorSumCoefficient>> type_;
};
std::shared_ptr<Wrapper> newJlmfem_VectorSumCoefficient(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new Jlmfem_VectorSumCoefficient(module));
}
