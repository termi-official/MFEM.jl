// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jllibMFEM.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<mfem::DiffusionIntegrator> : std::false_type { };
  template<> struct DefaultConstructible<mfem::DiffusionIntegrator> : std::false_type { };
template<> struct SuperType<mfem::DiffusionIntegrator> { typedef mfem::BilinearFormIntegrator type; };
}

// Class generating the wrapper for type mfem::DiffusionIntegrator
// signature to use in the veto file: mfem::DiffusionIntegrator
struct Jlmfem_DiffusionIntegrator: public Wrapper {

  Jlmfem_DiffusionIntegrator(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type mfem::DiffusionIntegrator (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2065:7
    jlcxx::TypeWrapper<mfem::DiffusionIntegrator>  t = jlModule.add_type<mfem::DiffusionIntegrator>("mfem!DiffusionIntegrator",
      jlcxx::julia_base_type<mfem::BilinearFormIntegrator>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<mfem::DiffusionIntegrator>>(new jlcxx::TypeWrapper<mfem::DiffusionIntegrator>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::DiffusionIntegrator::DiffusionIntegrator(const mfem::IntegrationRule *) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2091:4
    t.constructor<const mfem::IntegrationRule *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::DiffusionIntegrator::DiffusionIntegrator(mfem::Coefficient &, const mfem::IntegrationRule *) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2096:4
    t.constructor<mfem::Coefficient &>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<mfem::Coefficient &, const mfem::IntegrationRule *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::DiffusionIntegrator::DiffusionIntegrator(mfem::VectorCoefficient &, const mfem::IntegrationRule *) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2101:4
    t.constructor<mfem::VectorCoefficient &>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<mfem::VectorCoefficient &, const mfem::IntegrationRule *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::DiffusionIntegrator::DiffusionIntegrator(mfem::MatrixCoefficient &, const mfem::IntegrationRule *) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2107:4
    t.constructor<mfem::MatrixCoefficient &>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<mfem::MatrixCoefficient &, const mfem::IntegrationRule *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::DiffusionIntegrator::DiffusionIntegrator(mfem::SymmetricMatrixCoefficient &, const mfem::IntegrationRule *) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2113:4
    t.constructor<mfem::SymmetricMatrixCoefficient &>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<mfem::SymmetricMatrixCoefficient &, const mfem::IntegrationRule *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void mfem::DiffusionIntegrator::AssembleElementMatrix(const mfem::FiniteElement &, mfem::ElementTransformation &, mfem::DenseMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DiffusionIntegrator::AssembleElementMatrix(const mfem::FiniteElement &, mfem::ElementTransformation &, mfem::DenseMatrix &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2120:17
    t.method("AssembleElementMatrix", [](mfem::DiffusionIntegrator& a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, mfem::DenseMatrix & arg2)->void { a.AssembleElementMatrix(arg0, arg1, arg2); });
    t.method("AssembleElementMatrix", [](mfem::DiffusionIntegrator* a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, mfem::DenseMatrix & arg2)->void { a->AssembleElementMatrix(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void mfem::DiffusionIntegrator::AssembleElementMatrix2(const mfem::FiniteElement &, const mfem::FiniteElement &, mfem::ElementTransformation &, mfem::DenseMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DiffusionIntegrator::AssembleElementMatrix2(const mfem::FiniteElement &, const mfem::FiniteElement &, mfem::ElementTransformation &, mfem::DenseMatrix &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2125:17
    t.method("AssembleElementMatrix2", [](mfem::DiffusionIntegrator& a, const mfem::FiniteElement & arg0, const mfem::FiniteElement & arg1, mfem::ElementTransformation & arg2, mfem::DenseMatrix & arg3)->void { a.AssembleElementMatrix2(arg0, arg1, arg2, arg3); });
    t.method("AssembleElementMatrix2", [](mfem::DiffusionIntegrator* a, const mfem::FiniteElement & arg0, const mfem::FiniteElement & arg1, mfem::ElementTransformation & arg2, mfem::DenseMatrix & arg3)->void { a->AssembleElementMatrix2(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void mfem::DiffusionIntegrator::AssembleElementVector(const mfem::FiniteElement &, mfem::ElementTransformation &, const mfem::Vector &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DiffusionIntegrator::AssembleElementVector(const mfem::FiniteElement &, mfem::ElementTransformation &, const mfem::Vector &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2131:17
    t.method("AssembleElementVector", [](mfem::DiffusionIntegrator& a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, const mfem::Vector & arg2, mfem::Vector & arg3)->void { a.AssembleElementVector(arg0, arg1, arg2, arg3); });
    t.method("AssembleElementVector", [](mfem::DiffusionIntegrator* a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, const mfem::Vector & arg2, mfem::Vector & arg3)->void { a->AssembleElementVector(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void mfem::DiffusionIntegrator::ComputeElementFlux(const mfem::FiniteElement &, mfem::ElementTransformation &, mfem::Vector &, const mfem::FiniteElement &, mfem::Vector &, bool) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DiffusionIntegrator::ComputeElementFlux(const mfem::FiniteElement &, mfem::ElementTransformation &, mfem::Vector &, const mfem::FiniteElement &, mfem::Vector &, bool)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2135:17
    t.method("ComputeElementFlux", [](mfem::DiffusionIntegrator& a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, mfem::Vector & arg2, const mfem::FiniteElement & arg3, mfem::Vector & arg4)->void { a.ComputeElementFlux(arg0, arg1, arg2, arg3, arg4); });
    t.method("ComputeElementFlux", [](mfem::DiffusionIntegrator& a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, mfem::Vector & arg2, const mfem::FiniteElement & arg3, mfem::Vector & arg4, bool arg5)->void { a.ComputeElementFlux(arg0, arg1, arg2, arg3, arg4, arg5); });
    t.method("ComputeElementFlux", [](mfem::DiffusionIntegrator* a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, mfem::Vector & arg2, const mfem::FiniteElement & arg3, mfem::Vector & arg4)->void { a->ComputeElementFlux(arg0, arg1, arg2, arg3, arg4); });
    t.method("ComputeElementFlux", [](mfem::DiffusionIntegrator* a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, mfem::Vector & arg2, const mfem::FiniteElement & arg3, mfem::Vector & arg4, bool arg5)->void { a->ComputeElementFlux(arg0, arg1, arg2, arg3, arg4, arg5); });

    DEBUG_MSG("Adding wrapper for double mfem::DiffusionIntegrator::ComputeFluxEnergy(const mfem::FiniteElement &, mfem::ElementTransformation &, mfem::Vector &, mfem::Vector *) (" __HERE__ ")");
    // signature to use in the veto list: double mfem::DiffusionIntegrator::ComputeFluxEnergy(const mfem::FiniteElement &, mfem::ElementTransformation &, mfem::Vector &, mfem::Vector *)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2140:19
    t.method("ComputeFluxEnergy", [](mfem::DiffusionIntegrator& a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, mfem::Vector & arg2)->double { return a.ComputeFluxEnergy(arg0, arg1, arg2); });
    t.method("ComputeFluxEnergy", [](mfem::DiffusionIntegrator& a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, mfem::Vector & arg2, mfem::Vector * arg3)->double { return a.ComputeFluxEnergy(arg0, arg1, arg2, arg3); });
    t.method("ComputeFluxEnergy", [](mfem::DiffusionIntegrator* a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, mfem::Vector & arg2)->double { return a->ComputeFluxEnergy(arg0, arg1, arg2); });
    t.method("ComputeFluxEnergy", [](mfem::DiffusionIntegrator* a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, mfem::Vector & arg2, mfem::Vector * arg3)->double { return a->ComputeFluxEnergy(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void mfem::DiffusionIntegrator::AssembleMF(const mfem::FiniteElementSpace &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DiffusionIntegrator::AssembleMF(const mfem::FiniteElementSpace &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2146:17
    t.method("AssembleMF", [](mfem::DiffusionIntegrator& a, const mfem::FiniteElementSpace & arg0)->void { a.AssembleMF(arg0); });
    t.method("AssembleMF", [](mfem::DiffusionIntegrator* a, const mfem::FiniteElementSpace & arg0)->void { a->AssembleMF(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::DiffusionIntegrator::AssemblePA(const mfem::FiniteElementSpace &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DiffusionIntegrator::AssemblePA(const mfem::FiniteElementSpace &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2148:17
    t.method("AssemblePA", [](mfem::DiffusionIntegrator& a, const mfem::FiniteElementSpace & arg0)->void { a.AssemblePA(arg0); });
    t.method("AssemblePA", [](mfem::DiffusionIntegrator* a, const mfem::FiniteElementSpace & arg0)->void { a->AssemblePA(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::DiffusionIntegrator::AssembleEA(const mfem::FiniteElementSpace &, mfem::Vector &, const bool) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DiffusionIntegrator::AssembleEA(const mfem::FiniteElementSpace &, mfem::Vector &, const bool)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2150:17
    t.method("AssembleEA", [](mfem::DiffusionIntegrator& a, const mfem::FiniteElementSpace & arg0, mfem::Vector & arg1, const bool arg2)->void { a.AssembleEA(arg0, arg1, arg2); });
    t.method("AssembleEA", [](mfem::DiffusionIntegrator* a, const mfem::FiniteElementSpace & arg0, mfem::Vector & arg1, const bool arg2)->void { a->AssembleEA(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void mfem::DiffusionIntegrator::AssembleDiagonalPA(mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DiffusionIntegrator::AssembleDiagonalPA(mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2153:17
    t.method("AssembleDiagonalPA", [](mfem::DiffusionIntegrator& a, mfem::Vector & arg0)->void { a.AssembleDiagonalPA(arg0); });
    t.method("AssembleDiagonalPA", [](mfem::DiffusionIntegrator* a, mfem::Vector & arg0)->void { a->AssembleDiagonalPA(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::DiffusionIntegrator::AssembleDiagonalMF(mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DiffusionIntegrator::AssembleDiagonalMF(mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2155:17
    t.method("AssembleDiagonalMF", [](mfem::DiffusionIntegrator& a, mfem::Vector & arg0)->void { a.AssembleDiagonalMF(arg0); });
    t.method("AssembleDiagonalMF", [](mfem::DiffusionIntegrator* a, mfem::Vector & arg0)->void { a->AssembleDiagonalMF(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::DiffusionIntegrator::AddMultMF(const mfem::Vector &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DiffusionIntegrator::AddMultMF(const mfem::Vector &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2157:17
    t.method("AddMultMF", [](mfem::DiffusionIntegrator const& a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a.AddMultMF(arg0, arg1); });
    t.method("AddMultMF", [](mfem::DiffusionIntegrator const* a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a->AddMultMF(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::DiffusionIntegrator::AddMultPA(const mfem::Vector &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DiffusionIntegrator::AddMultPA(const mfem::Vector &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2159:17
    t.method("AddMultPA", [](mfem::DiffusionIntegrator const& a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a.AddMultPA(arg0, arg1); });
    t.method("AddMultPA", [](mfem::DiffusionIntegrator const* a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a->AddMultPA(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::DiffusionIntegrator::AddMultTransposePA(const mfem::Vector &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DiffusionIntegrator::AddMultTransposePA(const mfem::Vector &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2161:17
    t.method("AddMultTransposePA", [](mfem::DiffusionIntegrator const& a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a.AddMultTransposePA(arg0, arg1); });
    t.method("AddMultTransposePA", [](mfem::DiffusionIntegrator const* a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a->AddMultTransposePA(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for const mfem::IntegrationRule & mfem::DiffusionIntegrator::GetRule(const mfem::FiniteElement &, const mfem::FiniteElement &) (" __HERE__ ")");
    // signature to use in the veto list: const mfem::IntegrationRule & mfem::DiffusionIntegrator::GetRule(const mfem::FiniteElement &, const mfem::FiniteElement &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2163:34
    module_.method("mfem!DiffusionIntegrator!GetRule", [](const mfem::FiniteElement & arg0, const mfem::FiniteElement & arg1)->const mfem::IntegrationRule & { return mfem::DiffusionIntegrator::GetRule(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for bool mfem::DiffusionIntegrator::SupportsCeed() (" __HERE__ ")");
    // signature to use in the veto list: bool mfem::DiffusionIntegrator::SupportsCeed()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:2166:9
    t.method("SupportsCeed", [](mfem::DiffusionIntegrator const& a)->bool { return a.SupportsCeed(); });
    t.method("SupportsCeed", [](mfem::DiffusionIntegrator const* a)->bool { return a->SupportsCeed(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<mfem::DiffusionIntegrator>> type_;
};
std::shared_ptr<Wrapper> newJlmfem_DiffusionIntegrator(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new Jlmfem_DiffusionIntegrator(module));
}
