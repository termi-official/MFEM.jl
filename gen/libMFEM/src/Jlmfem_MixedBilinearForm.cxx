// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jllibMFEM.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<mfem::MixedBilinearForm> : std::false_type { };
  template<> struct DefaultConstructible<mfem::MixedBilinearForm> : std::false_type { };
template<> struct SuperType<mfem::MixedBilinearForm> { typedef mfem::Matrix type; };
}

// Class generating the wrapper for type mfem::MixedBilinearForm
// signature to use in the veto file: mfem::MixedBilinearForm
struct Jlmfem_MixedBilinearForm: public Wrapper {

  Jlmfem_MixedBilinearForm(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type mfem::MixedBilinearForm (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:641:7
    jlcxx::TypeWrapper<mfem::MixedBilinearForm>  t = jlModule.add_type<mfem::MixedBilinearForm>("mfem!MixedBilinearForm",
      jlcxx::julia_base_type<mfem::Matrix>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<mfem::MixedBilinearForm>>(new jlcxx::TypeWrapper<mfem::MixedBilinearForm>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::MixedBilinearForm(mfem::FiniteElementSpace *, mfem::FiniteElementSpace *) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:692:4
    t.constructor<mfem::FiniteElementSpace *, mfem::FiniteElementSpace *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::MixedBilinearForm(mfem::FiniteElementSpace *, mfem::FiniteElementSpace *, mfem::MixedBilinearForm *) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:704:4
    t.constructor<mfem::FiniteElementSpace *, mfem::FiniteElementSpace *, mfem::MixedBilinearForm *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for double & mfem::MixedBilinearForm::Elem(int, int) (" __HERE__ ")");
    // signature to use in the veto list: double & mfem::MixedBilinearForm::Elem(int, int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:709:20
    t.method("Elem", [](mfem::MixedBilinearForm& a, int arg0, int arg1)->double & { return a.Elem(arg0, arg1); });
    t.method("Elem", [](mfem::MixedBilinearForm* a, int arg0, int arg1)->double & { return a->Elem(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for const double & mfem::MixedBilinearForm::Elem(int, int) (" __HERE__ ")");
    // signature to use in the veto list: const double & mfem::MixedBilinearForm::Elem(int, int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:712:26
    t.method("Elem", [](mfem::MixedBilinearForm const& a, int arg0, int arg1)->const double & { return a.Elem(arg0, arg1); });
    t.method("Elem", [](mfem::MixedBilinearForm const* a, int arg0, int arg1)->const double & { return a->Elem(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::Mult(const mfem::Vector &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::Mult(const mfem::Vector &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:715:17
    t.method("Mult", [](mfem::MixedBilinearForm const& a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a.Mult(arg0, arg1); });
    t.method("Mult", [](mfem::MixedBilinearForm const* a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a->Mult(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::AddMult(const mfem::Vector &, mfem::Vector &, const double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::AddMult(const mfem::Vector &, mfem::Vector &, const double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:717:17
    t.method("AddMult", [](mfem::MixedBilinearForm const& a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a.AddMult(arg0, arg1); });
    t.method("AddMult", [](mfem::MixedBilinearForm const& a, const mfem::Vector & arg0, mfem::Vector & arg1, const double arg2)->void { a.AddMult(arg0, arg1, arg2); });
    t.method("AddMult", [](mfem::MixedBilinearForm const* a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a->AddMult(arg0, arg1); });
    t.method("AddMult", [](mfem::MixedBilinearForm const* a, const mfem::Vector & arg0, mfem::Vector & arg1, const double arg2)->void { a->AddMult(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::MultTranspose(const mfem::Vector &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::MultTranspose(const mfem::Vector &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:720:17
    t.method("MultTranspose", [](mfem::MixedBilinearForm const& a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a.MultTranspose(arg0, arg1); });
    t.method("MultTranspose", [](mfem::MixedBilinearForm const* a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a->MultTranspose(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::AddMultTranspose(const mfem::Vector &, mfem::Vector &, const double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::AddMultTranspose(const mfem::Vector &, mfem::Vector &, const double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:721:17
    t.method("AddMultTranspose", [](mfem::MixedBilinearForm const& a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a.AddMultTranspose(arg0, arg1); });
    t.method("AddMultTranspose", [](mfem::MixedBilinearForm const& a, const mfem::Vector & arg0, mfem::Vector & arg1, const double arg2)->void { a.AddMultTranspose(arg0, arg1, arg2); });
    t.method("AddMultTranspose", [](mfem::MixedBilinearForm const* a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a->AddMultTranspose(arg0, arg1); });
    t.method("AddMultTranspose", [](mfem::MixedBilinearForm const* a, const mfem::Vector & arg0, mfem::Vector & arg1, const double arg2)->void { a->AddMultTranspose(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for mfem::MatrixInverse * mfem::MixedBilinearForm::Inverse() (" __HERE__ ")");
    // signature to use in the veto list: mfem::MatrixInverse * mfem::MixedBilinearForm::Inverse()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:724:27
    t.method("Inverse", [](mfem::MixedBilinearForm const& a)->mfem::MatrixInverse * { return a.Inverse(); });
    t.method("Inverse", [](mfem::MixedBilinearForm const* a)->mfem::MatrixInverse * { return a->Inverse(); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::Finalize(int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::Finalize(int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:727:17
    t.method("Finalize", [](mfem::MixedBilinearForm& a)->void { a.Finalize(); });
    t.method("Finalize", [](mfem::MixedBilinearForm& a, int arg0)->void { a.Finalize(arg0); });
    t.method("Finalize", [](mfem::MixedBilinearForm* a)->void { a->Finalize(); });
    t.method("Finalize", [](mfem::MixedBilinearForm* a, int arg0)->void { a->Finalize(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::GetBlocks(mfem::Array2D<mfem::SparseMatrix *> &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::GetBlocks(mfem::Array2D<mfem::SparseMatrix *> &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:732:9
    t.method("GetBlocks", [](mfem::MixedBilinearForm const& a, mfem::Array2D<mfem::SparseMatrix *> & arg0)->void { a.GetBlocks(arg0); });
    t.method("GetBlocks", [](mfem::MixedBilinearForm const* a, mfem::Array2D<mfem::SparseMatrix *> & arg0)->void { a->GetBlocks(arg0); });

    DEBUG_MSG("Adding wrapper for const mfem::SparseMatrix & mfem::MixedBilinearForm::SpMat() (" __HERE__ ")");
    // signature to use in the veto list: const mfem::SparseMatrix & mfem::MixedBilinearForm::SpMat()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:735:24
    t.method("SpMat", [](mfem::MixedBilinearForm const& a)->const mfem::SparseMatrix & { return a.SpMat(); });
    t.method("SpMat", [](mfem::MixedBilinearForm const* a)->const mfem::SparseMatrix & { return a->SpMat(); });

    DEBUG_MSG("Adding wrapper for mfem::SparseMatrix & mfem::MixedBilinearForm::SpMat() (" __HERE__ ")");
    // signature to use in the veto list: mfem::SparseMatrix & mfem::MixedBilinearForm::SpMat()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:738:18
    t.method("SpMat", [](mfem::MixedBilinearForm& a)->mfem::SparseMatrix & { return a.SpMat(); });
    t.method("SpMat", [](mfem::MixedBilinearForm* a)->mfem::SparseMatrix & { return a->SpMat(); });

    DEBUG_MSG("Adding wrapper for mfem::SparseMatrix * mfem::MixedBilinearForm::LoseMat() (" __HERE__ ")");
    // signature to use in the veto list: mfem::SparseMatrix * mfem::MixedBilinearForm::LoseMat()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:742:18
    t.method("LoseMat", [](mfem::MixedBilinearForm& a)->mfem::SparseMatrix * { return a.LoseMat(); });
    t.method("LoseMat", [](mfem::MixedBilinearForm* a)->mfem::SparseMatrix * { return a->LoseMat(); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::AddDomainIntegrator(mfem::BilinearFormIntegrator *) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::AddDomainIntegrator(mfem::BilinearFormIntegrator *)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:745:9
    t.method("AddDomainIntegrator", [](mfem::MixedBilinearForm& a, mfem::BilinearFormIntegrator * arg0)->void { a.AddDomainIntegrator(arg0); });
    t.method("AddDomainIntegrator", [](mfem::MixedBilinearForm* a, mfem::BilinearFormIntegrator * arg0)->void { a->AddDomainIntegrator(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::AddBoundaryIntegrator(mfem::BilinearFormIntegrator *) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::AddBoundaryIntegrator(mfem::BilinearFormIntegrator *)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:748:9
    t.method("AddBoundaryIntegrator", [](mfem::MixedBilinearForm& a, mfem::BilinearFormIntegrator * arg0)->void { a.AddBoundaryIntegrator(arg0); });
    t.method("AddBoundaryIntegrator", [](mfem::MixedBilinearForm* a, mfem::BilinearFormIntegrator * arg0)->void { a->AddBoundaryIntegrator(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::AddBoundaryIntegrator(mfem::BilinearFormIntegrator *, mfem::Array<int> &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::AddBoundaryIntegrator(mfem::BilinearFormIntegrator *, mfem::Array<int> &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:751:9
    t.method("AddBoundaryIntegrator", [](mfem::MixedBilinearForm& a, mfem::BilinearFormIntegrator * arg0, mfem::Array<int> & arg1)->void { a.AddBoundaryIntegrator(arg0, arg1); });
    t.method("AddBoundaryIntegrator", [](mfem::MixedBilinearForm* a, mfem::BilinearFormIntegrator * arg0, mfem::Array<int> & arg1)->void { a->AddBoundaryIntegrator(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::AddTraceFaceIntegrator(mfem::BilinearFormIntegrator *) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::AddTraceFaceIntegrator(mfem::BilinearFormIntegrator *)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:759:9
    t.method("AddTraceFaceIntegrator", [](mfem::MixedBilinearForm& a, mfem::BilinearFormIntegrator * arg0)->void { a.AddTraceFaceIntegrator(arg0); });
    t.method("AddTraceFaceIntegrator", [](mfem::MixedBilinearForm* a, mfem::BilinearFormIntegrator * arg0)->void { a->AddTraceFaceIntegrator(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::AddBdrTraceFaceIntegrator(mfem::BilinearFormIntegrator *) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::AddBdrTraceFaceIntegrator(mfem::BilinearFormIntegrator *)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:762:9
    t.method("AddBdrTraceFaceIntegrator", [](mfem::MixedBilinearForm& a, mfem::BilinearFormIntegrator * arg0)->void { a.AddBdrTraceFaceIntegrator(arg0); });
    t.method("AddBdrTraceFaceIntegrator", [](mfem::MixedBilinearForm* a, mfem::BilinearFormIntegrator * arg0)->void { a->AddBdrTraceFaceIntegrator(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::AddBdrTraceFaceIntegrator(mfem::BilinearFormIntegrator *, mfem::Array<int> &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::AddBdrTraceFaceIntegrator(mfem::BilinearFormIntegrator *, mfem::Array<int> &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:765:9
    t.method("AddBdrTraceFaceIntegrator", [](mfem::MixedBilinearForm& a, mfem::BilinearFormIntegrator * arg0, mfem::Array<int> & arg1)->void { a.AddBdrTraceFaceIntegrator(arg0, arg1); });
    t.method("AddBdrTraceFaceIntegrator", [](mfem::MixedBilinearForm* a, mfem::BilinearFormIntegrator * arg0, mfem::Array<int> & arg1)->void { a->AddBdrTraceFaceIntegrator(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for mfem::Array<mfem::BilinearFormIntegrator *> * mfem::MixedBilinearForm::GetDBFI() (" __HERE__ ")");
    // signature to use in the veto list: mfem::Array<mfem::BilinearFormIntegrator *> * mfem::MixedBilinearForm::GetDBFI()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:769:36
    t.method("GetDBFI", [](mfem::MixedBilinearForm& a)->mfem::Array<mfem::BilinearFormIntegrator *> * { return a.GetDBFI(); });
    t.method("GetDBFI", [](mfem::MixedBilinearForm* a)->mfem::Array<mfem::BilinearFormIntegrator *> * { return a->GetDBFI(); });

    DEBUG_MSG("Adding wrapper for mfem::Array<mfem::BilinearFormIntegrator *> * mfem::MixedBilinearForm::GetBBFI() (" __HERE__ ")");
    // signature to use in the veto list: mfem::Array<mfem::BilinearFormIntegrator *> * mfem::MixedBilinearForm::GetBBFI()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:772:36
    t.method("GetBBFI", [](mfem::MixedBilinearForm& a)->mfem::Array<mfem::BilinearFormIntegrator *> * { return a.GetBBFI(); });
    t.method("GetBBFI", [](mfem::MixedBilinearForm* a)->mfem::Array<mfem::BilinearFormIntegrator *> * { return a->GetBBFI(); });

    DEBUG_MSG("Adding wrapper for mfem::Array<mfem::Array<int> *> * mfem::MixedBilinearForm::GetBBFI_Marker() (" __HERE__ ")");
    // signature to use in the veto list: mfem::Array<mfem::Array<int> *> * mfem::MixedBilinearForm::GetBBFI_Marker()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:776:24
    t.method("GetBBFI_Marker", [](mfem::MixedBilinearForm& a)->mfem::Array<mfem::Array<int> *> * { return a.GetBBFI_Marker(); });
    t.method("GetBBFI_Marker", [](mfem::MixedBilinearForm* a)->mfem::Array<mfem::Array<int> *> * { return a->GetBBFI_Marker(); });

    DEBUG_MSG("Adding wrapper for mfem::Array<mfem::BilinearFormIntegrator *> * mfem::MixedBilinearForm::GetTFBFI() (" __HERE__ ")");
    // signature to use in the veto list: mfem::Array<mfem::BilinearFormIntegrator *> * mfem::MixedBilinearForm::GetTFBFI()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:779:36
    t.method("GetTFBFI", [](mfem::MixedBilinearForm& a)->mfem::Array<mfem::BilinearFormIntegrator *> * { return a.GetTFBFI(); });
    t.method("GetTFBFI", [](mfem::MixedBilinearForm* a)->mfem::Array<mfem::BilinearFormIntegrator *> * { return a->GetTFBFI(); });

    DEBUG_MSG("Adding wrapper for mfem::Array<mfem::BilinearFormIntegrator *> * mfem::MixedBilinearForm::GetBTFBFI() (" __HERE__ ")");
    // signature to use in the veto list: mfem::Array<mfem::BilinearFormIntegrator *> * mfem::MixedBilinearForm::GetBTFBFI()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:782:36
    t.method("GetBTFBFI", [](mfem::MixedBilinearForm& a)->mfem::Array<mfem::BilinearFormIntegrator *> * { return a.GetBTFBFI(); });
    t.method("GetBTFBFI", [](mfem::MixedBilinearForm* a)->mfem::Array<mfem::BilinearFormIntegrator *> * { return a->GetBTFBFI(); });

    DEBUG_MSG("Adding wrapper for mfem::Array<mfem::Array<int> *> * mfem::MixedBilinearForm::GetBTFBFI_Marker() (" __HERE__ ")");
    // signature to use in the veto list: mfem::Array<mfem::Array<int> *> * mfem::MixedBilinearForm::GetBTFBFI_Marker()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:787:24
    t.method("GetBTFBFI_Marker", [](mfem::MixedBilinearForm& a)->mfem::Array<mfem::Array<int> *> * { return a.GetBTFBFI_Marker(); });
    t.method("GetBTFBFI_Marker", [](mfem::MixedBilinearForm* a)->mfem::Array<mfem::Array<int> *> * { return a->GetBTFBFI_Marker(); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::operator=(const double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::operator=(const double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:791:9
    t.method("assign", [](mfem::MixedBilinearForm& a, const double arg0)->void { a.operator=(arg0); });
    t.method("assign", [](mfem::MixedBilinearForm* a, const double arg0)->void { a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::SetAssemblyLevel(mfem::AssemblyLevel) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::SetAssemblyLevel(mfem::AssemblyLevel)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:795:9
    t.method("SetAssemblyLevel", [](mfem::MixedBilinearForm& a, mfem::AssemblyLevel arg0)->void { a.SetAssemblyLevel(arg0); });
    t.method("SetAssemblyLevel", [](mfem::MixedBilinearForm* a, mfem::AssemblyLevel arg0)->void { a->SetAssemblyLevel(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::Assemble(int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::Assemble(int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:797:9
    t.method("Assemble", [](mfem::MixedBilinearForm& a)->void { a.Assemble(); });
    t.method("Assemble", [](mfem::MixedBilinearForm& a, int arg0)->void { a.Assemble(arg0); });
    t.method("Assemble", [](mfem::MixedBilinearForm* a)->void { a->Assemble(); });
    t.method("Assemble", [](mfem::MixedBilinearForm* a, int arg0)->void { a->Assemble(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::AssembleDiagonal_ADAt(const mfem::Vector &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::AssembleDiagonal_ADAt(const mfem::Vector &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:801:9
    t.method("AssembleDiagonal_ADAt", [](mfem::MixedBilinearForm const& a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a.AssembleDiagonal_ADAt(arg0, arg1); });
    t.method("AssembleDiagonal_ADAt", [](mfem::MixedBilinearForm const* a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a->AssembleDiagonal_ADAt(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for const mfem::Operator * mfem::MixedBilinearForm::GetProlongation() (" __HERE__ ")");
    // signature to use in the veto list: const mfem::Operator * mfem::MixedBilinearForm::GetProlongation()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:804:28
    t.method("GetProlongation", [](mfem::MixedBilinearForm const& a)->const mfem::Operator * { return a.GetProlongation(); });
    t.method("GetProlongation", [](mfem::MixedBilinearForm const* a)->const mfem::Operator * { return a->GetProlongation(); });

    DEBUG_MSG("Adding wrapper for const mfem::Operator * mfem::MixedBilinearForm::GetRestriction() (" __HERE__ ")");
    // signature to use in the veto list: const mfem::Operator * mfem::MixedBilinearForm::GetRestriction()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:808:28
    t.method("GetRestriction", [](mfem::MixedBilinearForm const& a)->const mfem::Operator * { return a.GetRestriction(); });
    t.method("GetRestriction", [](mfem::MixedBilinearForm const* a)->const mfem::Operator * { return a->GetRestriction(); });

    DEBUG_MSG("Adding wrapper for const mfem::Operator * mfem::MixedBilinearForm::GetOutputProlongation() (" __HERE__ ")");
    // signature to use in the veto list: const mfem::Operator * mfem::MixedBilinearForm::GetOutputProlongation()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:812:28
    t.method("GetOutputProlongation", [](mfem::MixedBilinearForm const& a)->const mfem::Operator * { return a.GetOutputProlongation(); });
    t.method("GetOutputProlongation", [](mfem::MixedBilinearForm const* a)->const mfem::Operator * { return a->GetOutputProlongation(); });

    DEBUG_MSG("Adding wrapper for const mfem::Operator * mfem::MixedBilinearForm::GetOutputRestriction() (" __HERE__ ")");
    // signature to use in the veto list: const mfem::Operator * mfem::MixedBilinearForm::GetOutputRestriction()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:816:28
    t.method("GetOutputRestriction", [](mfem::MixedBilinearForm const& a)->const mfem::Operator * { return a.GetOutputRestriction(); });
    t.method("GetOutputRestriction", [](mfem::MixedBilinearForm const* a)->const mfem::Operator * { return a->GetOutputRestriction(); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::ConformingAssemble() (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::ConformingAssemble()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:824:9
    t.method("ConformingAssemble", [](mfem::MixedBilinearForm& a)->void { a.ConformingAssemble(); });
    t.method("ConformingAssemble", [](mfem::MixedBilinearForm* a)->void { a->ConformingAssemble(); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::ComputeElementMatrix(int, mfem::DenseMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::ComputeElementMatrix(int, mfem::DenseMatrix &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:827:9
    t.method("ComputeElementMatrix", [](mfem::MixedBilinearForm& a, int arg0, mfem::DenseMatrix & arg1)->void { a.ComputeElementMatrix(arg0, arg1); });
    t.method("ComputeElementMatrix", [](mfem::MixedBilinearForm* a, int arg0, mfem::DenseMatrix & arg1)->void { a->ComputeElementMatrix(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::ComputeBdrElementMatrix(int, mfem::DenseMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::ComputeBdrElementMatrix(int, mfem::DenseMatrix &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:830:9
    t.method("ComputeBdrElementMatrix", [](mfem::MixedBilinearForm& a, int arg0, mfem::DenseMatrix & arg1)->void { a.ComputeBdrElementMatrix(arg0, arg1); });
    t.method("ComputeBdrElementMatrix", [](mfem::MixedBilinearForm* a, int arg0, mfem::DenseMatrix & arg1)->void { a->ComputeBdrElementMatrix(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::AssembleElementMatrix(int, const mfem::DenseMatrix &, int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::AssembleElementMatrix(int, const mfem::DenseMatrix &, int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:838:9
    t.method("AssembleElementMatrix", [](mfem::MixedBilinearForm& a, int arg0, const mfem::DenseMatrix & arg1)->void { a.AssembleElementMatrix(arg0, arg1); });
    t.method("AssembleElementMatrix", [](mfem::MixedBilinearForm& a, int arg0, const mfem::DenseMatrix & arg1, int arg2)->void { a.AssembleElementMatrix(arg0, arg1, arg2); });
    t.method("AssembleElementMatrix", [](mfem::MixedBilinearForm* a, int arg0, const mfem::DenseMatrix & arg1)->void { a->AssembleElementMatrix(arg0, arg1); });
    t.method("AssembleElementMatrix", [](mfem::MixedBilinearForm* a, int arg0, const mfem::DenseMatrix & arg1, int arg2)->void { a->AssembleElementMatrix(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::AssembleElementMatrix(int, const mfem::DenseMatrix &, mfem::Array<int> &, mfem::Array<int> &, int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::AssembleElementMatrix(int, const mfem::DenseMatrix &, mfem::Array<int> &, mfem::Array<int> &, int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:848:9
    t.method("AssembleElementMatrix", [](mfem::MixedBilinearForm& a, int arg0, const mfem::DenseMatrix & arg1, mfem::Array<int> & arg2, mfem::Array<int> & arg3)->void { a.AssembleElementMatrix(arg0, arg1, arg2, arg3); });
    t.method("AssembleElementMatrix", [](mfem::MixedBilinearForm& a, int arg0, const mfem::DenseMatrix & arg1, mfem::Array<int> & arg2, mfem::Array<int> & arg3, int arg4)->void { a.AssembleElementMatrix(arg0, arg1, arg2, arg3, arg4); });
    t.method("AssembleElementMatrix", [](mfem::MixedBilinearForm* a, int arg0, const mfem::DenseMatrix & arg1, mfem::Array<int> & arg2, mfem::Array<int> & arg3)->void { a->AssembleElementMatrix(arg0, arg1, arg2, arg3); });
    t.method("AssembleElementMatrix", [](mfem::MixedBilinearForm* a, int arg0, const mfem::DenseMatrix & arg1, mfem::Array<int> & arg2, mfem::Array<int> & arg3, int arg4)->void { a->AssembleElementMatrix(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::AssembleBdrElementMatrix(int, const mfem::DenseMatrix &, int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::AssembleBdrElementMatrix(int, const mfem::DenseMatrix &, int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:858:9
    t.method("AssembleBdrElementMatrix", [](mfem::MixedBilinearForm& a, int arg0, const mfem::DenseMatrix & arg1)->void { a.AssembleBdrElementMatrix(arg0, arg1); });
    t.method("AssembleBdrElementMatrix", [](mfem::MixedBilinearForm& a, int arg0, const mfem::DenseMatrix & arg1, int arg2)->void { a.AssembleBdrElementMatrix(arg0, arg1, arg2); });
    t.method("AssembleBdrElementMatrix", [](mfem::MixedBilinearForm* a, int arg0, const mfem::DenseMatrix & arg1)->void { a->AssembleBdrElementMatrix(arg0, arg1); });
    t.method("AssembleBdrElementMatrix", [](mfem::MixedBilinearForm* a, int arg0, const mfem::DenseMatrix & arg1, int arg2)->void { a->AssembleBdrElementMatrix(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::AssembleBdrElementMatrix(int, const mfem::DenseMatrix &, mfem::Array<int> &, mfem::Array<int> &, int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::AssembleBdrElementMatrix(int, const mfem::DenseMatrix &, mfem::Array<int> &, mfem::Array<int> &, int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:868:9
    t.method("AssembleBdrElementMatrix", [](mfem::MixedBilinearForm& a, int arg0, const mfem::DenseMatrix & arg1, mfem::Array<int> & arg2, mfem::Array<int> & arg3)->void { a.AssembleBdrElementMatrix(arg0, arg1, arg2, arg3); });
    t.method("AssembleBdrElementMatrix", [](mfem::MixedBilinearForm& a, int arg0, const mfem::DenseMatrix & arg1, mfem::Array<int> & arg2, mfem::Array<int> & arg3, int arg4)->void { a.AssembleBdrElementMatrix(arg0, arg1, arg2, arg3, arg4); });
    t.method("AssembleBdrElementMatrix", [](mfem::MixedBilinearForm* a, int arg0, const mfem::DenseMatrix & arg1, mfem::Array<int> & arg2, mfem::Array<int> & arg3)->void { a->AssembleBdrElementMatrix(arg0, arg1, arg2, arg3); });
    t.method("AssembleBdrElementMatrix", [](mfem::MixedBilinearForm* a, int arg0, const mfem::DenseMatrix & arg1, mfem::Array<int> & arg2, mfem::Array<int> & arg3, int arg4)->void { a->AssembleBdrElementMatrix(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::EliminateTrialDofs(const mfem::Array<int> &, const mfem::Vector &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::EliminateTrialDofs(const mfem::Array<int> &, const mfem::Vector &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:872:9
    t.method("EliminateTrialDofs", [](mfem::MixedBilinearForm& a, const mfem::Array<int> & arg0, const mfem::Vector & arg1, mfem::Vector & arg2)->void { a.EliminateTrialDofs(arg0, arg1, arg2); });
    t.method("EliminateTrialDofs", [](mfem::MixedBilinearForm* a, const mfem::Array<int> & arg0, const mfem::Vector & arg1, mfem::Vector & arg2)->void { a->EliminateTrialDofs(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::EliminateEssentialBCFromTrialDofs(const mfem::Array<int> &, const mfem::Vector &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::EliminateEssentialBCFromTrialDofs(const mfem::Array<int> &, const mfem::Vector &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:875:9
    t.method("EliminateEssentialBCFromTrialDofs", [](mfem::MixedBilinearForm& a, const mfem::Array<int> & arg0, const mfem::Vector & arg1, mfem::Vector & arg2)->void { a.EliminateEssentialBCFromTrialDofs(arg0, arg1, arg2); });
    t.method("EliminateEssentialBCFromTrialDofs", [](mfem::MixedBilinearForm* a, const mfem::Array<int> & arg0, const mfem::Vector & arg1, mfem::Vector & arg2)->void { a->EliminateEssentialBCFromTrialDofs(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::EliminateTestDofs(const mfem::Array<int> &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::EliminateTestDofs(const mfem::Array<int> &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:878:17
    t.method("EliminateTestDofs", [](mfem::MixedBilinearForm& a, const mfem::Array<int> & arg0)->void { a.EliminateTestDofs(arg0); });
    t.method("EliminateTestDofs", [](mfem::MixedBilinearForm* a, const mfem::Array<int> & arg0)->void { a->EliminateTestDofs(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::FormRectangularSystemMatrix(const mfem::Array<int> &, const mfem::Array<int> &, mfem::OperatorHandle &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::FormRectangularSystemMatrix(const mfem::Array<int> &, const mfem::Array<int> &, mfem::OperatorHandle &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:884:17
    t.method("FormRectangularSystemMatrix", [](mfem::MixedBilinearForm& a, const mfem::Array<int> & arg0, const mfem::Array<int> & arg1, mfem::OperatorHandle & arg2)->void { a.FormRectangularSystemMatrix(arg0, arg1, arg2); });
    t.method("FormRectangularSystemMatrix", [](mfem::MixedBilinearForm* a, const mfem::Array<int> & arg0, const mfem::Array<int> & arg1, mfem::OperatorHandle & arg2)->void { a->FormRectangularSystemMatrix(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::FormRectangularLinearSystem(const mfem::Array<int> &, const mfem::Array<int> &, mfem::Vector &, mfem::Vector &, mfem::OperatorHandle &, mfem::Vector &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::FormRectangularLinearSystem(const mfem::Array<int> &, const mfem::Array<int> &, mfem::Vector &, mfem::Vector &, mfem::OperatorHandle &, mfem::Vector &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:913:17
    t.method("FormRectangularLinearSystem", [](mfem::MixedBilinearForm& a, const mfem::Array<int> & arg0, const mfem::Array<int> & arg1, mfem::Vector & arg2, mfem::Vector & arg3, mfem::OperatorHandle & arg4, mfem::Vector & arg5, mfem::Vector & arg6)->void { a.FormRectangularLinearSystem(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });
    t.method("FormRectangularLinearSystem", [](mfem::MixedBilinearForm* a, const mfem::Array<int> & arg0, const mfem::Array<int> & arg1, mfem::Vector & arg2, mfem::Vector & arg3, mfem::OperatorHandle & arg4, mfem::Vector & arg5, mfem::Vector & arg6)->void { a->FormRectangularLinearSystem(arg0, arg1, arg2, arg3, arg4, arg5, arg6); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedBilinearForm::Update() (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedBilinearForm::Update()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:940:9
    t.method("Update", [](mfem::MixedBilinearForm& a)->void { a.Update(); });
    t.method("Update", [](mfem::MixedBilinearForm* a)->void { a->Update(); });

    DEBUG_MSG("Adding wrapper for mfem::FiniteElementSpace * mfem::MixedBilinearForm::TrialFESpace() (" __HERE__ ")");
    // signature to use in the veto list: mfem::FiniteElementSpace * mfem::MixedBilinearForm::TrialFESpace()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:943:24
    t.method("TrialFESpace", [](mfem::MixedBilinearForm& a)->mfem::FiniteElementSpace * { return a.TrialFESpace(); });
    t.method("TrialFESpace", [](mfem::MixedBilinearForm* a)->mfem::FiniteElementSpace * { return a->TrialFESpace(); });

    DEBUG_MSG("Adding wrapper for const mfem::FiniteElementSpace * mfem::MixedBilinearForm::TrialFESpace() (" __HERE__ ")");
    // signature to use in the veto list: const mfem::FiniteElementSpace * mfem::MixedBilinearForm::TrialFESpace()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:945:30
    t.method("TrialFESpace", [](mfem::MixedBilinearForm const& a)->const mfem::FiniteElementSpace * { return a.TrialFESpace(); });
    t.method("TrialFESpace", [](mfem::MixedBilinearForm const* a)->const mfem::FiniteElementSpace * { return a->TrialFESpace(); });

    DEBUG_MSG("Adding wrapper for mfem::FiniteElementSpace * mfem::MixedBilinearForm::TestFESpace() (" __HERE__ ")");
    // signature to use in the veto list: mfem::FiniteElementSpace * mfem::MixedBilinearForm::TestFESpace()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:948:24
    t.method("TestFESpace", [](mfem::MixedBilinearForm& a)->mfem::FiniteElementSpace * { return a.TestFESpace(); });
    t.method("TestFESpace", [](mfem::MixedBilinearForm* a)->mfem::FiniteElementSpace * { return a->TestFESpace(); });

    DEBUG_MSG("Adding wrapper for const mfem::FiniteElementSpace * mfem::MixedBilinearForm::TestFESpace() (" __HERE__ ")");
    // signature to use in the veto list: const mfem::FiniteElementSpace * mfem::MixedBilinearForm::TestFESpace()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:950:30
    t.method("TestFESpace", [](mfem::MixedBilinearForm const& a)->const mfem::FiniteElementSpace * { return a.TestFESpace(); });
    t.method("TestFESpace", [](mfem::MixedBilinearForm const* a)->const mfem::FiniteElementSpace * { return a->TestFESpace(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<mfem::MixedBilinearForm>> type_;
};
std::shared_ptr<Wrapper> newJlmfem_MixedBilinearForm(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new Jlmfem_MixedBilinearForm(module));
}
