// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jllibMFEM.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<mfem::ScalarVectorProductCoefficient> : std::false_type { };
  template<> struct DefaultConstructible<mfem::ScalarVectorProductCoefficient> : std::false_type { };
template<> struct SuperType<mfem::ScalarVectorProductCoefficient> { typedef mfem::VectorCoefficient type; };
}

// Class generating the wrapper for type mfem::ScalarVectorProductCoefficient
// signature to use in the veto file: mfem::ScalarVectorProductCoefficient
struct Jlmfem_ScalarVectorProductCoefficient: public Wrapper {

  Jlmfem_ScalarVectorProductCoefficient(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type mfem::ScalarVectorProductCoefficient (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1654:7
    jlcxx::TypeWrapper<mfem::ScalarVectorProductCoefficient>  t = jlModule.add_type<mfem::ScalarVectorProductCoefficient>("mfem!ScalarVectorProductCoefficient",
      jlcxx::julia_base_type<mfem::VectorCoefficient>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<mfem::ScalarVectorProductCoefficient>>(new jlcxx::TypeWrapper<mfem::ScalarVectorProductCoefficient>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void mfem::ScalarVectorProductCoefficient::ScalarVectorProductCoefficient(double, mfem::VectorCoefficient &) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1663:4
    t.constructor<double, mfem::VectorCoefficient &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::ScalarVectorProductCoefficient::ScalarVectorProductCoefficient(mfem::Coefficient &, mfem::VectorCoefficient &) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1666:4
    t.constructor<mfem::Coefficient &, mfem::VectorCoefficient &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void mfem::ScalarVectorProductCoefficient::SetTime(double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ScalarVectorProductCoefficient::SetTime(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1669:9
    t.method("SetTime", [](mfem::ScalarVectorProductCoefficient& a, double arg0)->void { a.SetTime(arg0); });
    t.method("SetTime", [](mfem::ScalarVectorProductCoefficient* a, double arg0)->void { a->SetTime(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::ScalarVectorProductCoefficient::SetAConst(double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ScalarVectorProductCoefficient::SetAConst(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1672:9
    t.method("SetAConst", [](mfem::ScalarVectorProductCoefficient& a, double arg0)->void { a.SetAConst(arg0); });
    t.method("SetAConst", [](mfem::ScalarVectorProductCoefficient* a, double arg0)->void { a->SetAConst(arg0); });

    DEBUG_MSG("Adding wrapper for double mfem::ScalarVectorProductCoefficient::GetAConst() (" __HERE__ ")");
    // signature to use in the veto list: double mfem::ScalarVectorProductCoefficient::GetAConst()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1674:11
    t.method("GetAConst", [](mfem::ScalarVectorProductCoefficient const& a)->double { return a.GetAConst(); });
    t.method("GetAConst", [](mfem::ScalarVectorProductCoefficient const* a)->double { return a->GetAConst(); });

    DEBUG_MSG("Adding wrapper for void mfem::ScalarVectorProductCoefficient::SetACoef(mfem::Coefficient &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ScalarVectorProductCoefficient::SetACoef(mfem::Coefficient &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1677:9
    t.method("SetACoef", [](mfem::ScalarVectorProductCoefficient& a, mfem::Coefficient & arg0)->void { a.SetACoef(arg0); });
    t.method("SetACoef", [](mfem::ScalarVectorProductCoefficient* a, mfem::Coefficient & arg0)->void { a->SetACoef(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::Coefficient * mfem::ScalarVectorProductCoefficient::GetACoef() (" __HERE__ ")");
    // signature to use in the veto list: mfem::Coefficient * mfem::ScalarVectorProductCoefficient::GetACoef()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1679:18
    t.method("GetACoef", [](mfem::ScalarVectorProductCoefficient const& a)->mfem::Coefficient * { return a.GetACoef(); });
    t.method("GetACoef", [](mfem::ScalarVectorProductCoefficient const* a)->mfem::Coefficient * { return a->GetACoef(); });

    DEBUG_MSG("Adding wrapper for void mfem::ScalarVectorProductCoefficient::SetBCoef(mfem::VectorCoefficient &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ScalarVectorProductCoefficient::SetBCoef(mfem::VectorCoefficient &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1682:9
    t.method("SetBCoef", [](mfem::ScalarVectorProductCoefficient& a, mfem::VectorCoefficient & arg0)->void { a.SetBCoef(arg0); });
    t.method("SetBCoef", [](mfem::ScalarVectorProductCoefficient* a, mfem::VectorCoefficient & arg0)->void { a->SetBCoef(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::VectorCoefficient * mfem::ScalarVectorProductCoefficient::GetBCoef() (" __HERE__ ")");
    // signature to use in the veto list: mfem::VectorCoefficient * mfem::ScalarVectorProductCoefficient::GetBCoef()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1684:24
    t.method("GetBCoef", [](mfem::ScalarVectorProductCoefficient const& a)->mfem::VectorCoefficient * { return a.GetBCoef(); });
    t.method("GetBCoef", [](mfem::ScalarVectorProductCoefficient const* a)->mfem::VectorCoefficient * { return a->GetBCoef(); });

    DEBUG_MSG("Adding wrapper for void mfem::ScalarVectorProductCoefficient::Eval(mfem::Vector &, mfem::ElementTransformation &, const mfem::IntegrationPoint &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ScalarVectorProductCoefficient::Eval(mfem::Vector &, mfem::ElementTransformation &, const mfem::IntegrationPoint &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1687:17
    t.method("Eval", [](mfem::ScalarVectorProductCoefficient& a, mfem::Vector & arg0, mfem::ElementTransformation & arg1, const mfem::IntegrationPoint & arg2)->void { a.Eval(arg0, arg1, arg2); });
    t.method("Eval", [](mfem::ScalarVectorProductCoefficient* a, mfem::Vector & arg0, mfem::ElementTransformation & arg1, const mfem::IntegrationPoint & arg2)->void { a->Eval(arg0, arg1, arg2); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<mfem::ScalarVectorProductCoefficient>> type_;
};
std::shared_ptr<Wrapper> newJlmfem_ScalarVectorProductCoefficient(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new Jlmfem_ScalarVectorProductCoefficient(module));
}
