// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jllibMFEM.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<mfem::MatrixProductCoefficient> : std::false_type { };
  template<> struct DefaultConstructible<mfem::MatrixProductCoefficient> : std::false_type { };
template<> struct SuperType<mfem::MatrixProductCoefficient> { typedef mfem::MatrixCoefficient type; };
}

// Class generating the wrapper for type mfem::MatrixProductCoefficient
// signature to use in the veto file: mfem::MatrixProductCoefficient
struct Jlmfem_MatrixProductCoefficient: public Wrapper {

  Jlmfem_MatrixProductCoefficient(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type mfem::MatrixProductCoefficient (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1855:7
    jlcxx::TypeWrapper<mfem::MatrixProductCoefficient>  t = jlModule.add_type<mfem::MatrixProductCoefficient>("mfem!MatrixProductCoefficient",
      jlcxx::julia_base_type<mfem::MatrixCoefficient>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<mfem::MatrixProductCoefficient>>(new jlcxx::TypeWrapper<mfem::MatrixProductCoefficient>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void mfem::MatrixProductCoefficient::MatrixProductCoefficient(mfem::MatrixCoefficient &, mfem::MatrixCoefficient &) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1866:4
    t.constructor<mfem::MatrixCoefficient &, mfem::MatrixCoefficient &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void mfem::MatrixProductCoefficient::SetACoef(mfem::MatrixCoefficient &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MatrixProductCoefficient::SetACoef(mfem::MatrixCoefficient &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1869:9
    t.method("SetACoef", [](mfem::MatrixProductCoefficient& a, mfem::MatrixCoefficient & arg0)->void { a.SetACoef(arg0); });
    t.method("SetACoef", [](mfem::MatrixProductCoefficient* a, mfem::MatrixCoefficient & arg0)->void { a->SetACoef(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::MatrixCoefficient * mfem::MatrixProductCoefficient::GetACoef() (" __HERE__ ")");
    // signature to use in the veto list: mfem::MatrixCoefficient * mfem::MatrixProductCoefficient::GetACoef()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1871:24
    t.method("GetACoef", [](mfem::MatrixProductCoefficient const& a)->mfem::MatrixCoefficient * { return a.GetACoef(); });
    t.method("GetACoef", [](mfem::MatrixProductCoefficient const* a)->mfem::MatrixCoefficient * { return a->GetACoef(); });

    DEBUG_MSG("Adding wrapper for void mfem::MatrixProductCoefficient::SetBCoef(mfem::MatrixCoefficient &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MatrixProductCoefficient::SetBCoef(mfem::MatrixCoefficient &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1874:9
    t.method("SetBCoef", [](mfem::MatrixProductCoefficient& a, mfem::MatrixCoefficient & arg0)->void { a.SetBCoef(arg0); });
    t.method("SetBCoef", [](mfem::MatrixProductCoefficient* a, mfem::MatrixCoefficient & arg0)->void { a->SetBCoef(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::MatrixCoefficient * mfem::MatrixProductCoefficient::GetBCoef() (" __HERE__ ")");
    // signature to use in the veto list: mfem::MatrixCoefficient * mfem::MatrixProductCoefficient::GetBCoef()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1876:24
    t.method("GetBCoef", [](mfem::MatrixProductCoefficient const& a)->mfem::MatrixCoefficient * { return a.GetBCoef(); });
    t.method("GetBCoef", [](mfem::MatrixProductCoefficient const* a)->mfem::MatrixCoefficient * { return a->GetBCoef(); });

    DEBUG_MSG("Adding wrapper for void mfem::MatrixProductCoefficient::Eval(mfem::DenseMatrix &, mfem::ElementTransformation &, const mfem::IntegrationPoint &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MatrixProductCoefficient::Eval(mfem::DenseMatrix &, mfem::ElementTransformation &, const mfem::IntegrationPoint &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1879:17
    t.method("Eval", [](mfem::MatrixProductCoefficient& a, mfem::DenseMatrix & arg0, mfem::ElementTransformation & arg1, const mfem::IntegrationPoint & arg2)->void { a.Eval(arg0, arg1, arg2); });
    t.method("Eval", [](mfem::MatrixProductCoefficient* a, mfem::DenseMatrix & arg0, mfem::ElementTransformation & arg1, const mfem::IntegrationPoint & arg2)->void { a->Eval(arg0, arg1, arg2); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<mfem::MatrixProductCoefficient>> type_;
};
std::shared_ptr<Wrapper> newJlmfem_MatrixProductCoefficient(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new Jlmfem_MatrixProductCoefficient(module));
}
