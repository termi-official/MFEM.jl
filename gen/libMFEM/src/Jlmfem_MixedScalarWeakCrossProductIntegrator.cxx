// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jllibMFEM.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<mfem::MixedScalarWeakCrossProductIntegrator> : std::false_type { };
  template<> struct DefaultConstructible<mfem::MixedScalarWeakCrossProductIntegrator> : std::false_type { };
template<> struct SuperType<mfem::MixedScalarWeakCrossProductIntegrator> { typedef mfem::MixedScalarVectorIntegrator type; };
}

// Class generating the wrapper for type mfem::MixedScalarWeakCrossProductIntegrator
// signature to use in the veto file: mfem::MixedScalarWeakCrossProductIntegrator
struct Jlmfem_MixedScalarWeakCrossProductIntegrator: public Wrapper {

  Jlmfem_MixedScalarWeakCrossProductIntegrator(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type mfem::MixedScalarWeakCrossProductIntegrator (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:1622:7
    jlcxx::TypeWrapper<mfem::MixedScalarWeakCrossProductIntegrator>  t = jlModule.add_type<mfem::MixedScalarWeakCrossProductIntegrator>("mfem!MixedScalarWeakCrossProductIntegrator",
      jlcxx::julia_base_type<mfem::MixedScalarVectorIntegrator>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<mfem::MixedScalarWeakCrossProductIntegrator>>(new jlcxx::TypeWrapper<mfem::MixedScalarWeakCrossProductIntegrator>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void mfem::MixedScalarWeakCrossProductIntegrator::MixedScalarWeakCrossProductIntegrator(mfem::VectorCoefficient &) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:1625:4
    t.constructor<mfem::VectorCoefficient &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for bool mfem::MixedScalarWeakCrossProductIntegrator::VerifyFiniteElementTypes(const mfem::FiniteElement &, const mfem::FiniteElement &) (" __HERE__ ")");
    // signature to use in the veto list: bool mfem::MixedScalarWeakCrossProductIntegrator::VerifyFiniteElementTypes(const mfem::FiniteElement &, const mfem::FiniteElement &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:1628:24
    t.method("VerifyFiniteElementTypes", [](mfem::MixedScalarWeakCrossProductIntegrator const& a, const mfem::FiniteElement & arg0, const mfem::FiniteElement & arg1)->bool { return a.VerifyFiniteElementTypes(arg0, arg1); });
    t.method("VerifyFiniteElementTypes", [](mfem::MixedScalarWeakCrossProductIntegrator const* a, const mfem::FiniteElement & arg0, const mfem::FiniteElement & arg1)->bool { return a->VerifyFiniteElementTypes(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for const char * mfem::MixedScalarWeakCrossProductIntegrator::FiniteElementTypeFailureMessage() (" __HERE__ ")");
    // signature to use in the veto list: const char * mfem::MixedScalarWeakCrossProductIntegrator::FiniteElementTypeFailureMessage()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:1637:32
    t.method("FiniteElementTypeFailureMessage", [](mfem::MixedScalarWeakCrossProductIntegrator const& a) { return (std::string)a.FiniteElementTypeFailureMessage(); });
    t.method("FiniteElementTypeFailureMessage", [](mfem::MixedScalarWeakCrossProductIntegrator const* a) { return (std::string)a->FiniteElementTypeFailureMessage(); });

    DEBUG_MSG("Adding wrapper for void mfem::MixedScalarWeakCrossProductIntegrator::CalcShape(const mfem::FiniteElement &, mfem::ElementTransformation &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::MixedScalarWeakCrossProductIntegrator::CalcShape(const mfem::FiniteElement &, mfem::ElementTransformation &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilininteg.hpp:1644:24
    t.method("CalcShape", [](mfem::MixedScalarWeakCrossProductIntegrator& a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, mfem::Vector & arg2)->void { a.CalcShape(arg0, arg1, arg2); });
    t.method("CalcShape", [](mfem::MixedScalarWeakCrossProductIntegrator* a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, mfem::Vector & arg2)->void { a->CalcShape(arg0, arg1, arg2); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<mfem::MixedScalarWeakCrossProductIntegrator>> type_;
};
std::shared_ptr<Wrapper> newJlmfem_MixedScalarWeakCrossProductIntegrator(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new Jlmfem_MixedScalarWeakCrossProductIntegrator(module));
}
