// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jllibMFEM.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<mfem::ParaViewDataCollection> : std::false_type { };
  template<> struct DefaultConstructible<mfem::ParaViewDataCollection> : std::false_type { };
template<> struct SuperType<mfem::ParaViewDataCollection> { typedef mfem::DataCollection type; };
}

// Class generating the wrapper for type mfem::ParaViewDataCollection
// signature to use in the veto file: mfem::ParaViewDataCollection
struct Jlmfem_ParaViewDataCollection: public Wrapper {

  Jlmfem_ParaViewDataCollection(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type mfem::ParaViewDataCollection (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/fem/datacollection.hpp:484:7
    jlcxx::TypeWrapper<mfem::ParaViewDataCollection>  t = jlModule.add_type<mfem::ParaViewDataCollection>("mfem!ParaViewDataCollection",
      jlcxx::julia_base_type<mfem::DataCollection>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<mfem::ParaViewDataCollection>>(new jlcxx::TypeWrapper<mfem::ParaViewDataCollection>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void mfem::ParaViewDataCollection::ParaViewDataCollection(const std::string &, mfem::Mesh *) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/fem/datacollection.hpp:514:4
    t.constructor<const std::string &>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<const std::string &, mfem::Mesh *>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void mfem::ParaViewDataCollection::SetLevelsOfDetail(int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ParaViewDataCollection::SetLevelsOfDetail(int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/fem/datacollection.hpp:519:9
    t.method("SetLevelsOfDetail", [](mfem::ParaViewDataCollection& a, int arg0)->void { a.SetLevelsOfDetail(arg0); });
    t.method("SetLevelsOfDetail", [](mfem::ParaViewDataCollection* a, int arg0)->void { a->SetLevelsOfDetail(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::ParaViewDataCollection::Save() (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ParaViewDataCollection::Save()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/fem/datacollection.hpp:523:17
    t.method("Save", [](mfem::ParaViewDataCollection& a)->void { a.Save(); });
    t.method("Save", [](mfem::ParaViewDataCollection* a)->void { a->Save(); });

    DEBUG_MSG("Adding wrapper for void mfem::ParaViewDataCollection::SetDataFormat(mfem::VTKFormat) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ParaViewDataCollection::SetDataFormat(mfem::VTKFormat)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/fem/datacollection.hpp:529:9
    t.method("SetDataFormat", [](mfem::ParaViewDataCollection& a, mfem::VTKFormat arg0)->void { a.SetDataFormat(arg0); });
    t.method("SetDataFormat", [](mfem::ParaViewDataCollection* a, mfem::VTKFormat arg0)->void { a->SetDataFormat(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::ParaViewDataCollection::SetCompressionLevel(int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ParaViewDataCollection::SetCompressionLevel(int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/fem/datacollection.hpp:536:9
    t.method("SetCompressionLevel", [](mfem::ParaViewDataCollection& a, int arg0)->void { a.SetCompressionLevel(arg0); });
    t.method("SetCompressionLevel", [](mfem::ParaViewDataCollection* a, int arg0)->void { a->SetCompressionLevel(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::ParaViewDataCollection::SetCompression(bool) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ParaViewDataCollection::SetCompression(bool)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/fem/datacollection.hpp:541:9
    t.method("SetCompression", [](mfem::ParaViewDataCollection& a, bool arg0)->void { a.SetCompression(arg0); });
    t.method("SetCompression", [](mfem::ParaViewDataCollection* a, bool arg0)->void { a->SetCompression(arg0); });

    DEBUG_MSG("Adding wrapper for bool mfem::ParaViewDataCollection::IsBinaryFormat() (" __HERE__ ")");
    // signature to use in the veto list: bool mfem::ParaViewDataCollection::IsBinaryFormat()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/fem/datacollection.hpp:544:9
    t.method("IsBinaryFormat", [](mfem::ParaViewDataCollection const& a)->bool { return a.IsBinaryFormat(); });
    t.method("IsBinaryFormat", [](mfem::ParaViewDataCollection const* a)->bool { return a->IsBinaryFormat(); });

    DEBUG_MSG("Adding wrapper for void mfem::ParaViewDataCollection::SetHighOrderOutput(bool) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ParaViewDataCollection::SetHighOrderOutput(bool)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/fem/datacollection.hpp:548:9
    t.method("SetHighOrderOutput", [](mfem::ParaViewDataCollection& a, bool arg0)->void { a.SetHighOrderOutput(arg0); });
    t.method("SetHighOrderOutput", [](mfem::ParaViewDataCollection* a, bool arg0)->void { a->SetHighOrderOutput(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::ParaViewDataCollection::UseRestartMode(bool) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ParaViewDataCollection::UseRestartMode(bool)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/fem/datacollection.hpp:553:9
    t.method("UseRestartMode", [](mfem::ParaViewDataCollection& a, bool arg0)->void { a.UseRestartMode(arg0); });
    t.method("UseRestartMode", [](mfem::ParaViewDataCollection* a, bool arg0)->void { a->UseRestartMode(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::ParaViewDataCollection::Load(int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ParaViewDataCollection::Load(int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/fem/datacollection.hpp:556:17
    t.method("Load", [](mfem::ParaViewDataCollection& a)->void { a.Load(); });
    t.method("Load", [](mfem::ParaViewDataCollection& a, int arg0)->void { a.Load(arg0); });
    t.method("Load", [](mfem::ParaViewDataCollection* a)->void { a->Load(); });
    t.method("Load", [](mfem::ParaViewDataCollection* a, int arg0)->void { a->Load(arg0); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<mfem::ParaViewDataCollection>> type_;
};
std::shared_ptr<Wrapper> newJlmfem_ParaViewDataCollection(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new Jlmfem_ParaViewDataCollection(module));
}
