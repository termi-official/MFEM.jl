// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jllibMFEM.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<mfem::ScalarMatrixProductCoefficient> : std::false_type { };
  template<> struct DefaultConstructible<mfem::ScalarMatrixProductCoefficient> : std::false_type { };
template<> struct SuperType<mfem::ScalarMatrixProductCoefficient> { typedef mfem::MatrixCoefficient type; };
}

// Class generating the wrapper for type mfem::ScalarMatrixProductCoefficient
// signature to use in the veto file: mfem::ScalarMatrixProductCoefficient
struct Jlmfem_ScalarMatrixProductCoefficient: public Wrapper {

  Jlmfem_ScalarMatrixProductCoefficient(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type mfem::ScalarMatrixProductCoefficient (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1885:7
    jlcxx::TypeWrapper<mfem::ScalarMatrixProductCoefficient>  t = jlModule.add_type<mfem::ScalarMatrixProductCoefficient>("mfem!ScalarMatrixProductCoefficient",
      jlcxx::julia_base_type<mfem::MatrixCoefficient>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<mfem::ScalarMatrixProductCoefficient>>(new jlcxx::TypeWrapper<mfem::ScalarMatrixProductCoefficient>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void mfem::ScalarMatrixProductCoefficient::ScalarMatrixProductCoefficient(double, mfem::MatrixCoefficient &) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1894:4
    t.constructor<double, mfem::MatrixCoefficient &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::ScalarMatrixProductCoefficient::ScalarMatrixProductCoefficient(mfem::Coefficient &, mfem::MatrixCoefficient &) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1897:4
    t.constructor<mfem::Coefficient &, mfem::MatrixCoefficient &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void mfem::ScalarMatrixProductCoefficient::SetTime(double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ScalarMatrixProductCoefficient::SetTime(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1900:9
    t.method("SetTime", [](mfem::ScalarMatrixProductCoefficient& a, double arg0)->void { a.SetTime(arg0); });
    t.method("SetTime", [](mfem::ScalarMatrixProductCoefficient* a, double arg0)->void { a->SetTime(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::ScalarMatrixProductCoefficient::SetAConst(double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ScalarMatrixProductCoefficient::SetAConst(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1903:9
    t.method("SetAConst", [](mfem::ScalarMatrixProductCoefficient& a, double arg0)->void { a.SetAConst(arg0); });
    t.method("SetAConst", [](mfem::ScalarMatrixProductCoefficient* a, double arg0)->void { a->SetAConst(arg0); });

    DEBUG_MSG("Adding wrapper for double mfem::ScalarMatrixProductCoefficient::GetAConst() (" __HERE__ ")");
    // signature to use in the veto list: double mfem::ScalarMatrixProductCoefficient::GetAConst()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1905:11
    t.method("GetAConst", [](mfem::ScalarMatrixProductCoefficient const& a)->double { return a.GetAConst(); });
    t.method("GetAConst", [](mfem::ScalarMatrixProductCoefficient const* a)->double { return a->GetAConst(); });

    DEBUG_MSG("Adding wrapper for void mfem::ScalarMatrixProductCoefficient::SetACoef(mfem::Coefficient &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ScalarMatrixProductCoefficient::SetACoef(mfem::Coefficient &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1908:9
    t.method("SetACoef", [](mfem::ScalarMatrixProductCoefficient& a, mfem::Coefficient & arg0)->void { a.SetACoef(arg0); });
    t.method("SetACoef", [](mfem::ScalarMatrixProductCoefficient* a, mfem::Coefficient & arg0)->void { a->SetACoef(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::Coefficient * mfem::ScalarMatrixProductCoefficient::GetACoef() (" __HERE__ ")");
    // signature to use in the veto list: mfem::Coefficient * mfem::ScalarMatrixProductCoefficient::GetACoef()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1910:18
    t.method("GetACoef", [](mfem::ScalarMatrixProductCoefficient const& a)->mfem::Coefficient * { return a.GetACoef(); });
    t.method("GetACoef", [](mfem::ScalarMatrixProductCoefficient const* a)->mfem::Coefficient * { return a->GetACoef(); });

    DEBUG_MSG("Adding wrapper for void mfem::ScalarMatrixProductCoefficient::SetBCoef(mfem::MatrixCoefficient &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ScalarMatrixProductCoefficient::SetBCoef(mfem::MatrixCoefficient &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1913:9
    t.method("SetBCoef", [](mfem::ScalarMatrixProductCoefficient& a, mfem::MatrixCoefficient & arg0)->void { a.SetBCoef(arg0); });
    t.method("SetBCoef", [](mfem::ScalarMatrixProductCoefficient* a, mfem::MatrixCoefficient & arg0)->void { a->SetBCoef(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::MatrixCoefficient * mfem::ScalarMatrixProductCoefficient::GetBCoef() (" __HERE__ ")");
    // signature to use in the veto list: mfem::MatrixCoefficient * mfem::ScalarMatrixProductCoefficient::GetBCoef()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1915:24
    t.method("GetBCoef", [](mfem::ScalarMatrixProductCoefficient const& a)->mfem::MatrixCoefficient * { return a.GetBCoef(); });
    t.method("GetBCoef", [](mfem::ScalarMatrixProductCoefficient const* a)->mfem::MatrixCoefficient * { return a->GetBCoef(); });

    DEBUG_MSG("Adding wrapper for void mfem::ScalarMatrixProductCoefficient::Eval(mfem::DenseMatrix &, mfem::ElementTransformation &, const mfem::IntegrationPoint &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::ScalarMatrixProductCoefficient::Eval(mfem::DenseMatrix &, mfem::ElementTransformation &, const mfem::IntegrationPoint &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1918:17
    t.method("Eval", [](mfem::ScalarMatrixProductCoefficient& a, mfem::DenseMatrix & arg0, mfem::ElementTransformation & arg1, const mfem::IntegrationPoint & arg2)->void { a.Eval(arg0, arg1, arg2); });
    t.method("Eval", [](mfem::ScalarMatrixProductCoefficient* a, mfem::DenseMatrix & arg0, mfem::ElementTransformation & arg1, const mfem::IntegrationPoint & arg2)->void { a->Eval(arg0, arg1, arg2); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<mfem::ScalarMatrixProductCoefficient>> type_;
};
std::shared_ptr<Wrapper> newJlmfem_ScalarMatrixProductCoefficient(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new Jlmfem_ScalarMatrixProductCoefficient(module));
}
