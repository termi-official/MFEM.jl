// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jllibMFEM.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<mfem::QuadratureSpace> : std::false_type { };
  template<> struct DefaultConstructible<mfem::QuadratureSpace> : std::false_type { };
}

// Class generating the wrapper for type mfem::QuadratureSpace
// signature to use in the veto file: mfem::QuadratureSpace
struct Jlmfem_QuadratureSpace: public Wrapper {

  Jlmfem_QuadratureSpace(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type mfem::QuadratureSpace (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/fespace.hpp:935:7
    jlcxx::TypeWrapper<mfem::QuadratureSpace>  t = jlModule.add_type<mfem::QuadratureSpace>("mfem!QuadratureSpace");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<mfem::QuadratureSpace>>(new jlcxx::TypeWrapper<mfem::QuadratureSpace>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void mfem::QuadratureSpace::QuadratureSpace(mfem::Mesh *, int) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/fespace.hpp:955:4
    t.constructor<mfem::Mesh *, int>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for int mfem::QuadratureSpace::GetSize() (" __HERE__ ")");
    // signature to use in the veto list: int mfem::QuadratureSpace::GetSize()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/fespace.hpp:964:8
    t.method("GetSize", [](mfem::QuadratureSpace const& a)->int { return a.GetSize(); });
    t.method("GetSize", [](mfem::QuadratureSpace const* a)->int { return a->GetSize(); });

    DEBUG_MSG("Adding wrapper for int mfem::QuadratureSpace::GetOrder() (" __HERE__ ")");
    // signature to use in the veto list: int mfem::QuadratureSpace::GetOrder()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/fespace.hpp:967:8
    t.method("GetOrder", [](mfem::QuadratureSpace const& a)->int { return a.GetOrder(); });
    t.method("GetOrder", [](mfem::QuadratureSpace const* a)->int { return a->GetOrder(); });

    DEBUG_MSG("Adding wrapper for mfem::Mesh * mfem::QuadratureSpace::GetMesh() (" __HERE__ ")");
    // signature to use in the veto list: mfem::Mesh * mfem::QuadratureSpace::GetMesh()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/fespace.hpp:970:17
    t.method("GetMesh", [](mfem::QuadratureSpace const& a)->mfem::Mesh * { return a.GetMesh(); });
    t.method("GetMesh", [](mfem::QuadratureSpace const* a)->mfem::Mesh * { return a->GetMesh(); });

    DEBUG_MSG("Adding wrapper for int mfem::QuadratureSpace::GetNE() (" __HERE__ ")");
    // signature to use in the veto list: int mfem::QuadratureSpace::GetNE()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/fespace.hpp:973:15
    t.method("GetNE", [](mfem::QuadratureSpace const& a)->int { return a.GetNE(); });
    t.method("GetNE", [](mfem::QuadratureSpace const* a)->int { return a->GetNE(); });

    DEBUG_MSG("Adding wrapper for const mfem::IntegrationRule & mfem::QuadratureSpace::GetElementIntRule(int) (" __HERE__ ")");
    // signature to use in the veto list: const mfem::IntegrationRule & mfem::QuadratureSpace::GetElementIntRule(int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/fespace.hpp:976:27
    t.method("GetElementIntRule", [](mfem::QuadratureSpace const& a, int arg0)->const mfem::IntegrationRule & { return a.GetElementIntRule(arg0); });
    t.method("GetElementIntRule", [](mfem::QuadratureSpace const* a, int arg0)->const mfem::IntegrationRule & { return a->GetElementIntRule(arg0); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<mfem::QuadratureSpace>> type_;
};
std::shared_ptr<Wrapper> newJlmfem_QuadratureSpace(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new Jlmfem_QuadratureSpace(module));
}
