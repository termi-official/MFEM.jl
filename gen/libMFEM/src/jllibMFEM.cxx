// this file was auto-generated by wrapit v1.5.0
#include "jlcxx/jlcxx.hpp"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

#include "jllibMFEM.h"

#include <regex>

#include "dbg_msg.h"
#include "Wrapper.h"

// class Jlmfem_Array;
class Jlmfem_Embedding;
class Jlmfem_Refinement;
class Jlmfem_IntegrationPoint;
class Jlmfem_Array;
class Jlmfem_Array2D;
class Jlmfem_Vector;
class Jlmfem_Memory;
class Jlmfem_Operator;
class Jlmfem_TimeDependentOperator;
class Jlmfem_TimeDependentAdjointOperator;
class Jlmfem_SecondOrderTimeDependentOperator;
class Jlmfem_Solver;
class Jlmfem_IdentityOperator;
class Jlmfem_ScaledOperator;
class Jlmfem_TransposeOperator;
class Jlmfem_ProductOperator;
class Jlmfem_RAPOperator;
class Jlmfem_TripleProductOperator;
class Jlmfem_ConstrainedOperator;
class Jlmfem_RectangularConstrainedOperator;
class Jlmfem_PowerMethod;
class Jlmfem_Matrix;
class Jlmfem_MatrixInverse;
class Jlmfem_AbstractSparseMatrix;
class Jlmfem_RowNode;
class Jlmfem_SparseMatrix;
class Jlmfem_DenseMatrix;
class Jlmfem_SparseSmoother;
class Jlmfem_GSSmoother;
class Jlmfem_DSmoother;
class Jlmfem_OperatorHandle;
class Jlmfem_IterativeSolverMonitor;
class Jlmfem_IterativeSolver;
class Jlmfem_IterativeSolver_PrintLevel;
class Jlmfem_OperatorJacobiSmoother;
class Jlmfem_BilinearForm;
class Jlmfem_OperatorChebyshevSmoother;
class Jlmfem_SLISolver;
class Jlmfem_CGSolver;
class Jlmfem_GMRESSolver;
class Jlmfem_FGMRESSolver;
class Jlmfem_BiCGSTABSolver;
class Jlmfem_MINRESSolver;
class Jlmfem_NewtonSolver;
class Jlmfem_LBFGSSolver;
class Jlmfem_OptimizationProblem;
class Jlmfem_OptimizationSolver;
class Jlmfem_SLBQPOptimizer;
class Jlmfem_BlockILU;
class Jlmfem_ResidualBCMonitor;
class Jlmfem_DirectSubBlockSolver;
class Jlmfem_ProductSolver;
class Jlmfem_IntegrationRule;
class Jlmfem_QuadratureFunctions1D;
class Jlmfem_Quadrature1D;
class Jlmfem_IntegrationRules;
class Jlmfem_CoarseFineTransformations;
class Jlmfem_DenseTensor;
class Jlmfem_Table;
class Jlmfem_Mesh;
class Jlmfem_Coefficient;
class Jlmfem_ElementTransformation;
class Jlmfem_ConstantCoefficient;
class Jlmfem_PWConstCoefficient;
class Jlmfem_PWCoefficient;
class Jlmfem_GridFunctionCoefficient;
class Jlmfem_GridFunction;
class Jlmfem_TransformedCoefficient;
class Jlmfem_DeltaCoefficient;
class Jlmfem_RestrictedCoefficient;
class Jlmfem_VectorCoefficient;
class Jlmfem_VectorConstantCoefficient;
class Jlmfem_PWVectorCoefficient;
class Jlmfem_VectorArrayCoefficient;
class Jlmfem_VectorGridFunctionCoefficient;
class Jlmfem_GradientGridFunctionCoefficient;
class Jlmfem_CurlGridFunctionCoefficient;
class Jlmfem_DivergenceGridFunctionCoefficient;
class Jlmfem_VectorDeltaCoefficient;
class Jlmfem_VectorRestrictedCoefficient;
class Jlmfem_MatrixCoefficient;
class Jlmfem_MatrixConstantCoefficient;
class Jlmfem_PWMatrixCoefficient;
class Jlmfem_MatrixArrayCoefficient;
class Jlmfem_MatrixRestrictedCoefficient;
class Jlmfem_SumCoefficient;
class Jlmfem_SymmetricMatrixCoefficient;
class Jlmfem_DenseSymmetricMatrix;
class Jlmfem_SymmetricMatrixConstantCoefficient;
class Jlmfem_ProductCoefficient;
class Jlmfem_RatioCoefficient;
class Jlmfem_PowerCoefficient;
class Jlmfem_InnerProductCoefficient;
class Jlmfem_VectorRotProductCoefficient;
class Jlmfem_DeterminantCoefficient;
class Jlmfem_VectorSumCoefficient;
class Jlmfem_ScalarVectorProductCoefficient;
class Jlmfem_NormalizedVectorCoefficient;
class Jlmfem_VectorCrossProductCoefficient;
class Jlmfem_MatrixVectorProductCoefficient;
class Jlmfem_IdentityMatrixCoefficient;
class Jlmfem_MatrixSumCoefficient;
class Jlmfem_MatrixProductCoefficient;
class Jlmfem_ScalarMatrixProductCoefficient;
class Jlmfem_TransposeMatrixCoefficient;
class Jlmfem_InverseMatrixCoefficient;
class Jlmfem_OuterProductCoefficient;
class Jlmfem_CrossCrossCoefficient;
class Jlmfem_VectorQuadratureFunctionCoefficient;
class Jlmfem_QuadratureFunction;
class Jlmfem_QuadratureFunctionCoefficient;
class Jlmfem_NURBSExtension;
class Jlmfem_Element;
class Jlmfem_Mesh_GeometryList;
class Jlmfem_FiniteElement;
class Jlmfem_IsoparametricTransformation;
class Jlmfem_FaceElementTransformations;
class Jlmfem_Mesh_FaceInformation;
class Jlmfem_FiniteElementSpace;
class Jlmfem_Vertex;
class Jlmfem_InverseElementTransformation;
class Jlmfem_NodeExtrudeCoefficient;
class Jlmfem_FiniteElementCollection;
class Jlmfem_H1_FECollection;
class Jlmfem_H1Pos_FECollection;
class Jlmfem_H1Ser_FECollection;
class Jlmfem_H1_Trace_FECollection;
class Jlmfem_L2_FECollection;
class Jlmfem_RT_FECollection;
class Jlmfem_RT_Trace_FECollection;
class Jlmfem_DG_Interface_FECollection;
class Jlmfem_ND_FECollection;
class Jlmfem_ND_Trace_FECollection;
class Jlmfem_ND_R1D_FECollection;
class Jlmfem_RT_R1D_FECollection;
class Jlmfem_ND_R2D_FECollection;
class Jlmfem_ND_R2D_Trace_FECollection;
class Jlmfem_RT_R2D_FECollection;
class Jlmfem_RT_R2D_Trace_FECollection;
class Jlmfem_NURBSFECollection;
class Jlmfem_LinearFECollection;
class Jlmfem_QuadraticFECollection;
class Jlmfem_QuadraticPosFECollection;
class Jlmfem_CubicFECollection;
class Jlmfem_CrouzeixRaviartFECollection;
class Jlmfem_LinearNonConf3DFECollection;
class Jlmfem_RT0_2DFECollection;
class Jlmfem_RT1_2DFECollection;
class Jlmfem_RT2_2DFECollection;
class Jlmfem_Const2DFECollection;
class Jlmfem_LinearDiscont2DFECollection;
class Jlmfem_GaussLinearDiscont2DFECollection;
class Jlmfem_P1OnQuadFECollection;
class Jlmfem_QuadraticDiscont2DFECollection;
class Jlmfem_QuadraticPosDiscont2DFECollection;
class Jlmfem_GaussQuadraticDiscont2DFECollection;
class Jlmfem_CubicDiscont2DFECollection;
class Jlmfem_Const3DFECollection;
class Jlmfem_LinearDiscont3DFECollection;
class Jlmfem_QuadraticDiscont3DFECollection;
class Jlmfem_RefinedLinearFECollection;
class Jlmfem_ND1_3DFECollection;
class Jlmfem_RT0_3DFECollection;
class Jlmfem_RT1_3DFECollection;
class Jlmfem_Local_FECollection;
class Jlmfem_Ordering;
class Jlmfem_FaceRestriction;
class Jlmfem_QuadratureInterpolator;
class Jlmfem_QuadratureSpace;
class Jlmfem_FaceQuadratureInterpolator;
class Jlmfem_DofTransformation;
class Jlmfem_NonlinearFormIntegrator;
class Jlmfem_ceed_Operator;
class Jlmfem_BlockNonlinearFormIntegrator;
class Jlmfem_HyperelasticModel;
class Jlmfem_InverseHarmonicModel;
class Jlmfem_NeoHookeanModel;
class Jlmfem_HyperelasticNLFIntegrator;
class Jlmfem_IncompressibleNeoHookeanIntegrator;
class Jlmfem_VectorConvectionNLFIntegrator;
class Jlmfem_ConvectiveVectorConvectionNLFIntegrator;
class Jlmfem_SkewSymmetricVectorConvectionNLFIntegrator;
class Jlmfem_BilinearFormIntegrator;
class Jlmfem_TransposeIntegrator;
class Jlmfem_LumpedIntegrator;
class Jlmfem_InverseIntegrator;
class Jlmfem_SumIntegrator;
class Jlmfem_MixedScalarIntegrator;
class Jlmfem_MixedVectorIntegrator;
class Jlmfem_MixedScalarVectorIntegrator;
class Jlmfem_MixedScalarMassIntegrator;
class Jlmfem_MixedVectorProductIntegrator;
class Jlmfem_MixedScalarDerivativeIntegrator;
class Jlmfem_MixedScalarWeakDerivativeIntegrator;
class Jlmfem_MixedScalarDivergenceIntegrator;
class Jlmfem_MixedVectorDivergenceIntegrator;
class Jlmfem_MixedScalarWeakGradientIntegrator;
class Jlmfem_MixedScalarCurlIntegrator;
class Jlmfem_MixedScalarWeakCurlIntegrator;
class Jlmfem_MixedVectorMassIntegrator;
class Jlmfem_MixedCrossProductIntegrator;
class Jlmfem_MixedDotProductIntegrator;
class Jlmfem_MixedWeakGradDotIntegrator;
class Jlmfem_MixedWeakDivCrossIntegrator;
class Jlmfem_MixedGradGradIntegrator;
class Jlmfem_MixedCrossGradGradIntegrator;
class Jlmfem_MixedCurlCurlIntegrator;
class Jlmfem_MixedCrossCurlCurlIntegrator;
class Jlmfem_MixedCrossCurlGradIntegrator;
class Jlmfem_MixedCrossGradCurlIntegrator;
class Jlmfem_MixedWeakCurlCrossIntegrator;
class Jlmfem_MixedScalarWeakCurlCrossIntegrator;
class Jlmfem_MixedCrossGradIntegrator;
class Jlmfem_MixedCrossCurlIntegrator;
class Jlmfem_MixedScalarCrossCurlIntegrator;
class Jlmfem_MixedScalarCrossGradIntegrator;
class Jlmfem_MixedScalarCrossProductIntegrator;
class Jlmfem_MixedScalarWeakCrossProductIntegrator;
class Jlmfem_MixedDirectionalDerivativeIntegrator;
class Jlmfem_MixedGradDivIntegrator;
class Jlmfem_MixedDivGradIntegrator;
class Jlmfem_MixedScalarWeakDivergenceIntegrator;
class Jlmfem_MixedVectorGradientIntegrator;
class Jlmfem_MixedVectorCurlIntegrator;
class Jlmfem_MixedVectorWeakCurlIntegrator;
class Jlmfem_MixedVectorWeakDivergenceIntegrator;
class Jlmfem_GradientIntegrator;
class Jlmfem_DiffusionIntegrator;
class Jlmfem_MassIntegrator;
class Jlmfem_BoundaryMassIntegrator;
class Jlmfem_ConvectionIntegrator;
class Jlmfem_ConservativeConvectionIntegrator;
class Jlmfem_GroupConvectionIntegrator;
class Jlmfem_VectorMassIntegrator;
class Jlmfem_VectorFEDivergenceIntegrator;
class Jlmfem_VectorFEWeakDivergenceIntegrator;
class Jlmfem_VectorFECurlIntegrator;
class Jlmfem_DerivativeIntegrator;
class Jlmfem_CurlCurlIntegrator;
class Jlmfem_VectorCurlCurlIntegrator;
class Jlmfem_VectorFEMassIntegrator;
class Jlmfem_VectorDivergenceIntegrator;
class Jlmfem_DivDivIntegrator;
class Jlmfem_VectorDiffusionIntegrator;
class Jlmfem_ElasticityIntegrator;
class Jlmfem_DGTraceIntegrator;
class Jlmfem_NonconservativeDGTraceIntegrator;
class Jlmfem_DGDiffusionIntegrator;
class Jlmfem_DGDiffusionBR2Integrator;
class Jlmfem_DGElasticityIntegrator;
class Jlmfem_TraceJumpIntegrator;
class Jlmfem_NormalTraceJumpIntegrator;
class Jlmfem_DiscreteInterpolator;
class Jlmfem_GradientInterpolator;
class Jlmfem_IdentityInterpolator;
class Jlmfem_CurlInterpolator;
class Jlmfem_DivergenceInterpolator;
class Jlmfem_NormalInterpolator;
class Jlmfem_ScalarProductInterpolator;
class Jlmfem_ScalarVectorProductInterpolator;
class Jlmfem_VectorScalarProductInterpolator;
class Jlmfem_ScalarCrossProductInterpolator;
class Jlmfem_VectorCrossProductInterpolator;
class Jlmfem_VectorInnerProductInterpolator;
class Jlmfem_JumpScaling;
class Jlmfem_ExtrudeCoefficient;
class Jlmfem_LinearFormIntegrator;
class Jlmfem_DeltaLFIntegrator;
class Jlmfem_DomainLFIntegrator;
class Jlmfem_DomainLFGradIntegrator;
class Jlmfem_BoundaryLFIntegrator;
class Jlmfem_BoundaryNormalLFIntegrator;
class Jlmfem_BoundaryTangentialLFIntegrator;
class Jlmfem_VectorDomainLFIntegrator;
class Jlmfem_VectorBoundaryLFIntegrator;
class Jlmfem_VectorFEDomainLFIntegrator;
class Jlmfem_VectorFEDomainLFCurlIntegrator;
class Jlmfem_VectorFEDomainLFDivIntegrator;
class Jlmfem_VectorBoundaryFluxLFIntegrator;
class Jlmfem_VectorFEBoundaryFluxLFIntegrator;
class Jlmfem_VectorFEBoundaryTangentLFIntegrator;
class Jlmfem_BoundaryFlowIntegrator;
class Jlmfem_DGDirichletLFIntegrator;
class Jlmfem_DGElasticityDirichletLFIntegrator;
class Jlmfem_VectorQuadratureLFIntegrator;
class Jlmfem_QuadratureLFIntegrator;
class Jlmfem_LinearForm;
class Jlmfem_Hybridization;
class Jlmfem_MixedBilinearForm;
class Jlmfem_DiscreteLinearOperator;
class Jlmfem_NonlinearForm;
class Jlmfem_BlockNonlinearForm;
class Jlmfem_DataCollection;
class Jlmfem_VisItFieldInfo;
class Jlmfem_VisItDataCollection;
class Jlmfem_ParaViewDataCollection;
class JlGlobal;

// std::shared_ptr<Wrapper> newJlmfem_Array(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Embedding(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Refinement(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_IntegrationPoint(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Array(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Array2D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Vector(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Memory(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Operator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_TimeDependentOperator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_TimeDependentAdjointOperator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_SecondOrderTimeDependentOperator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Solver(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_IdentityOperator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ScaledOperator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_TransposeOperator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ProductOperator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_RAPOperator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_TripleProductOperator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ConstrainedOperator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_RectangularConstrainedOperator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_PowerMethod(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Matrix(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MatrixInverse(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_AbstractSparseMatrix(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_RowNode(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_SparseMatrix(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DenseMatrix(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_SparseSmoother(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_GSSmoother(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DSmoother(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_OperatorHandle(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_IterativeSolverMonitor(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_IterativeSolver(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_IterativeSolver_PrintLevel(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_OperatorJacobiSmoother(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_BilinearForm(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_OperatorChebyshevSmoother(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_SLISolver(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_CGSolver(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_GMRESSolver(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_FGMRESSolver(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_BiCGSTABSolver(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MINRESSolver(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_NewtonSolver(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_LBFGSSolver(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_OptimizationProblem(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_OptimizationSolver(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_SLBQPOptimizer(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_BlockILU(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ResidualBCMonitor(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DirectSubBlockSolver(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ProductSolver(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_IntegrationRule(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_QuadratureFunctions1D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Quadrature1D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_IntegrationRules(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_CoarseFineTransformations(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DenseTensor(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Table(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Mesh(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Coefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ElementTransformation(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ConstantCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_PWConstCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_PWCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_GridFunctionCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_GridFunction(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_TransformedCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DeltaCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_RestrictedCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorConstantCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_PWVectorCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorArrayCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorGridFunctionCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_GradientGridFunctionCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_CurlGridFunctionCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DivergenceGridFunctionCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorDeltaCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorRestrictedCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MatrixCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MatrixConstantCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_PWMatrixCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MatrixArrayCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MatrixRestrictedCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_SumCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_SymmetricMatrixCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DenseSymmetricMatrix(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_SymmetricMatrixConstantCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ProductCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_RatioCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_PowerCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_InnerProductCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorRotProductCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DeterminantCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorSumCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ScalarVectorProductCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_NormalizedVectorCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorCrossProductCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MatrixVectorProductCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_IdentityMatrixCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MatrixSumCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MatrixProductCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ScalarMatrixProductCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_TransposeMatrixCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_InverseMatrixCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_OuterProductCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_CrossCrossCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorQuadratureFunctionCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_QuadratureFunction(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_QuadratureFunctionCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_NURBSExtension(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Element(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Mesh_GeometryList(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_FiniteElement(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_IsoparametricTransformation(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_FaceElementTransformations(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Mesh_FaceInformation(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_FiniteElementSpace(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Vertex(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_InverseElementTransformation(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_NodeExtrudeCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_FiniteElementCollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_H1_FECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_H1Pos_FECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_H1Ser_FECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_H1_Trace_FECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_L2_FECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_RT_FECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_RT_Trace_FECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DG_Interface_FECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ND_FECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ND_Trace_FECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ND_R1D_FECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_RT_R1D_FECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ND_R2D_FECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ND_R2D_Trace_FECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_RT_R2D_FECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_RT_R2D_Trace_FECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_NURBSFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_LinearFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_QuadraticFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_QuadraticPosFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_CubicFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_CrouzeixRaviartFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_LinearNonConf3DFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_RT0_2DFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_RT1_2DFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_RT2_2DFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Const2DFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_LinearDiscont2DFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_GaussLinearDiscont2DFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_P1OnQuadFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_QuadraticDiscont2DFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_QuadraticPosDiscont2DFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_GaussQuadraticDiscont2DFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_CubicDiscont2DFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Const3DFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_LinearDiscont3DFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_QuadraticDiscont3DFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_RefinedLinearFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ND1_3DFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_RT0_3DFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_RT1_3DFECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Local_FECollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Ordering(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_FaceRestriction(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_QuadratureInterpolator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_QuadratureSpace(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_FaceQuadratureInterpolator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DofTransformation(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_NonlinearFormIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ceed_Operator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_BlockNonlinearFormIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_HyperelasticModel(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_InverseHarmonicModel(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_NeoHookeanModel(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_HyperelasticNLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_IncompressibleNeoHookeanIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorConvectionNLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ConvectiveVectorConvectionNLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_SkewSymmetricVectorConvectionNLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_BilinearFormIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_TransposeIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_LumpedIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_InverseIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_SumIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedScalarIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedVectorIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedScalarVectorIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedScalarMassIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedVectorProductIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedScalarDerivativeIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedScalarWeakDerivativeIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedScalarDivergenceIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedVectorDivergenceIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedScalarWeakGradientIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedScalarCurlIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedScalarWeakCurlIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedVectorMassIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedCrossProductIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedDotProductIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedWeakGradDotIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedWeakDivCrossIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedGradGradIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedCrossGradGradIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedCurlCurlIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedCrossCurlCurlIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedCrossCurlGradIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedCrossGradCurlIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedWeakCurlCrossIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedScalarWeakCurlCrossIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedCrossGradIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedCrossCurlIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedScalarCrossCurlIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedScalarCrossGradIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedScalarCrossProductIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedScalarWeakCrossProductIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedDirectionalDerivativeIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedGradDivIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedDivGradIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedScalarWeakDivergenceIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedVectorGradientIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedVectorCurlIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedVectorWeakCurlIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedVectorWeakDivergenceIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_GradientIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DiffusionIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MassIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_BoundaryMassIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ConvectionIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ConservativeConvectionIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_GroupConvectionIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorMassIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorFEDivergenceIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorFEWeakDivergenceIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorFECurlIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DerivativeIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_CurlCurlIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorCurlCurlIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorFEMassIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorDivergenceIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DivDivIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorDiffusionIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ElasticityIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DGTraceIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_NonconservativeDGTraceIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DGDiffusionIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DGDiffusionBR2Integrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DGElasticityIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_TraceJumpIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_NormalTraceJumpIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DiscreteInterpolator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_GradientInterpolator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_IdentityInterpolator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_CurlInterpolator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DivergenceInterpolator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_NormalInterpolator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ScalarProductInterpolator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ScalarVectorProductInterpolator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorScalarProductInterpolator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ScalarCrossProductInterpolator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorCrossProductInterpolator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorInnerProductInterpolator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_JumpScaling(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ExtrudeCoefficient(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_LinearFormIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DeltaLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DomainLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DomainLFGradIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_BoundaryLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_BoundaryNormalLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_BoundaryTangentialLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorDomainLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorBoundaryLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorFEDomainLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorFEDomainLFCurlIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorFEDomainLFDivIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorBoundaryFluxLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorFEBoundaryFluxLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorFEBoundaryTangentLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_BoundaryFlowIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DGDirichletLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DGElasticityDirichletLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VectorQuadratureLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_QuadratureLFIntegrator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_LinearForm(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_Hybridization(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_MixedBilinearForm(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DiscreteLinearOperator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_NonlinearForm(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_BlockNonlinearForm(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_DataCollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VisItFieldInfo(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_VisItDataCollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlmfem_ParaViewDataCollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlGlobal(jlcxx::Module&);
//method from libcxxwrap returning its version
extern "C" JLCXX_API const char* cxxwrap_version_string();

//Check the code is compiled with a compatible version of libcxxwrap:
static_assert(1000*1000*JLCXX_VERSION_MAJOR  + 1000 * JLCXX_VERSION_MINOR + JLCXX_VERSION_PATCH >= 12000
  && 1000 * 1000 * JLCXX_VERSION_MAJOR  + 1000 * JLCXX_VERSION_MINOR + JLCXX_VERSION_PATCH < 14000,
  "The code was generated with WrapIt! for "
  "a different CxxWrap version (controlled with the cxxwrap_version parameter).");

//Check the version of loaded libcxxwrap library:
void throw_if_version_incompatibility(){
  std::string version_str = cxxwrap_version_string();
  static std::regex r("([[:digit:]]{1,3})\\.([[:digit:]]{1,3})\\.([[:digit:]]{1,3})");
  std::smatch matches;
  if(!std::regex_match(version_str, matches, r)){
    std::cerr << "Warning: Failed to check libcxxwrap version.";
  } else{    long version_int =   1000*1000*strtol(matches[1].str().c_str(), 0, 10)
                       +      1000*strtol(matches[2].str().c_str(), 0, 10)
                       +           strtol(matches[3].str().c_str(), 0, 10);
    if(version_int < 12000 || version_int >= 14000){
      throw std::runtime_error(std::string("Found libcxxwrap_jll version ")
       + version_str + ", while module libMFEM requires a version in "
      "[0.12.0, 0.14.0)."
      " Note: if the module was installed with the package manager, the Project.toml file "
      "of the package is probably missing a compat specification that would have prevented "
      "the inconsistency.");
    }
  }
}


JLCXX_MODULE define_julia_module(jlcxx::Module& jlModule){

  throw_if_version_incompatibility();

  std::vector<std::shared_ptr<Wrapper>> wrappers = {
    // std::shared_ptr<Wrapper>(newJlmfem_Array(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Embedding(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Refinement(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_IntegrationPoint(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Array(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Array2D(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Vector(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Memory(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Operator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_TimeDependentOperator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_TimeDependentAdjointOperator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_SecondOrderTimeDependentOperator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Solver(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_IdentityOperator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ScaledOperator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_TransposeOperator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ProductOperator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_RAPOperator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_TripleProductOperator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ConstrainedOperator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_RectangularConstrainedOperator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_PowerMethod(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Matrix(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MatrixInverse(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_AbstractSparseMatrix(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_RowNode(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_SparseMatrix(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DenseMatrix(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_SparseSmoother(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_GSSmoother(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DSmoother(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_OperatorHandle(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_IterativeSolverMonitor(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_IterativeSolver(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_IterativeSolver_PrintLevel(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_OperatorJacobiSmoother(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_BilinearForm(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_OperatorChebyshevSmoother(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_SLISolver(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_CGSolver(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_GMRESSolver(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_FGMRESSolver(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_BiCGSTABSolver(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MINRESSolver(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_NewtonSolver(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_LBFGSSolver(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_OptimizationProblem(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_OptimizationSolver(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_SLBQPOptimizer(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_BlockILU(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ResidualBCMonitor(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DirectSubBlockSolver(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ProductSolver(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_IntegrationRule(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_QuadratureFunctions1D(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Quadrature1D(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_IntegrationRules(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_CoarseFineTransformations(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DenseTensor(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Table(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Mesh(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Coefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ElementTransformation(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ConstantCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_PWConstCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_PWCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_GridFunctionCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_GridFunction(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_TransformedCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DeltaCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_RestrictedCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorConstantCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_PWVectorCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorArrayCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorGridFunctionCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_GradientGridFunctionCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_CurlGridFunctionCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DivergenceGridFunctionCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorDeltaCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorRestrictedCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MatrixCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MatrixConstantCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_PWMatrixCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MatrixArrayCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MatrixRestrictedCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_SumCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_SymmetricMatrixCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DenseSymmetricMatrix(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_SymmetricMatrixConstantCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ProductCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_RatioCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_PowerCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_InnerProductCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorRotProductCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DeterminantCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorSumCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ScalarVectorProductCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_NormalizedVectorCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorCrossProductCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MatrixVectorProductCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_IdentityMatrixCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MatrixSumCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MatrixProductCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ScalarMatrixProductCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_TransposeMatrixCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_InverseMatrixCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_OuterProductCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_CrossCrossCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorQuadratureFunctionCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_QuadratureFunction(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_QuadratureFunctionCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_NURBSExtension(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Element(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Mesh_GeometryList(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_FiniteElement(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_IsoparametricTransformation(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_FaceElementTransformations(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Mesh_FaceInformation(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_FiniteElementSpace(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Vertex(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_InverseElementTransformation(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_NodeExtrudeCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_FiniteElementCollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_H1_FECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_H1Pos_FECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_H1Ser_FECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_H1_Trace_FECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_L2_FECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_RT_FECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_RT_Trace_FECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DG_Interface_FECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ND_FECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ND_Trace_FECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ND_R1D_FECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_RT_R1D_FECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ND_R2D_FECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ND_R2D_Trace_FECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_RT_R2D_FECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_RT_R2D_Trace_FECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_NURBSFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_LinearFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_QuadraticFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_QuadraticPosFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_CubicFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_CrouzeixRaviartFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_LinearNonConf3DFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_RT0_2DFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_RT1_2DFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_RT2_2DFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Const2DFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_LinearDiscont2DFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_GaussLinearDiscont2DFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_P1OnQuadFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_QuadraticDiscont2DFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_QuadraticPosDiscont2DFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_GaussQuadraticDiscont2DFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_CubicDiscont2DFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Const3DFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_LinearDiscont3DFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_QuadraticDiscont3DFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_RefinedLinearFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ND1_3DFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_RT0_3DFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_RT1_3DFECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Local_FECollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Ordering(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_FaceRestriction(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_QuadratureInterpolator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_QuadratureSpace(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_FaceQuadratureInterpolator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DofTransformation(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_NonlinearFormIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ceed_Operator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_BlockNonlinearFormIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_HyperelasticModel(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_InverseHarmonicModel(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_NeoHookeanModel(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_HyperelasticNLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_IncompressibleNeoHookeanIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorConvectionNLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ConvectiveVectorConvectionNLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_SkewSymmetricVectorConvectionNLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_BilinearFormIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_TransposeIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_LumpedIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_InverseIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_SumIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedScalarIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedVectorIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedScalarVectorIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedScalarMassIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedVectorProductIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedScalarDerivativeIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedScalarWeakDerivativeIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedScalarDivergenceIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedVectorDivergenceIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedScalarWeakGradientIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedScalarCurlIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedScalarWeakCurlIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedVectorMassIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedCrossProductIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedDotProductIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedWeakGradDotIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedWeakDivCrossIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedGradGradIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedCrossGradGradIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedCurlCurlIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedCrossCurlCurlIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedCrossCurlGradIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedCrossGradCurlIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedWeakCurlCrossIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedScalarWeakCurlCrossIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedCrossGradIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedCrossCurlIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedScalarCrossCurlIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedScalarCrossGradIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedScalarCrossProductIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedScalarWeakCrossProductIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedDirectionalDerivativeIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedGradDivIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedDivGradIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedScalarWeakDivergenceIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedVectorGradientIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedVectorCurlIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedVectorWeakCurlIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedVectorWeakDivergenceIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_GradientIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DiffusionIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MassIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_BoundaryMassIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ConvectionIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ConservativeConvectionIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_GroupConvectionIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorMassIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorFEDivergenceIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorFEWeakDivergenceIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorFECurlIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DerivativeIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_CurlCurlIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorCurlCurlIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorFEMassIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorDivergenceIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DivDivIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorDiffusionIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ElasticityIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DGTraceIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_NonconservativeDGTraceIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DGDiffusionIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DGDiffusionBR2Integrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DGElasticityIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_TraceJumpIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_NormalTraceJumpIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DiscreteInterpolator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_GradientInterpolator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_IdentityInterpolator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_CurlInterpolator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DivergenceInterpolator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_NormalInterpolator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ScalarProductInterpolator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ScalarVectorProductInterpolator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorScalarProductInterpolator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ScalarCrossProductInterpolator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorCrossProductInterpolator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorInnerProductInterpolator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_JumpScaling(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ExtrudeCoefficient(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_LinearFormIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DeltaLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DomainLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DomainLFGradIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_BoundaryLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_BoundaryNormalLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_BoundaryTangentialLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorDomainLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorBoundaryLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorFEDomainLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorFEDomainLFCurlIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorFEDomainLFDivIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorBoundaryFluxLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorFEBoundaryFluxLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorFEBoundaryTangentLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_BoundaryFlowIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DGDirichletLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DGElasticityDirichletLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VectorQuadratureLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_QuadratureLFIntegrator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_LinearForm(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_Hybridization(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_MixedBilinearForm(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DiscreteLinearOperator(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_NonlinearForm(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_BlockNonlinearForm(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_DataCollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VisItFieldInfo(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_VisItDataCollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlmfem_ParaViewDataCollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlGlobal(jlModule))
  };

  DEBUG_MSG("Adding wrapper for enum mfem::MemoryType (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/general/mem_manager.hpp:31:12
  jlModule.add_bits<mfem::MemoryType>("mfem!MemoryType", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!MemoryType!HOST", mfem::MemoryType::HOST);
  jlModule.set_const("mfem!MemoryType!HOST_32", mfem::MemoryType::HOST_32);
  jlModule.set_const("mfem!MemoryType!HOST_64", mfem::MemoryType::HOST_64);
  jlModule.set_const("mfem!MemoryType!HOST_DEBUG", mfem::MemoryType::HOST_DEBUG);
  jlModule.set_const("mfem!MemoryType!HOST_UMPIRE", mfem::MemoryType::HOST_UMPIRE);
  jlModule.set_const("mfem!MemoryType!HOST_PINNED", mfem::MemoryType::HOST_PINNED);
  jlModule.set_const("mfem!MemoryType!MANAGED", mfem::MemoryType::MANAGED);
  jlModule.set_const("mfem!MemoryType!DEVICE", mfem::MemoryType::DEVICE);
  jlModule.set_const("mfem!MemoryType!DEVICE_DEBUG", mfem::MemoryType::DEVICE_DEBUG);
  jlModule.set_const("mfem!MemoryType!DEVICE_UMPIRE", mfem::MemoryType::DEVICE_UMPIRE);
  jlModule.set_const("mfem!MemoryType!DEVICE_UMPIRE_2", mfem::MemoryType::DEVICE_UMPIRE_2);
  jlModule.set_const("mfem!MemoryType!SIZE", mfem::MemoryType::SIZE);
  jlModule.set_const("mfem!MemoryType!PRESERVE", mfem::MemoryType::PRESERVE);
  jlModule.set_const("mfem!MemoryType!DEFAULT", mfem::MemoryType::DEFAULT);

  DEBUG_MSG("Adding wrapper for enum mfem::Operator::DiagonalPolicy (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/operator.hpp:46:9
  jlModule.add_bits<mfem::Operator::DiagonalPolicy>("mfem!Operator!DiagonalPolicy", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!Operator!DIAG_ZERO", mfem::Operator::DIAG_ZERO);
  jlModule.set_const("mfem!Operator!DIAG_ONE", mfem::Operator::DIAG_ONE);
  jlModule.set_const("mfem!Operator!DIAG_KEEP", mfem::Operator::DIAG_KEEP);

  DEBUG_MSG("Adding wrapper for enum mfem::MemoryClass (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/general/mem_manager.hpp:73:12
  jlModule.add_bits<mfem::MemoryClass>("mfem!MemoryClass", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!MemoryClass!HOST", mfem::MemoryClass::HOST);
  jlModule.set_const("mfem!MemoryClass!HOST_32", mfem::MemoryClass::HOST_32);
  jlModule.set_const("mfem!MemoryClass!HOST_64", mfem::MemoryClass::HOST_64);
  jlModule.set_const("mfem!MemoryClass!DEVICE", mfem::MemoryClass::DEVICE);
  jlModule.set_const("mfem!MemoryClass!MANAGED", mfem::MemoryClass::MANAGED);

  DEBUG_MSG("Adding wrapper for enum mfem::Operator::Type (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/operator.hpp:255:9
  jlModule.add_bits<mfem::Operator::Type>("mfem!Operator!Type", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!Operator!ANY_TYPE", mfem::Operator::ANY_TYPE);
  jlModule.set_const("mfem!Operator!MFEM_SPARSEMAT", mfem::Operator::MFEM_SPARSEMAT);
  jlModule.set_const("mfem!Operator!Hypre_ParCSR", mfem::Operator::Hypre_ParCSR);
  jlModule.set_const("mfem!Operator!PETSC_MATAIJ", mfem::Operator::PETSC_MATAIJ);
  jlModule.set_const("mfem!Operator!PETSC_MATIS", mfem::Operator::PETSC_MATIS);
  jlModule.set_const("mfem!Operator!PETSC_MATSHELL", mfem::Operator::PETSC_MATSHELL);
  jlModule.set_const("mfem!Operator!PETSC_MATNEST", mfem::Operator::PETSC_MATNEST);
  jlModule.set_const("mfem!Operator!PETSC_MATHYPRE", mfem::Operator::PETSC_MATHYPRE);
  jlModule.set_const("mfem!Operator!PETSC_MATGENERIC", mfem::Operator::PETSC_MATGENERIC);
  jlModule.set_const("mfem!Operator!Complex_Operator", mfem::Operator::Complex_Operator);
  jlModule.set_const("mfem!Operator!MFEM_ComplexSparseMat", mfem::Operator::MFEM_ComplexSparseMat);
  jlModule.set_const("mfem!Operator!Complex_Hypre_ParCSR", mfem::Operator::Complex_Hypre_ParCSR);

  DEBUG_MSG("Adding wrapper for enum mfem::TimeDependentOperator::Type (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/operator.hpp:288:9
  jlModule.add_bits<mfem::TimeDependentOperator::Type>("mfem!TimeDependentOperator!Type", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!TimeDependentOperator!EXPLICIT", mfem::TimeDependentOperator::EXPLICIT);
  jlModule.set_const("mfem!TimeDependentOperator!IMPLICIT", mfem::TimeDependentOperator::IMPLICIT);
  jlModule.set_const("mfem!TimeDependentOperator!HOMOGENEOUS", mfem::TimeDependentOperator::HOMOGENEOUS);

  DEBUG_MSG("Adding wrapper for enum mfem::TimeDependentOperator::EvalMode (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/operator.hpp:296:9
  jlModule.add_bits<mfem::TimeDependentOperator::EvalMode>("mfem!TimeDependentOperator!EvalMode", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!TimeDependentOperator!NORMAL", mfem::TimeDependentOperator::NORMAL);
  jlModule.set_const("mfem!TimeDependentOperator!ADDITIVE_TERM_1", mfem::TimeDependentOperator::ADDITIVE_TERM_1);
  jlModule.set_const("mfem!TimeDependentOperator!ADDITIVE_TERM_2", mfem::TimeDependentOperator::ADDITIVE_TERM_2);

  DEBUG_MSG("Adding wrapper for enum mfem::BlockILU::Reordering (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/solvers.hpp:923:15
  jlModule.add_bits<mfem::BlockILU::Reordering>("mfem!BlockILU!Reordering", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!BlockILU!Reordering!MINIMUM_DISCARDED_FILL", mfem::BlockILU::Reordering::MINIMUM_DISCARDED_FILL);
  jlModule.set_const("mfem!BlockILU!Reordering!NONE", mfem::BlockILU::Reordering::NONE);

  DEBUG_MSG("Adding anonymous enum defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/intrules.hpp:292:4 (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/intrules.hpp:292:4
  jlModule.set_const("mfem!Quadrature1D!Invalid", static_cast<int>(mfem::Quadrature1D::Invalid));
  jlModule.set_const("mfem!Quadrature1D!GaussLegendre", static_cast<int>(mfem::Quadrature1D::GaussLegendre));
  jlModule.set_const("mfem!Quadrature1D!GaussLobatto", static_cast<int>(mfem::Quadrature1D::GaussLobatto));
  jlModule.set_const("mfem!Quadrature1D!OpenUniform", static_cast<int>(mfem::Quadrature1D::OpenUniform));
  jlModule.set_const("mfem!Quadrature1D!ClosedUniform", static_cast<int>(mfem::Quadrature1D::ClosedUniform));
  jlModule.set_const("mfem!Quadrature1D!OpenHalfUniform", static_cast<int>(mfem::Quadrature1D::OpenHalfUniform));
  jlModule.set_const("mfem!Quadrature1D!ClosedGL", static_cast<int>(mfem::Quadrature1D::ClosedGL));

  DEBUG_MSG("Adding anonymous enum defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/ncmesh.hpp:37:4 (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/ncmesh.hpp:37:4
  jlModule.set_const("mfem!Refinement!X", static_cast<int>(mfem::Refinement::X));
  jlModule.set_const("mfem!Refinement!Y", static_cast<int>(mfem::Refinement::Y));
  jlModule.set_const("mfem!Refinement!Z", static_cast<int>(mfem::Refinement::Z));
  jlModule.set_const("mfem!Refinement!XY", static_cast<int>(mfem::Refinement::XY));
  jlModule.set_const("mfem!Refinement!XZ", static_cast<int>(mfem::Refinement::XZ));
  jlModule.set_const("mfem!Refinement!YZ", static_cast<int>(mfem::Refinement::YZ));
  jlModule.set_const("mfem!Refinement!XYZ", static_cast<int>(mfem::Refinement::XYZ));

  DEBUG_MSG("Adding wrapper for enum mfem::Geometry::Type (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/geom.hpp:35:9
  jlModule.add_bits<mfem::Geometry::Type>("mfem!Geometry!Type", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!Geometry!INVALID", mfem::Geometry::INVALID);
  jlModule.set_const("mfem!Geometry!POINT", mfem::Geometry::POINT);
  jlModule.set_const("mfem!Geometry!SEGMENT", mfem::Geometry::SEGMENT);
  jlModule.set_const("mfem!Geometry!TRIANGLE", mfem::Geometry::TRIANGLE);
  jlModule.set_const("mfem!Geometry!SQUARE", mfem::Geometry::SQUARE);
  jlModule.set_const("mfem!Geometry!TETRAHEDRON", mfem::Geometry::TETRAHEDRON);
  jlModule.set_const("mfem!Geometry!CUBE", mfem::Geometry::CUBE);
  jlModule.set_const("mfem!Geometry!PRISM", mfem::Geometry::PRISM);
  jlModule.set_const("mfem!Geometry!PYRAMID", mfem::Geometry::PYRAMID);
  jlModule.set_const("mfem!Geometry!NUM_GEOMETRIES", mfem::Geometry::NUM_GEOMETRIES);

  DEBUG_MSG("Adding wrapper for enum mfem::FaceType (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/mesh.hpp:45:12
  jlModule.add_bits<mfem::FaceType>("mfem!FaceType", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!FaceType!Interior", mfem::FaceType::Interior);
  jlModule.set_const("mfem!FaceType!Boundary", mfem::FaceType::Boundary);

  DEBUG_MSG("Adding wrapper for enum mfem::Mesh::Operation (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/mesh.hpp:265:9
  jlModule.add_bits<mfem::Mesh::Operation>("mfem!Mesh!Operation", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!Mesh!NONE", mfem::Mesh::NONE);
  jlModule.set_const("mfem!Mesh!REFINE", mfem::Mesh::REFINE);
  jlModule.set_const("mfem!Mesh!DEREFINE", mfem::Mesh::DEREFINE);
  jlModule.set_const("mfem!Mesh!REBALANCE", mfem::Mesh::REBALANCE);

  DEBUG_MSG("Adding wrapper for enum mfem::Element::Type (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/element.hpp:41:9
  jlModule.add_bits<mfem::Element::Type>("mfem!Element!Type", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!Element!POINT", mfem::Element::POINT);
  jlModule.set_const("mfem!Element!SEGMENT", mfem::Element::SEGMENT);
  jlModule.set_const("mfem!Element!TRIANGLE", mfem::Element::TRIANGLE);
  jlModule.set_const("mfem!Element!QUADRILATERAL", mfem::Element::QUADRILATERAL);
  jlModule.set_const("mfem!Element!TETRAHEDRON", mfem::Element::TETRAHEDRON);
  jlModule.set_const("mfem!Element!HEXAHEDRON", mfem::Element::HEXAHEDRON);
  jlModule.set_const("mfem!Element!WEDGE", mfem::Element::WEDGE);
  jlModule.set_const("mfem!Element!PYRAMID", mfem::Element::PYRAMID);

  DEBUG_MSG("Adding wrapper for enum mfem::Mesh::FaceTopology (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/mesh.hpp:1267:15
  jlModule.add_bits<mfem::Mesh::FaceTopology>("mfem!Mesh!FaceTopology", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!Mesh!FaceTopology!Boundary", mfem::Mesh::FaceTopology::Boundary);
  jlModule.set_const("mfem!Mesh!FaceTopology!Conforming", mfem::Mesh::FaceTopology::Conforming);
  jlModule.set_const("mfem!Mesh!FaceTopology!Nonconforming", mfem::Mesh::FaceTopology::Nonconforming);
  jlModule.set_const("mfem!Mesh!FaceTopology!NA", mfem::Mesh::FaceTopology::NA);

  DEBUG_MSG("Adding wrapper for enum mfem::Mesh::ElementLocation (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/mesh.hpp:1279:15
  jlModule.add_bits<mfem::Mesh::ElementLocation>("mfem!Mesh!ElementLocation", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!Mesh!ElementLocation!Local", mfem::Mesh::ElementLocation::Local);
  jlModule.set_const("mfem!Mesh!ElementLocation!FaceNbr", mfem::Mesh::ElementLocation::FaceNbr);
  jlModule.set_const("mfem!Mesh!ElementLocation!NA", mfem::Mesh::ElementLocation::NA);

  DEBUG_MSG("Adding wrapper for enum mfem::Mesh::ElementConformity (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/mesh.hpp:1294:15
  jlModule.add_bits<mfem::Mesh::ElementConformity>("mfem!Mesh!ElementConformity", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!Mesh!ElementConformity!Coincident", mfem::Mesh::ElementConformity::Coincident);
  jlModule.set_const("mfem!Mesh!ElementConformity!Superset", mfem::Mesh::ElementConformity::Superset);
  jlModule.set_const("mfem!Mesh!ElementConformity!Subset", mfem::Mesh::ElementConformity::Subset);
  jlModule.set_const("mfem!Mesh!ElementConformity!NA", mfem::Mesh::ElementConformity::NA);

  DEBUG_MSG("Adding wrapper for enum mfem::Mesh::FaceInfoTag (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/mesh.hpp:1313:15
  jlModule.add_bits<mfem::Mesh::FaceInfoTag>("mfem!Mesh!FaceInfoTag", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!Mesh!FaceInfoTag!Boundary", mfem::Mesh::FaceInfoTag::Boundary);
  jlModule.set_const("mfem!Mesh!FaceInfoTag!LocalConforming", mfem::Mesh::FaceInfoTag::LocalConforming);
  jlModule.set_const("mfem!Mesh!FaceInfoTag!LocalSlaveNonconforming", mfem::Mesh::FaceInfoTag::LocalSlaveNonconforming);
  jlModule.set_const("mfem!Mesh!FaceInfoTag!SharedConforming", mfem::Mesh::FaceInfoTag::SharedConforming);
  jlModule.set_const("mfem!Mesh!FaceInfoTag!SharedSlaveNonconforming", mfem::Mesh::FaceInfoTag::SharedSlaveNonconforming);
  jlModule.set_const("mfem!Mesh!FaceInfoTag!MasterNonconforming", mfem::Mesh::FaceInfoTag::MasterNonconforming);
  jlModule.set_const("mfem!Mesh!FaceInfoTag!GhostSlave", mfem::Mesh::FaceInfoTag::GhostSlave);
  jlModule.set_const("mfem!Mesh!FaceInfoTag!GhostMaster", mfem::Mesh::FaceInfoTag::GhostMaster);

  DEBUG_MSG("Adding wrapper for enum mfem::VTKFormat (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/vtk.hpp:93:12
  jlModule.add_bits<mfem::VTKFormat>("mfem!VTKFormat", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!VTKFormat!ASCII", mfem::VTKFormat::ASCII);
  jlModule.set_const("mfem!VTKFormat!BINARY", mfem::VTKFormat::BINARY);
  jlModule.set_const("mfem!VTKFormat!BINARY32", mfem::VTKFormat::BINARY32);

  DEBUG_MSG("Adding anonymous enum defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/fe_coll.hpp:45:4 (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/fe_coll.hpp:45:4
  jlModule.set_const("mfem!FiniteElementCollection!CONTINUOUS", static_cast<int>(mfem::FiniteElementCollection::CONTINUOUS));
  jlModule.set_const("mfem!FiniteElementCollection!TANGENTIAL", static_cast<int>(mfem::FiniteElementCollection::TANGENTIAL));
  jlModule.set_const("mfem!FiniteElementCollection!NORMAL", static_cast<int>(mfem::FiniteElementCollection::NORMAL));
  jlModule.set_const("mfem!FiniteElementCollection!DISCONTINUOUS", static_cast<int>(mfem::FiniteElementCollection::DISCONTINUOUS));

  DEBUG_MSG("Adding anonymous enum defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/fe_coll.hpp:618:4 (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/fe_coll.hpp:618:4
  jlModule.set_const("mfem!NURBSFECollection!VariableOrder", static_cast<int>(mfem::NURBSFECollection::VariableOrder));

  DEBUG_MSG("Adding wrapper for enum mfem::Ordering::Type (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/fespace.hpp:33:9
  jlModule.add_bits<mfem::Ordering::Type>("mfem!Ordering!Type", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!Ordering!byNODES", mfem::Ordering::byNODES);
  jlModule.set_const("mfem!Ordering!byVDIM", mfem::Ordering::byVDIM);

  DEBUG_MSG("Adding wrapper for enum mfem::ElementDofOrdering (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/fespace.hpp:66:12
  jlModule.add_bits<mfem::ElementDofOrdering>("mfem!ElementDofOrdering", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!ElementDofOrdering!NATIVE", mfem::ElementDofOrdering::NATIVE);
  jlModule.set_const("mfem!ElementDofOrdering!LEXICOGRAPHIC", mfem::ElementDofOrdering::LEXICOGRAPHIC);

  DEBUG_MSG("Adding wrapper for enum mfem::L2FaceValues (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/restriction.hpp:105:12
  jlModule.add_bits<mfem::L2FaceValues>("mfem!L2FaceValues", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!L2FaceValues!SingleValued", mfem::L2FaceValues::SingleValued);
  jlModule.set_const("mfem!L2FaceValues!DoubleValued", mfem::L2FaceValues::DoubleValued);

  DEBUG_MSG("Adding wrapper for enum mfem::GridFunction::AvgType (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:405:9
  jlModule.add_bits<mfem::GridFunction::AvgType>("mfem!GridFunction!AvgType", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!GridFunction!ARITHMETIC", mfem::GridFunction::ARITHMETIC);
  jlModule.set_const("mfem!GridFunction!HARMONIC", mfem::GridFunction::HARMONIC);

  DEBUG_MSG("Adding wrapper for enum mfem::JumpScaling::JumpScalingType (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:733:9
  jlModule.add_bits<mfem::JumpScaling::JumpScalingType>("mfem!JumpScaling!JumpScalingType", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!JumpScaling!CONSTANT", mfem::JumpScaling::CONSTANT);
  jlModule.set_const("mfem!JumpScaling!ONE_OVER_H", mfem::JumpScaling::ONE_OVER_H);
  jlModule.set_const("mfem!JumpScaling!P_SQUARED_OVER_H", mfem::JumpScaling::P_SQUARED_OVER_H);

  DEBUG_MSG("Adding wrapper for enum mfem::AssemblyLevel (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/bilinearform.hpp:30:12
  jlModule.add_bits<mfem::AssemblyLevel>("mfem!AssemblyLevel", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!AssemblyLevel!LEGACY", mfem::AssemblyLevel::LEGACY);
  jlModule.set_const("mfem!AssemblyLevel!LEGACYFULL", mfem::AssemblyLevel::LEGACYFULL);
  jlModule.set_const("mfem!AssemblyLevel!FULL", mfem::AssemblyLevel::FULL);
  jlModule.set_const("mfem!AssemblyLevel!ELEMENT", mfem::AssemblyLevel::ELEMENT);
  jlModule.set_const("mfem!AssemblyLevel!PARTIAL", mfem::AssemblyLevel::PARTIAL);
  jlModule.set_const("mfem!AssemblyLevel!NONE", mfem::AssemblyLevel::NONE);

  DEBUG_MSG("Adding wrapper for enum mfem::DataCollection::Format (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/fem/datacollection.hpp:147:9
  jlModule.add_bits<mfem::DataCollection::Format>("mfem!DataCollection!Format", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("mfem!DataCollection!SERIAL_FORMAT", mfem::DataCollection::SERIAL_FORMAT);
  jlModule.set_const("mfem!DataCollection!PARALLEL_FORMAT", mfem::DataCollection::PARALLEL_FORMAT);

  DEBUG_MSG("Adding anonymous enum defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/fem/datacollection.hpp:379:4 (" __HERE__ ")");
  // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/fem/datacollection.hpp:379:4
  jlModule.set_const("mfem!DataCollection!NO_ERROR", static_cast<int>(mfem::DataCollection::NO_ERROR));
  jlModule.set_const("mfem!DataCollection!READ_ERROR", static_cast<int>(mfem::DataCollection::READ_ERROR));
  jlModule.set_const("mfem!DataCollection!WRITE_ERROR", static_cast<int>(mfem::DataCollection::WRITE_ERROR));
  for(const auto& w: wrappers) w->add_methods();

}
