// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jllibMFEM.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<mfem::NonlinearFormIntegrator> : std::false_type { };
  template<> struct DefaultConstructible<mfem::NonlinearFormIntegrator> : std::false_type { };
}

// Class generating the wrapper for type mfem::NonlinearFormIntegrator
// signature to use in the veto file: mfem::NonlinearFormIntegrator
struct Jlmfem_NonlinearFormIntegrator: public Wrapper {

  Jlmfem_NonlinearFormIntegrator(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type mfem::NonlinearFormIntegrator (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:27:7
    jlcxx::TypeWrapper<mfem::NonlinearFormIntegrator>  t = jlModule.add_type<mfem::NonlinearFormIntegrator>("mfem!NonlinearFormIntegrator");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<mfem::NonlinearFormIntegrator>>(new jlcxx::TypeWrapper<mfem::NonlinearFormIntegrator>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for void mfem::NonlinearFormIntegrator::SetIntRule(const mfem::IntegrationRule *) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::NonlinearFormIntegrator::SetIntRule(const mfem::IntegrationRule *)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:43:17
    t.method("SetIntRule", [](mfem::NonlinearFormIntegrator& a, const mfem::IntegrationRule * arg0)->void { a.SetIntRule(arg0); });
    t.method("SetIntRule", [](mfem::NonlinearFormIntegrator* a, const mfem::IntegrationRule * arg0)->void { a->SetIntRule(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::NonlinearFormIntegrator::SetIntegrationRule(const mfem::IntegrationRule &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::NonlinearFormIntegrator::SetIntegrationRule(const mfem::IntegrationRule &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:46:9
    t.method("SetIntegrationRule", [](mfem::NonlinearFormIntegrator& a, const mfem::IntegrationRule & arg0)->void { a.SetIntegrationRule(arg0); });
    t.method("SetIntegrationRule", [](mfem::NonlinearFormIntegrator* a, const mfem::IntegrationRule & arg0)->void { a->SetIntegrationRule(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::NonlinearFormIntegrator::SetPAMemoryType(mfem::MemoryType) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::NonlinearFormIntegrator::SetPAMemoryType(mfem::MemoryType)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:50:9
    t.method("SetPAMemoryType", [](mfem::NonlinearFormIntegrator& a, mfem::MemoryType arg0)->void { a.SetPAMemoryType(arg0); });
    t.method("SetPAMemoryType", [](mfem::NonlinearFormIntegrator* a, mfem::MemoryType arg0)->void { a->SetPAMemoryType(arg0); });

    DEBUG_MSG("Adding wrapper for const mfem::IntegrationRule * mfem::NonlinearFormIntegrator::GetIntegrationRule() (" __HERE__ ")");
    // signature to use in the veto list: const mfem::IntegrationRule * mfem::NonlinearFormIntegrator::GetIntegrationRule()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:53:27
    t.method("GetIntegrationRule", [](mfem::NonlinearFormIntegrator const& a)->const mfem::IntegrationRule * { return a.GetIntegrationRule(); });
    t.method("GetIntegrationRule", [](mfem::NonlinearFormIntegrator const* a)->const mfem::IntegrationRule * { return a->GetIntegrationRule(); });

    DEBUG_MSG("Adding wrapper for void mfem::NonlinearFormIntegrator::AssembleElementVector(const mfem::FiniteElement &, mfem::ElementTransformation &, const mfem::Vector &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::NonlinearFormIntegrator::AssembleElementVector(const mfem::FiniteElement &, mfem::ElementTransformation &, const mfem::Vector &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:56:17
    t.method("AssembleElementVector", [](mfem::NonlinearFormIntegrator& a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, const mfem::Vector & arg2, mfem::Vector & arg3)->void { a.AssembleElementVector(arg0, arg1, arg2, arg3); });
    t.method("AssembleElementVector", [](mfem::NonlinearFormIntegrator* a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, const mfem::Vector & arg2, mfem::Vector & arg3)->void { a->AssembleElementVector(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void mfem::NonlinearFormIntegrator::AssembleFaceVector(const mfem::FiniteElement &, const mfem::FiniteElement &, mfem::FaceElementTransformations &, const mfem::Vector &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::NonlinearFormIntegrator::AssembleFaceVector(const mfem::FiniteElement &, const mfem::FiniteElement &, mfem::FaceElementTransformations &, const mfem::Vector &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:62:17
    t.method("AssembleFaceVector", [](mfem::NonlinearFormIntegrator& a, const mfem::FiniteElement & arg0, const mfem::FiniteElement & arg1, mfem::FaceElementTransformations & arg2, const mfem::Vector & arg3, mfem::Vector & arg4)->void { a.AssembleFaceVector(arg0, arg1, arg2, arg3, arg4); });
    t.method("AssembleFaceVector", [](mfem::NonlinearFormIntegrator* a, const mfem::FiniteElement & arg0, const mfem::FiniteElement & arg1, mfem::FaceElementTransformations & arg2, const mfem::Vector & arg3, mfem::Vector & arg4)->void { a->AssembleFaceVector(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for void mfem::NonlinearFormIntegrator::AssembleElementGrad(const mfem::FiniteElement &, mfem::ElementTransformation &, const mfem::Vector &, mfem::DenseMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::NonlinearFormIntegrator::AssembleElementGrad(const mfem::FiniteElement &, mfem::ElementTransformation &, const mfem::Vector &, mfem::DenseMatrix &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:68:17
    t.method("AssembleElementGrad", [](mfem::NonlinearFormIntegrator& a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, const mfem::Vector & arg2, mfem::DenseMatrix & arg3)->void { a.AssembleElementGrad(arg0, arg1, arg2, arg3); });
    t.method("AssembleElementGrad", [](mfem::NonlinearFormIntegrator* a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, const mfem::Vector & arg2, mfem::DenseMatrix & arg3)->void { a->AssembleElementGrad(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for void mfem::NonlinearFormIntegrator::AssembleFaceGrad(const mfem::FiniteElement &, const mfem::FiniteElement &, mfem::FaceElementTransformations &, const mfem::Vector &, mfem::DenseMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::NonlinearFormIntegrator::AssembleFaceGrad(const mfem::FiniteElement &, const mfem::FiniteElement &, mfem::FaceElementTransformations &, const mfem::Vector &, mfem::DenseMatrix &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:74:17
    t.method("AssembleFaceGrad", [](mfem::NonlinearFormIntegrator& a, const mfem::FiniteElement & arg0, const mfem::FiniteElement & arg1, mfem::FaceElementTransformations & arg2, const mfem::Vector & arg3, mfem::DenseMatrix & arg4)->void { a.AssembleFaceGrad(arg0, arg1, arg2, arg3, arg4); });
    t.method("AssembleFaceGrad", [](mfem::NonlinearFormIntegrator* a, const mfem::FiniteElement & arg0, const mfem::FiniteElement & arg1, mfem::FaceElementTransformations & arg2, const mfem::Vector & arg3, mfem::DenseMatrix & arg4)->void { a->AssembleFaceGrad(arg0, arg1, arg2, arg3, arg4); });

    DEBUG_MSG("Adding wrapper for double mfem::NonlinearFormIntegrator::GetElementEnergy(const mfem::FiniteElement &, mfem::ElementTransformation &, const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double mfem::NonlinearFormIntegrator::GetElementEnergy(const mfem::FiniteElement &, mfem::ElementTransformation &, const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:80:19
    t.method("GetElementEnergy", [](mfem::NonlinearFormIntegrator& a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, const mfem::Vector & arg2)->double { return a.GetElementEnergy(arg0, arg1, arg2); });
    t.method("GetElementEnergy", [](mfem::NonlinearFormIntegrator* a, const mfem::FiniteElement & arg0, mfem::ElementTransformation & arg1, const mfem::Vector & arg2)->double { return a->GetElementEnergy(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void mfem::NonlinearFormIntegrator::AssemblePA(const mfem::FiniteElementSpace &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::NonlinearFormIntegrator::AssemblePA(const mfem::FiniteElementSpace &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:87:17
    t.method("AssemblePA", [](mfem::NonlinearFormIntegrator& a, const mfem::FiniteElementSpace & arg0)->void { a.AssemblePA(arg0); });
    t.method("AssemblePA", [](mfem::NonlinearFormIntegrator* a, const mfem::FiniteElementSpace & arg0)->void { a->AssemblePA(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::NonlinearFormIntegrator::AssemblePA(const mfem::FiniteElementSpace &, const mfem::FiniteElementSpace &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::NonlinearFormIntegrator::AssemblePA(const mfem::FiniteElementSpace &, const mfem::FiniteElementSpace &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:92:17
    t.method("AssemblePA", [](mfem::NonlinearFormIntegrator& a, const mfem::FiniteElementSpace & arg0, const mfem::FiniteElementSpace & arg1)->void { a.AssemblePA(arg0, arg1); });
    t.method("AssemblePA", [](mfem::NonlinearFormIntegrator* a, const mfem::FiniteElementSpace & arg0, const mfem::FiniteElementSpace & arg1)->void { a->AssemblePA(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::NonlinearFormIntegrator::AssembleGradPA(const mfem::Vector &, const mfem::FiniteElementSpace &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::NonlinearFormIntegrator::AssembleGradPA(const mfem::Vector &, const mfem::FiniteElementSpace &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:100:17
    t.method("AssembleGradPA", [](mfem::NonlinearFormIntegrator& a, const mfem::Vector & arg0, const mfem::FiniteElementSpace & arg1)->void { a.AssembleGradPA(arg0, arg1); });
    t.method("AssembleGradPA", [](mfem::NonlinearFormIntegrator* a, const mfem::Vector & arg0, const mfem::FiniteElementSpace & arg1)->void { a->AssembleGradPA(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for double mfem::NonlinearFormIntegrator::GetLocalStateEnergyPA(const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double mfem::NonlinearFormIntegrator::GetLocalStateEnergyPA(const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:105:19
    t.method("GetLocalStateEnergyPA", [](mfem::NonlinearFormIntegrator const& a, const mfem::Vector & arg0)->double { return a.GetLocalStateEnergyPA(arg0); });
    t.method("GetLocalStateEnergyPA", [](mfem::NonlinearFormIntegrator const* a, const mfem::Vector & arg0)->double { return a->GetLocalStateEnergyPA(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::NonlinearFormIntegrator::AddMultPA(const mfem::Vector &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::NonlinearFormIntegrator::AddMultPA(const mfem::Vector &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:114:17
    t.method("AddMultPA", [](mfem::NonlinearFormIntegrator const& a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a.AddMultPA(arg0, arg1); });
    t.method("AddMultPA", [](mfem::NonlinearFormIntegrator const* a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a->AddMultPA(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::NonlinearFormIntegrator::AddMultGradPA(const mfem::Vector &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::NonlinearFormIntegrator::AddMultGradPA(const mfem::Vector &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:122:17
    t.method("AddMultGradPA", [](mfem::NonlinearFormIntegrator const& a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a.AddMultGradPA(arg0, arg1); });
    t.method("AddMultGradPA", [](mfem::NonlinearFormIntegrator const* a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a->AddMultGradPA(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::NonlinearFormIntegrator::AssembleGradDiagonalPA(mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::NonlinearFormIntegrator::AssembleGradDiagonalPA(mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:129:17
    t.method("AssembleGradDiagonalPA", [](mfem::NonlinearFormIntegrator const& a, mfem::Vector & arg0)->void { a.AssembleGradDiagonalPA(arg0); });
    t.method("AssembleGradDiagonalPA", [](mfem::NonlinearFormIntegrator const* a, mfem::Vector & arg0)->void { a->AssembleGradDiagonalPA(arg0); });

    DEBUG_MSG("Adding wrapper for bool mfem::NonlinearFormIntegrator::SupportsCeed() (" __HERE__ ")");
    // signature to use in the veto list: bool mfem::NonlinearFormIntegrator::SupportsCeed()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:132:17
    t.method("SupportsCeed", [](mfem::NonlinearFormIntegrator const& a)->bool { return a.SupportsCeed(); });
    t.method("SupportsCeed", [](mfem::NonlinearFormIntegrator const* a)->bool { return a->SupportsCeed(); });

    DEBUG_MSG("Adding wrapper for void mfem::NonlinearFormIntegrator::AssembleMF(const mfem::FiniteElementSpace &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::NonlinearFormIntegrator::AssembleMF(const mfem::FiniteElementSpace &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:135:17
    t.method("AssembleMF", [](mfem::NonlinearFormIntegrator& a, const mfem::FiniteElementSpace & arg0)->void { a.AssembleMF(arg0); });
    t.method("AssembleMF", [](mfem::NonlinearFormIntegrator* a, const mfem::FiniteElementSpace & arg0)->void { a->AssembleMF(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::NonlinearFormIntegrator::AddMultMF(const mfem::Vector &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::NonlinearFormIntegrator::AddMultMF(const mfem::Vector &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:143:17
    t.method("AddMultMF", [](mfem::NonlinearFormIntegrator const& a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a.AddMultMF(arg0, arg1); });
    t.method("AddMultMF", [](mfem::NonlinearFormIntegrator const* a, const mfem::Vector & arg0, mfem::Vector & arg1)->void { a->AddMultMF(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for mfem::ceed::Operator & mfem::NonlinearFormIntegrator::GetCeedOp() (" __HERE__ ")");
    // signature to use in the veto list: mfem::ceed::Operator & mfem::NonlinearFormIntegrator::GetCeedOp()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/nonlininteg.hpp:145:20
    t.method("GetCeedOp", [](mfem::NonlinearFormIntegrator& a)->mfem::ceed::Operator & { return a.GetCeedOp(); });
    t.method("GetCeedOp", [](mfem::NonlinearFormIntegrator* a)->mfem::ceed::Operator & { return a->GetCeedOp(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<mfem::NonlinearFormIntegrator>> type_;
};
std::shared_ptr<Wrapper> newJlmfem_NonlinearFormIntegrator(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new Jlmfem_NonlinearFormIntegrator(module));
}
