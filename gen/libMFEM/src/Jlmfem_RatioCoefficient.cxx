// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jllibMFEM.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<mfem::RatioCoefficient> : std::false_type { };
  template<> struct DefaultConstructible<mfem::RatioCoefficient> : std::false_type { };
template<> struct SuperType<mfem::RatioCoefficient> { typedef mfem::Coefficient type; };
}

// Class generating the wrapper for type mfem::RatioCoefficient
// signature to use in the veto file: mfem::RatioCoefficient
struct Jlmfem_RatioCoefficient: public Wrapper {

  Jlmfem_RatioCoefficient(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type mfem::RatioCoefficient (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1395:7
    jlcxx::TypeWrapper<mfem::RatioCoefficient>  t = jlModule.add_type<mfem::RatioCoefficient>("mfem!RatioCoefficient",
      jlcxx::julia_base_type<mfem::Coefficient>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<mfem::RatioCoefficient>>(new jlcxx::TypeWrapper<mfem::RatioCoefficient>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void mfem::RatioCoefficient::RatioCoefficient(double, mfem::Coefficient &) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1406:4
    t.constructor<double, mfem::Coefficient &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::RatioCoefficient::RatioCoefficient(mfem::Coefficient &, mfem::Coefficient &) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1410:4
    t.constructor<mfem::Coefficient &, mfem::Coefficient &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::RatioCoefficient::RatioCoefficient(mfem::Coefficient &, double) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1414:4
    t.constructor<mfem::Coefficient &, double>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void mfem::RatioCoefficient::SetTime(double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::RatioCoefficient::SetTime(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1418:9
    t.method("SetTime", [](mfem::RatioCoefficient& a, double arg0)->void { a.SetTime(arg0); });
    t.method("SetTime", [](mfem::RatioCoefficient* a, double arg0)->void { a->SetTime(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::RatioCoefficient::SetAConst(double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::RatioCoefficient::SetAConst(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1421:9
    t.method("SetAConst", [](mfem::RatioCoefficient& a, double arg0)->void { a.SetAConst(arg0); });
    t.method("SetAConst", [](mfem::RatioCoefficient* a, double arg0)->void { a->SetAConst(arg0); });

    DEBUG_MSG("Adding wrapper for double mfem::RatioCoefficient::GetAConst() (" __HERE__ ")");
    // signature to use in the veto list: double mfem::RatioCoefficient::GetAConst()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1423:11
    t.method("GetAConst", [](mfem::RatioCoefficient const& a)->double { return a.GetAConst(); });
    t.method("GetAConst", [](mfem::RatioCoefficient const* a)->double { return a->GetAConst(); });

    DEBUG_MSG("Adding wrapper for void mfem::RatioCoefficient::SetBConst(double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::RatioCoefficient::SetBConst(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1426:9
    t.method("SetBConst", [](mfem::RatioCoefficient& a, double arg0)->void { a.SetBConst(arg0); });
    t.method("SetBConst", [](mfem::RatioCoefficient* a, double arg0)->void { a->SetBConst(arg0); });

    DEBUG_MSG("Adding wrapper for double mfem::RatioCoefficient::GetBConst() (" __HERE__ ")");
    // signature to use in the veto list: double mfem::RatioCoefficient::GetBConst()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1428:11
    t.method("GetBConst", [](mfem::RatioCoefficient const& a)->double { return a.GetBConst(); });
    t.method("GetBConst", [](mfem::RatioCoefficient const* a)->double { return a->GetBConst(); });

    DEBUG_MSG("Adding wrapper for void mfem::RatioCoefficient::SetACoef(mfem::Coefficient &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::RatioCoefficient::SetACoef(mfem::Coefficient &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1431:9
    t.method("SetACoef", [](mfem::RatioCoefficient& a, mfem::Coefficient & arg0)->void { a.SetACoef(arg0); });
    t.method("SetACoef", [](mfem::RatioCoefficient* a, mfem::Coefficient & arg0)->void { a->SetACoef(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::Coefficient * mfem::RatioCoefficient::GetACoef() (" __HERE__ ")");
    // signature to use in the veto list: mfem::Coefficient * mfem::RatioCoefficient::GetACoef()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1433:18
    t.method("GetACoef", [](mfem::RatioCoefficient const& a)->mfem::Coefficient * { return a.GetACoef(); });
    t.method("GetACoef", [](mfem::RatioCoefficient const* a)->mfem::Coefficient * { return a->GetACoef(); });

    DEBUG_MSG("Adding wrapper for void mfem::RatioCoefficient::SetBCoef(mfem::Coefficient &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::RatioCoefficient::SetBCoef(mfem::Coefficient &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1436:9
    t.method("SetBCoef", [](mfem::RatioCoefficient& a, mfem::Coefficient & arg0)->void { a.SetBCoef(arg0); });
    t.method("SetBCoef", [](mfem::RatioCoefficient* a, mfem::Coefficient & arg0)->void { a->SetBCoef(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::Coefficient * mfem::RatioCoefficient::GetBCoef() (" __HERE__ ")");
    // signature to use in the veto list: mfem::Coefficient * mfem::RatioCoefficient::GetBCoef()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1438:18
    t.method("GetBCoef", [](mfem::RatioCoefficient const& a)->mfem::Coefficient * { return a.GetBCoef(); });
    t.method("GetBCoef", [](mfem::RatioCoefficient const* a)->mfem::Coefficient * { return a->GetBCoef(); });

    DEBUG_MSG("Adding wrapper for double mfem::RatioCoefficient::Eval(mfem::ElementTransformation &, const mfem::IntegrationPoint &) (" __HERE__ ")");
    // signature to use in the veto list: double mfem::RatioCoefficient::Eval(mfem::ElementTransformation &, const mfem::IntegrationPoint &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:1441:19
    t.method("Eval", [](mfem::RatioCoefficient& a, mfem::ElementTransformation & arg0, const mfem::IntegrationPoint & arg1)->double { return a.Eval(arg0, arg1); });
    t.method("Eval", [](mfem::RatioCoefficient* a, mfem::ElementTransformation & arg0, const mfem::IntegrationPoint & arg1)->double { return a->Eval(arg0, arg1); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<mfem::RatioCoefficient>> type_;
};
std::shared_ptr<Wrapper> newJlmfem_RatioCoefficient(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new Jlmfem_RatioCoefficient(module));
}
