// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jllibMFEM.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<mfem::QuadratureFunction> : std::false_type { };
  template<> struct DefaultConstructible<mfem::QuadratureFunction> : std::false_type { };
template<> struct SuperType<mfem::QuadratureFunction> { typedef mfem::Vector type; };
}

// Class generating the wrapper for type mfem::QuadratureFunction
// signature to use in the veto file: mfem::QuadratureFunction
struct Jlmfem_QuadratureFunction: public Wrapper {

  Jlmfem_QuadratureFunction(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type mfem::QuadratureFunction (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:757:7
    jlcxx::TypeWrapper<mfem::QuadratureFunction>  t = jlModule.add_type<mfem::QuadratureFunction>("mfem!QuadratureFunction",
      jlcxx::julia_base_type<mfem::Vector>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<mfem::QuadratureFunction>>(new jlcxx::TypeWrapper<mfem::QuadratureFunction>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::QuadratureFunction::QuadratureFunction(const mfem::QuadratureFunction &) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:772:4
    t.constructor<const mfem::QuadratureFunction &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::QuadratureFunction::QuadratureFunction(mfem::QuadratureSpace *, int) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:779:4
    t.constructor<mfem::QuadratureSpace *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<mfem::QuadratureSpace *, int>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::QuadratureFunction::QuadratureFunction(mfem::QuadratureSpace *, double *, int) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:787:4
    t.constructor<mfem::QuadratureSpace *, double *>(/*finalize=*/jlcxx::finalize_policy::yes);
    t.constructor<mfem::QuadratureSpace *, double *, int>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for mfem::QuadratureSpace * mfem::QuadratureFunction::GetSpace() (" __HERE__ ")");
    // signature to use in the veto list: mfem::QuadratureSpace * mfem::QuadratureFunction::GetSpace()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:798:21
    t.method("GetSpace", [](mfem::QuadratureFunction const& a)->mfem::QuadratureSpace * { return a.GetSpace(); });
    t.method("GetSpace", [](mfem::QuadratureFunction const* a)->mfem::QuadratureSpace * { return a->GetSpace(); });

    DEBUG_MSG("Adding wrapper for void mfem::QuadratureFunction::SetSpace(mfem::QuadratureSpace *, int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::QuadratureFunction::SetSpace(mfem::QuadratureSpace *, int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:809:16
    t.method("SetSpace", [](mfem::QuadratureFunction& a, mfem::QuadratureSpace * arg0)->void { a.SetSpace(arg0); });
    t.method("SetSpace", [](mfem::QuadratureFunction& a, mfem::QuadratureSpace * arg0, int arg1)->void { a.SetSpace(arg0, arg1); });
    t.method("SetSpace", [](mfem::QuadratureFunction* a, mfem::QuadratureSpace * arg0)->void { a->SetSpace(arg0); });
    t.method("SetSpace", [](mfem::QuadratureFunction* a, mfem::QuadratureSpace * arg0, int arg1)->void { a->SetSpace(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::QuadratureFunction::SetSpace(mfem::QuadratureSpace *, double *, int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::QuadratureFunction::SetSpace(mfem::QuadratureSpace *, double *, int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:821:16
    t.method("SetSpace", [](mfem::QuadratureFunction& a, mfem::QuadratureSpace * arg0, double * arg1)->void { a.SetSpace(arg0, arg1); });
    t.method("SetSpace", [](mfem::QuadratureFunction& a, mfem::QuadratureSpace * arg0, double * arg1, int arg2)->void { a.SetSpace(arg0, arg1, arg2); });
    t.method("SetSpace", [](mfem::QuadratureFunction* a, mfem::QuadratureSpace * arg0, double * arg1)->void { a->SetSpace(arg0, arg1); });
    t.method("SetSpace", [](mfem::QuadratureFunction* a, mfem::QuadratureSpace * arg0, double * arg1, int arg2)->void { a->SetSpace(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for int mfem::QuadratureFunction::GetVDim() (" __HERE__ ")");
    // signature to use in the veto list: int mfem::QuadratureFunction::GetVDim()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:825:8
    t.method("GetVDim", [](mfem::QuadratureFunction const& a)->int { return a.GetVDim(); });
    t.method("GetVDim", [](mfem::QuadratureFunction const* a)->int { return a->GetVDim(); });

    DEBUG_MSG("Adding wrapper for void mfem::QuadratureFunction::SetVDim(int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::QuadratureFunction::SetVDim(int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:828:9
    t.method("SetVDim", [](mfem::QuadratureFunction& a, int arg0)->void { a.SetVDim(arg0); });
    t.method("SetVDim", [](mfem::QuadratureFunction* a, int arg0)->void { a->SetVDim(arg0); });

    DEBUG_MSG("Adding wrapper for bool mfem::QuadratureFunction::OwnsSpace() (" __HERE__ ")");
    // signature to use in the veto list: bool mfem::QuadratureFunction::OwnsSpace()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:832:9
    t.method("OwnsSpace", [](mfem::QuadratureFunction& a)->bool { return a.OwnsSpace(); });
    t.method("OwnsSpace", [](mfem::QuadratureFunction* a)->bool { return a->OwnsSpace(); });

    DEBUG_MSG("Adding wrapper for void mfem::QuadratureFunction::SetOwnsSpace(bool) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::QuadratureFunction::SetOwnsSpace(bool)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:835:9
    t.method("SetOwnsSpace", [](mfem::QuadratureFunction& a, bool arg0)->void { a.SetOwnsSpace(arg0); });
    t.method("SetOwnsSpace", [](mfem::QuadratureFunction* a, bool arg0)->void { a->SetOwnsSpace(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::QuadratureFunction & mfem::QuadratureFunction::operator=(double) (" __HERE__ ")");
    // signature to use in the veto list: mfem::QuadratureFunction & mfem::QuadratureFunction::operator=(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:838:24
    t.method("assign", [](mfem::QuadratureFunction& a, double arg0)->mfem::QuadratureFunction & { return a.operator=(arg0); });
    t.method("assign", [](mfem::QuadratureFunction* a, double arg0)->mfem::QuadratureFunction & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::QuadratureFunction & mfem::QuadratureFunction::operator=(const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: mfem::QuadratureFunction & mfem::QuadratureFunction::operator=(const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:844:24
    t.method("assign", [](mfem::QuadratureFunction& a, const mfem::Vector & arg0)->mfem::QuadratureFunction & { return a.operator=(arg0); });
    t.method("assign", [](mfem::QuadratureFunction* a, const mfem::Vector & arg0)->mfem::QuadratureFunction & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::QuadratureFunction & mfem::QuadratureFunction::operator=(const mfem::QuadratureFunction &) (" __HERE__ ")");
    // signature to use in the veto list: mfem::QuadratureFunction & mfem::QuadratureFunction::operator=(const mfem::QuadratureFunction &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:852:24
    t.method("assign", [](mfem::QuadratureFunction& a, const mfem::QuadratureFunction & arg0)->mfem::QuadratureFunction & { return a.operator=(arg0); });
    t.method("assign", [](mfem::QuadratureFunction* a, const mfem::QuadratureFunction & arg0)->mfem::QuadratureFunction & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for const mfem::IntegrationRule & mfem::QuadratureFunction::GetElementIntRule(int) (" __HERE__ ")");
    // signature to use in the veto list: const mfem::IntegrationRule & mfem::QuadratureFunction::GetElementIntRule(int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:855:27
    t.method("GetElementIntRule", [](mfem::QuadratureFunction const& a, int arg0)->const mfem::IntegrationRule & { return a.GetElementIntRule(arg0); });
    t.method("GetElementIntRule", [](mfem::QuadratureFunction const* a, int arg0)->const mfem::IntegrationRule & { return a->GetElementIntRule(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::QuadratureFunction::GetElementValues(int, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::QuadratureFunction::GetElementValues(int, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:865:16
    t.method("GetElementValues", [](mfem::QuadratureFunction& a, int arg0, mfem::Vector & arg1)->void { a.GetElementValues(arg0, arg1); });
    t.method("GetElementValues", [](mfem::QuadratureFunction* a, int arg0, mfem::Vector & arg1)->void { a->GetElementValues(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::QuadratureFunction::GetElementValues(int, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::QuadratureFunction::GetElementValues(int, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:874:16
    t.method("GetElementValues", [](mfem::QuadratureFunction const& a, int arg0, mfem::Vector & arg1)->void { a.GetElementValues(arg0, arg1); });
    t.method("GetElementValues", [](mfem::QuadratureFunction const* a, int arg0, mfem::Vector & arg1)->void { a->GetElementValues(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::QuadratureFunction::GetElementValues(int, const int, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::QuadratureFunction::GetElementValues(int, const int, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:879:16
    t.method("GetElementValues", [](mfem::QuadratureFunction& a, int arg0, const int arg1, mfem::Vector & arg2)->void { a.GetElementValues(arg0, arg1, arg2); });
    t.method("GetElementValues", [](mfem::QuadratureFunction* a, int arg0, const int arg1, mfem::Vector & arg2)->void { a->GetElementValues(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void mfem::QuadratureFunction::GetElementValues(int, const int, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::QuadratureFunction::GetElementValues(int, const int, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:884:16
    t.method("GetElementValues", [](mfem::QuadratureFunction const& a, int arg0, const int arg1, mfem::Vector & arg2)->void { a.GetElementValues(arg0, arg1, arg2); });
    t.method("GetElementValues", [](mfem::QuadratureFunction const* a, int arg0, const int arg1, mfem::Vector & arg2)->void { a->GetElementValues(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void mfem::QuadratureFunction::GetElementValues(int, mfem::DenseMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::QuadratureFunction::GetElementValues(int, mfem::DenseMatrix &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:893:16
    t.method("GetElementValues", [](mfem::QuadratureFunction& a, int arg0, mfem::DenseMatrix & arg1)->void { a.GetElementValues(arg0, arg1); });
    t.method("GetElementValues", [](mfem::QuadratureFunction* a, int arg0, mfem::DenseMatrix & arg1)->void { a->GetElementValues(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::QuadratureFunction::GetElementValues(int, mfem::DenseMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::QuadratureFunction::GetElementValues(int, mfem::DenseMatrix &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:902:16
    t.method("GetElementValues", [](mfem::QuadratureFunction const& a, int arg0, mfem::DenseMatrix & arg1)->void { a.GetElementValues(arg0, arg1); });
    t.method("GetElementValues", [](mfem::QuadratureFunction const* a, int arg0, mfem::DenseMatrix & arg1)->void { a->GetElementValues(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::QuadratureFunction::SaveVTU(const std::string &, mfem::VTKFormat, int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::QuadratureFunction::SaveVTU(const std::string &, mfem::VTKFormat, int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/gridfunc.hpp:920:9
    t.method("SaveVTU", [](mfem::QuadratureFunction const& a, const std::string & arg0)->void { a.SaveVTU(arg0); });
    t.method("SaveVTU", [](mfem::QuadratureFunction const& a, const std::string & arg0, mfem::VTKFormat arg1)->void { a.SaveVTU(arg0, arg1); });
    t.method("SaveVTU", [](mfem::QuadratureFunction const& a, const std::string & arg0, mfem::VTKFormat arg1, int arg2)->void { a.SaveVTU(arg0, arg1, arg2); });
    t.method("SaveVTU", [](mfem::QuadratureFunction const* a, const std::string & arg0)->void { a->SaveVTU(arg0); });
    t.method("SaveVTU", [](mfem::QuadratureFunction const* a, const std::string & arg0, mfem::VTKFormat arg1)->void { a->SaveVTU(arg0, arg1); });
    t.method("SaveVTU", [](mfem::QuadratureFunction const* a, const std::string & arg0, mfem::VTKFormat arg1, int arg2)->void { a->SaveVTU(arg0, arg1, arg2); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<mfem::QuadratureFunction>> type_;
};
std::shared_ptr<Wrapper> newJlmfem_QuadratureFunction(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new Jlmfem_QuadratureFunction(module));
}
