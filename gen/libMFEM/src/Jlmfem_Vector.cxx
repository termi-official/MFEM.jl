// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jllibMFEM.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<mfem::Vector> : std::false_type { };
  template<> struct DefaultConstructible<mfem::Vector> : std::false_type { };
}

// Class generating the wrapper for type mfem::Vector
// signature to use in the veto file: mfem::Vector
struct Jlmfem_Vector: public Wrapper {

  Jlmfem_Vector(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type mfem::Vector (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:60:7
    jlcxx::TypeWrapper<mfem::Vector>  t = jlModule.add_type<mfem::Vector>("mfem!Vector");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<mfem::Vector>>(new jlcxx::TypeWrapper<mfem::Vector>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::Vector::Vector(const mfem::Vector &) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:74:4
    t.constructor<const mfem::Vector &>(/*finalize=*/jlcxx::finalize_policy::yes);



    DEBUG_MSG("Adding wrapper for void mfem::Vector::Vector(int) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:81:13
    t.constructor<int>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::Vector::Vector(double *, int) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:86:4
    t.constructor<double *, int>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::Vector::Vector(mfem::Vector &, int, int) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:91:4
    t.constructor<mfem::Vector &, int, int>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::Vector::Vector(int, mfem::MemoryType) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:95:4
    t.constructor<int, mfem::MemoryType>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::Vector::Vector(int, mfem::MemoryType, mfem::MemoryType) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:100:4
    t.constructor<int, mfem::MemoryType, mfem::MemoryType>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void mfem::Vector::UseDevice(bool) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::UseDevice(bool)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:117:17
    t.method("UseDevice", [](mfem::Vector const& a, bool arg0)->void { a.UseDevice(arg0); });
    t.method("UseDevice", [](mfem::Vector const* a, bool arg0)->void { a->UseDevice(arg0); });

    DEBUG_MSG("Adding wrapper for bool mfem::Vector::UseDevice() (" __HERE__ ")");
    // signature to use in the veto list: bool mfem::Vector::UseDevice()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:120:17
    t.method("UseDevice", [](mfem::Vector const& a)->bool { return a.UseDevice(); });
    t.method("UseDevice", [](mfem::Vector const* a)->bool { return a->UseDevice(); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::SetSize(int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::SetSize(int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:139:9
    t.method("SetSize", [](mfem::Vector& a, int arg0)->void { a.SetSize(arg0); });
    t.method("SetSize", [](mfem::Vector* a, int arg0)->void { a->SetSize(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::SetSize(int, mfem::MemoryType) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::SetSize(int, mfem::MemoryType)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:142:9
    t.method("SetSize", [](mfem::Vector& a, int arg0, mfem::MemoryType arg1)->void { a.SetSize(arg0, arg1); });
    t.method("SetSize", [](mfem::Vector* a, int arg0, mfem::MemoryType arg1)->void { a->SetSize(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::SetSize(int, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::SetSize(int, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:145:9
    t.method("SetSize", [](mfem::Vector& a, int arg0, mfem::Vector & arg1)->void { a.SetSize(arg0, arg1); });
    t.method("SetSize", [](mfem::Vector* a, int arg0, mfem::Vector & arg1)->void { a->SetSize(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::SetData(double *) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::SetData(double *)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:149:9
    t.method("SetData", [](mfem::Vector& a, double * arg0)->void { a.SetData(arg0); });
    t.method("SetData", [](mfem::Vector* a, double * arg0)->void { a->SetData(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::SetDataAndSize(double *, int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::SetDataAndSize(double *, int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:156:9
    t.method("SetDataAndSize", [](mfem::Vector& a, double * arg0, int arg1)->void { a.SetDataAndSize(arg0, arg1); });
    t.method("SetDataAndSize", [](mfem::Vector* a, double * arg0, int arg1)->void { a->SetDataAndSize(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::NewDataAndSize(double *, int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::NewDataAndSize(double *, int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:162:9
    t.method("NewDataAndSize", [](mfem::Vector& a, double * arg0, int arg1)->void { a.NewDataAndSize(arg0, arg1); });
    t.method("NewDataAndSize", [](mfem::Vector* a, double * arg0, int arg1)->void { a->NewDataAndSize(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::NewMemoryAndSize(const mfem::Memory<double> &, int, bool) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::NewMemoryAndSize(const mfem::Memory<double> &, int, bool)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:177:16
    t.method("NewMemoryAndSize", [](mfem::Vector& a, const mfem::Memory<double> & arg0, int arg1, bool arg2)->void { a.NewMemoryAndSize(arg0, arg1, arg2); });
    t.method("NewMemoryAndSize", [](mfem::Vector* a, const mfem::Memory<double> & arg0, int arg1, bool arg2)->void { a->NewMemoryAndSize(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::MakeRef(mfem::Vector &, int, int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::MakeRef(mfem::Vector &, int, int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:180:16
    t.method("MakeRef", [](mfem::Vector& a, mfem::Vector & arg0, int arg1, int arg2)->void { a.MakeRef(arg0, arg1, arg2); });
    t.method("MakeRef", [](mfem::Vector* a, mfem::Vector & arg0, int arg1, int arg2)->void { a->MakeRef(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::MakeRef(mfem::Vector &, int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::MakeRef(mfem::Vector &, int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:184:16
    t.method("MakeRef", [](mfem::Vector& a, mfem::Vector & arg0, int arg1)->void { a.MakeRef(arg0, arg1); });
    t.method("MakeRef", [](mfem::Vector* a, mfem::Vector & arg0, int arg1)->void { a->MakeRef(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::MakeDataOwner() (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::MakeDataOwner()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:187:9
    t.method("MakeDataOwner", [](mfem::Vector const& a)->void { a.MakeDataOwner(); });
    t.method("MakeDataOwner", [](mfem::Vector const* a)->void { a->MakeDataOwner(); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::Destroy() (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::Destroy()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:190:9
    t.method("Destroy", [](mfem::Vector& a)->void { a.Destroy(); });
    t.method("Destroy", [](mfem::Vector* a)->void { a->Destroy(); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::DeleteDevice(bool) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::DeleteDevice(bool)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:195:9
    t.method("DeleteDevice", [](mfem::Vector& a)->void { a.DeleteDevice(); });
    t.method("DeleteDevice", [](mfem::Vector& a, bool arg0)->void { a.DeleteDevice(arg0); });
    t.method("DeleteDevice", [](mfem::Vector* a)->void { a->DeleteDevice(); });
    t.method("DeleteDevice", [](mfem::Vector* a, bool arg0)->void { a->DeleteDevice(arg0); });

    DEBUG_MSG("Adding wrapper for int mfem::Vector::Size() (" __HERE__ ")");
    // signature to use in the veto list: int mfem::Vector::Size()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:199:15
    t.method("Size", [](mfem::Vector const& a)->int { return a.Size(); });
    t.method("Size", [](mfem::Vector const* a)->int { return a->Size(); });

    DEBUG_MSG("Adding wrapper for int mfem::Vector::Capacity() (" __HERE__ ")");
    // signature to use in the veto list: int mfem::Vector::Capacity()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:203:15
    t.method("Capacity", [](mfem::Vector const& a)->int { return a.Capacity(); });
    t.method("Capacity", [](mfem::Vector const* a)->int { return a->Capacity(); });

    DEBUG_MSG("Adding wrapper for double * mfem::Vector::GetData() (" __HERE__ ")");
    // signature to use in the veto list: double * mfem::Vector::GetData()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:208:19
    t.method("GetData", [](mfem::Vector const& a)->double * { return a.GetData(); });
    t.method("GetData", [](mfem::Vector const* a)->double * { return a->GetData(); });

    DEBUG_MSG("Adding wrapper for double * mfem::Vector::begin() (" __HERE__ ")");
    // signature to use in the veto list: double * mfem::Vector::begin()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:222:19
    t.method("begin", [](mfem::Vector& a)->double * { return a.begin(); });
    t.method("begin", [](mfem::Vector* a)->double * { return a->begin(); });

    DEBUG_MSG("Adding wrapper for double * mfem::Vector::end() (" __HERE__ ")");
    // signature to use in the veto list: double * mfem::Vector::end()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:225:19
    t.method("end", [](mfem::Vector& a)->double * { return a.end(); });
    t.method("end", [](mfem::Vector* a)->double * { return a->end(); });

    DEBUG_MSG("Adding wrapper for const double * mfem::Vector::begin() (" __HERE__ ")");
    // signature to use in the veto list: const double * mfem::Vector::begin()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:228:25
    t.method("begin", [](mfem::Vector const& a)->const double * { return a.begin(); });
    t.method("begin", [](mfem::Vector const* a)->const double * { return a->begin(); });

    DEBUG_MSG("Adding wrapper for const double * mfem::Vector::end() (" __HERE__ ")");
    // signature to use in the veto list: const double * mfem::Vector::end()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:231:25
    t.method("end", [](mfem::Vector const& a)->const double * { return a.end(); });
    t.method("end", [](mfem::Vector const* a)->const double * { return a->end(); });

    DEBUG_MSG("Adding wrapper for mfem::Memory<double> & mfem::Vector::GetMemory() (" __HERE__ ")");
    // signature to use in the veto list: mfem::Memory<double> & mfem::Vector::GetMemory()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:234:20
    t.method("GetMemory", [](mfem::Vector& a)->mfem::Memory<double> & { return a.GetMemory(); });
    t.method("GetMemory", [](mfem::Vector* a)->mfem::Memory<double> & { return a->GetMemory(); });

    DEBUG_MSG("Adding wrapper for const mfem::Memory<double> & mfem::Vector::GetMemory() (" __HERE__ ")");
    // signature to use in the veto list: const mfem::Memory<double> & mfem::Vector::GetMemory()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:238:26
    t.method("GetMemory", [](mfem::Vector const& a)->const mfem::Memory<double> & { return a.GetMemory(); });
    t.method("GetMemory", [](mfem::Vector const* a)->const mfem::Memory<double> & { return a->GetMemory(); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::SyncMemory(const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::SyncMemory(const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:241:9
    t.method("SyncMemory", [](mfem::Vector const& a, const mfem::Vector & arg0)->void { a.SyncMemory(arg0); });
    t.method("SyncMemory", [](mfem::Vector const* a, const mfem::Vector & arg0)->void { a->SyncMemory(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::SyncAliasMemory(const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::SyncAliasMemory(const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:244:9
    t.method("SyncAliasMemory", [](mfem::Vector const& a, const mfem::Vector & arg0)->void { a.SyncAliasMemory(arg0); });
    t.method("SyncAliasMemory", [](mfem::Vector const* a, const mfem::Vector & arg0)->void { a->SyncAliasMemory(arg0); });

    DEBUG_MSG("Adding wrapper for bool mfem::Vector::OwnsData() (" __HERE__ ")");
    // signature to use in the veto list: bool mfem::Vector::OwnsData()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:248:16
    t.method("OwnsData", [](mfem::Vector const& a)->bool { return a.OwnsData(); });
    t.method("OwnsData", [](mfem::Vector const* a)->bool { return a->OwnsData(); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::StealData(double **) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::StealData(double **)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:251:16
    t.method("StealData", [](mfem::Vector& a, double ** arg0)->void { a.StealData(arg0); });
    t.method("StealData", [](mfem::Vector* a, double ** arg0)->void { a->StealData(arg0); });

    DEBUG_MSG("Adding wrapper for double * mfem::Vector::StealData() (" __HERE__ ")");
    // signature to use in the veto list: double * mfem::Vector::StealData()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:255:19
    t.method("StealData", [](mfem::Vector& a)->double * { return a.StealData(); });
    t.method("StealData", [](mfem::Vector* a)->double * { return a->StealData(); });

    DEBUG_MSG("Adding wrapper for double & mfem::Vector::Elem(int) (" __HERE__ ")");
    // signature to use in the veto list: double & mfem::Vector::Elem(int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:258:12
    t.method("Elem", [](mfem::Vector& a, int arg0)->double & { return a.Elem(arg0); });
    t.method("Elem", [](mfem::Vector* a, int arg0)->double & { return a->Elem(arg0); });

    DEBUG_MSG("Adding wrapper for const double & mfem::Vector::Elem(int) (" __HERE__ ")");
    // signature to use in the veto list: const double & mfem::Vector::Elem(int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:261:18
    t.method("Elem", [](mfem::Vector const& a, int arg0)->const double & { return a.Elem(arg0); });
    t.method("Elem", [](mfem::Vector const* a, int arg0)->const double & { return a->Elem(arg0); });

    DEBUG_MSG("Adding wrapper for double & mfem::Vector::operator()(int) (" __HERE__ ")");
    // signature to use in the veto list: double & mfem::Vector::operator()(int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:265:19
    t.method("paren", [](mfem::Vector& a, int arg0)->double & { return a.operator()(arg0); });
    t.method("paren", [](mfem::Vector* a, int arg0)->double & { return a->operator()(arg0); });

    DEBUG_MSG("Adding wrapper for const double & mfem::Vector::operator()(int) (" __HERE__ ")");
    // signature to use in the veto list: const double & mfem::Vector::operator()(int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:269:25
    t.method("paren", [](mfem::Vector const& a, int arg0)->const double & { return a.operator()(arg0); });
    t.method("paren", [](mfem::Vector const* a, int arg0)->const double & { return a->operator()(arg0); });
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for double mfem::Vector::operator*(const double *) (" __HERE__ ")");
    // signature to use in the veto list: double mfem::Vector::operator*(const double *)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:272:11
    t.method("*", [](mfem::Vector const& a, const double * arg0)->double { return a.operator*(arg0); });
    t.method("*", [](mfem::Vector const* a, const double * arg0)->double { return a->operator*(arg0); });

    DEBUG_MSG("Adding wrapper for double mfem::Vector::operator*(const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double mfem::Vector::operator*(const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:275:11
    t.method("*", [](mfem::Vector const& a, const mfem::Vector & arg0)->double { return a.operator*(arg0); });
    t.method("*", [](mfem::Vector const* a, const mfem::Vector & arg0)->double { return a->operator*(arg0); });

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for mfem::Vector & mfem::Vector::operator=(const double *) (" __HERE__ ")");
    // signature to use in the veto list: mfem::Vector & mfem::Vector::operator=(const double *)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:278:12
    t.method("assign", [](mfem::Vector& a, const double * arg0)->mfem::Vector & { return a.operator=(arg0); });
    t.method("assign", [](mfem::Vector* a, const double * arg0)->mfem::Vector & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::Vector & mfem::Vector::operator=(const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: mfem::Vector & mfem::Vector::operator=(const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:283:12
    t.method("assign", [](mfem::Vector& a, const mfem::Vector & arg0)->mfem::Vector & { return a.operator=(arg0); });
    t.method("assign", [](mfem::Vector* a, const mfem::Vector & arg0)->mfem::Vector & { return a->operator=(arg0); });


    DEBUG_MSG("Adding wrapper for mfem::Vector & mfem::Vector::operator=(double) (" __HERE__ ")");
    // signature to use in the veto list: mfem::Vector & mfem::Vector::operator=(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:289:12
    t.method("assign", [](mfem::Vector& a, double arg0)->mfem::Vector & { return a.operator=(arg0); });
    t.method("assign", [](mfem::Vector* a, double arg0)->mfem::Vector & { return a->operator=(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::Vector & mfem::Vector::operator*=(double) (" __HERE__ ")");
    // signature to use in the veto list: mfem::Vector & mfem::Vector::operator*=(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:291:12
    t.method("mult!", [](mfem::Vector& a, double arg0)->mfem::Vector & { return a.operator*=(arg0); });
    t.method("mult!", [](mfem::Vector* a, double arg0)->mfem::Vector & { return a->operator*=(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::Vector & mfem::Vector::operator*=(const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: mfem::Vector & mfem::Vector::operator*=(const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:294:12
    t.method("mult!", [](mfem::Vector& a, const mfem::Vector & arg0)->mfem::Vector & { return a.operator*=(arg0); });
    t.method("mult!", [](mfem::Vector* a, const mfem::Vector & arg0)->mfem::Vector & { return a->operator*=(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::Vector & mfem::Vector::operator/=(double) (" __HERE__ ")");
    // signature to use in the veto list: mfem::Vector & mfem::Vector::operator/=(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:296:12
    t.method("fdiv!", [](mfem::Vector& a, double arg0)->mfem::Vector & { return a.operator/=(arg0); });
    t.method("fdiv!", [](mfem::Vector* a, double arg0)->mfem::Vector & { return a->operator/=(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::Vector & mfem::Vector::operator/=(const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: mfem::Vector & mfem::Vector::operator/=(const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:299:12
    t.method("fdiv!", [](mfem::Vector& a, const mfem::Vector & arg0)->mfem::Vector & { return a.operator/=(arg0); });
    t.method("fdiv!", [](mfem::Vector* a, const mfem::Vector & arg0)->mfem::Vector & { return a->operator/=(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::Vector & mfem::Vector::operator-=(double) (" __HERE__ ")");
    // signature to use in the veto list: mfem::Vector & mfem::Vector::operator-=(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:301:12
    t.method("sub!", [](mfem::Vector& a, double arg0)->mfem::Vector & { return a.operator-=(arg0); });
    t.method("sub!", [](mfem::Vector* a, double arg0)->mfem::Vector & { return a->operator-=(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::Vector & mfem::Vector::operator-=(const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: mfem::Vector & mfem::Vector::operator-=(const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:303:12
    t.method("sub!", [](mfem::Vector& a, const mfem::Vector & arg0)->mfem::Vector & { return a.operator-=(arg0); });
    t.method("sub!", [](mfem::Vector* a, const mfem::Vector & arg0)->mfem::Vector & { return a->operator-=(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::Vector & mfem::Vector::operator+=(double) (" __HERE__ ")");
    // signature to use in the veto list: mfem::Vector & mfem::Vector::operator+=(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:305:12
    t.method("add!", [](mfem::Vector& a, double arg0)->mfem::Vector & { return a.operator+=(arg0); });
    t.method("add!", [](mfem::Vector* a, double arg0)->mfem::Vector & { return a->operator+=(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::Vector & mfem::Vector::operator+=(const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: mfem::Vector & mfem::Vector::operator+=(const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:307:12
    t.method("add!", [](mfem::Vector& a, const mfem::Vector & arg0)->mfem::Vector & { return a.operator+=(arg0); });
    t.method("add!", [](mfem::Vector* a, const mfem::Vector & arg0)->mfem::Vector & { return a->operator+=(arg0); });

    DEBUG_MSG("Adding wrapper for mfem::Vector & mfem::Vector::Add(const double, const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: mfem::Vector & mfem::Vector::Add(const double, const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:310:12
    t.method("Add", [](mfem::Vector& a, const double arg0, const mfem::Vector & arg1)->mfem::Vector & { return a.Add(arg0, arg1); });
    t.method("Add", [](mfem::Vector* a, const double arg0, const mfem::Vector & arg1)->mfem::Vector & { return a->Add(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for mfem::Vector & mfem::Vector::Set(const double, const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: mfem::Vector & mfem::Vector::Set(const double, const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:313:12
    t.method("Set", [](mfem::Vector& a, const double arg0, const mfem::Vector & arg1)->mfem::Vector & { return a.Set(arg0, arg1); });
    t.method("Set", [](mfem::Vector* a, const double arg0, const mfem::Vector & arg1)->mfem::Vector & { return a->Set(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::SetVector(const mfem::Vector &, int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::SetVector(const mfem::Vector &, int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:315:9
    t.method("SetVector", [](mfem::Vector& a, const mfem::Vector & arg0, int arg1)->void { a.SetVector(arg0, arg1); });
    t.method("SetVector", [](mfem::Vector* a, const mfem::Vector & arg0, int arg1)->void { a->SetVector(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::Neg() (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::Neg()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:318:9
    t.method("Neg", [](mfem::Vector& a)->void { a.Neg(); });
    t.method("Neg", [](mfem::Vector* a)->void { a->Neg(); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::Swap(mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::Swap(mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:321:16
    t.method("Swap", [](mfem::Vector& a, mfem::Vector & arg0)->void { a.Swap(arg0); });
    t.method("Swap", [](mfem::Vector* a, mfem::Vector & arg0)->void { a->Swap(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::median(const mfem::Vector &, const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::median(const mfem::Vector &, const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:344:9
    t.method("median", [](mfem::Vector& a, const mfem::Vector & arg0, const mfem::Vector & arg1)->void { a.median(arg0, arg1); });
    t.method("median", [](mfem::Vector* a, const mfem::Vector & arg0, const mfem::Vector & arg1)->void { a->median(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::GetSubVector(const mfem::Array<int> &, mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::GetSubVector(const mfem::Array<int> &, mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:349:9
    t.method("GetSubVector", [](mfem::Vector const& a, const mfem::Array<int> & arg0, mfem::Vector & arg1)->void { a.GetSubVector(arg0, arg1); });
    t.method("GetSubVector", [](mfem::Vector const* a, const mfem::Array<int> & arg0, mfem::Vector & arg1)->void { a->GetSubVector(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::GetSubVector(const mfem::Array<int> &, double *) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::GetSubVector(const mfem::Array<int> &, double *)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:354:9
    t.method("GetSubVector", [](mfem::Vector const& a, const mfem::Array<int> & arg0, double * arg1)->void { a.GetSubVector(arg0, arg1); });
    t.method("GetSubVector", [](mfem::Vector const* a, const mfem::Array<int> & arg0, double * arg1)->void { a->GetSubVector(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::SetSubVector(const mfem::Array<int> &, const double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::SetSubVector(const mfem::Array<int> &, const double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:359:9
    t.method("SetSubVector", [](mfem::Vector& a, const mfem::Array<int> & arg0, const double arg1)->void { a.SetSubVector(arg0, arg1); });
    t.method("SetSubVector", [](mfem::Vector* a, const mfem::Array<int> & arg0, const double arg1)->void { a->SetSubVector(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::SetSubVector(const mfem::Array<int> &, const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::SetSubVector(const mfem::Array<int> &, const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:364:9
    t.method("SetSubVector", [](mfem::Vector& a, const mfem::Array<int> & arg0, const mfem::Vector & arg1)->void { a.SetSubVector(arg0, arg1); });
    t.method("SetSubVector", [](mfem::Vector* a, const mfem::Array<int> & arg0, const mfem::Vector & arg1)->void { a->SetSubVector(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::SetSubVector(const mfem::Array<int> &, double *) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::SetSubVector(const mfem::Array<int> &, double *)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:369:9
    t.method("SetSubVector", [](mfem::Vector& a, const mfem::Array<int> & arg0, double * arg1)->void { a.SetSubVector(arg0, arg1); });
    t.method("SetSubVector", [](mfem::Vector* a, const mfem::Array<int> & arg0, double * arg1)->void { a->SetSubVector(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::AddElementVector(const mfem::Array<int> &, const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::AddElementVector(const mfem::Array<int> &, const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:374:9
    t.method("AddElementVector", [](mfem::Vector& a, const mfem::Array<int> & arg0, const mfem::Vector & arg1)->void { a.AddElementVector(arg0, arg1); });
    t.method("AddElementVector", [](mfem::Vector* a, const mfem::Array<int> & arg0, const mfem::Vector & arg1)->void { a->AddElementVector(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::AddElementVector(const mfem::Array<int> &, double *) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::AddElementVector(const mfem::Array<int> &, double *)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:379:9
    t.method("AddElementVector", [](mfem::Vector& a, const mfem::Array<int> & arg0, double * arg1)->void { a.AddElementVector(arg0, arg1); });
    t.method("AddElementVector", [](mfem::Vector* a, const mfem::Array<int> & arg0, double * arg1)->void { a->AddElementVector(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::AddElementVector(const mfem::Array<int> &, const double, const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::AddElementVector(const mfem::Array<int> &, const double, const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:384:9
    t.method("AddElementVector", [](mfem::Vector& a, const mfem::Array<int> & arg0, const double arg1, const mfem::Vector & arg2)->void { a.AddElementVector(arg0, arg1, arg2); });
    t.method("AddElementVector", [](mfem::Vector* a, const mfem::Array<int> & arg0, const double arg1, const mfem::Vector & arg2)->void { a->AddElementVector(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::SetSubVectorComplement(const mfem::Array<int> &, const double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::SetSubVectorComplement(const mfem::Array<int> &, const double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:388:9
    t.method("SetSubVectorComplement", [](mfem::Vector& a, const mfem::Array<int> & arg0, const double arg1)->void { a.SetSubVectorComplement(arg0, arg1); });
    t.method("SetSubVectorComplement", [](mfem::Vector* a, const mfem::Array<int> & arg0, const double arg1)->void { a->SetSubVectorComplement(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void mfem::Vector::Randomize(int) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::Vector::Randomize(int)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:410:9
    t.method("Randomize", [](mfem::Vector& a)->void { a.Randomize(); });
    t.method("Randomize", [](mfem::Vector& a, int arg0)->void { a.Randomize(arg0); });
    t.method("Randomize", [](mfem::Vector* a)->void { a->Randomize(); });
    t.method("Randomize", [](mfem::Vector* a, int arg0)->void { a->Randomize(arg0); });

    DEBUG_MSG("Adding wrapper for double mfem::Vector::Norml2() (" __HERE__ ")");
    // signature to use in the veto list: double mfem::Vector::Norml2()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:412:11
    t.method("Norml2", [](mfem::Vector const& a)->double { return a.Norml2(); });
    t.method("Norml2", [](mfem::Vector const* a)->double { return a->Norml2(); });

    DEBUG_MSG("Adding wrapper for double mfem::Vector::Normlinf() (" __HERE__ ")");
    // signature to use in the veto list: double mfem::Vector::Normlinf()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:414:11
    t.method("Normlinf", [](mfem::Vector const& a)->double { return a.Normlinf(); });
    t.method("Normlinf", [](mfem::Vector const* a)->double { return a->Normlinf(); });

    DEBUG_MSG("Adding wrapper for double mfem::Vector::Norml1() (" __HERE__ ")");
    // signature to use in the veto list: double mfem::Vector::Norml1()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:416:11
    t.method("Norml1", [](mfem::Vector const& a)->double { return a.Norml1(); });
    t.method("Norml1", [](mfem::Vector const* a)->double { return a->Norml1(); });

    DEBUG_MSG("Adding wrapper for double mfem::Vector::Normlp(double) (" __HERE__ ")");
    // signature to use in the veto list: double mfem::Vector::Normlp(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:418:11
    t.method("Normlp", [](mfem::Vector const& a, double arg0)->double { return a.Normlp(arg0); });
    t.method("Normlp", [](mfem::Vector const* a, double arg0)->double { return a->Normlp(arg0); });

    DEBUG_MSG("Adding wrapper for double mfem::Vector::Max() (" __HERE__ ")");
    // signature to use in the veto list: double mfem::Vector::Max()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:420:11
    t.method("Max", [](mfem::Vector const& a)->double { return a.Max(); });
    t.method("Max", [](mfem::Vector const* a)->double { return a->Max(); });

    DEBUG_MSG("Adding wrapper for double mfem::Vector::Min() (" __HERE__ ")");
    // signature to use in the veto list: double mfem::Vector::Min()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:422:11
    t.method("Min", [](mfem::Vector const& a)->double { return a.Min(); });
    t.method("Min", [](mfem::Vector const* a)->double { return a->Min(); });

    DEBUG_MSG("Adding wrapper for double mfem::Vector::Sum() (" __HERE__ ")");
    // signature to use in the veto list: double mfem::Vector::Sum()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:424:11
    t.method("Sum", [](mfem::Vector const& a)->double { return a.Sum(); });
    t.method("Sum", [](mfem::Vector const* a)->double { return a->Sum(); });

    DEBUG_MSG("Adding wrapper for double mfem::Vector::DistanceSquaredTo(const double *) (" __HERE__ ")");
    // signature to use in the veto list: double mfem::Vector::DistanceSquaredTo(const double *)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:426:18
    t.method("DistanceSquaredTo", [](mfem::Vector const& a, const double * arg0)->double { return a.DistanceSquaredTo(arg0); });
    t.method("DistanceSquaredTo", [](mfem::Vector const* a, const double * arg0)->double { return a->DistanceSquaredTo(arg0); });

    DEBUG_MSG("Adding wrapper for double mfem::Vector::DistanceTo(const double *) (" __HERE__ ")");
    // signature to use in the veto list: double mfem::Vector::DistanceTo(const double *)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:428:18
    t.method("DistanceTo", [](mfem::Vector const& a, const double * arg0)->double { return a.DistanceTo(arg0); });
    t.method("DistanceTo", [](mfem::Vector const* a, const double * arg0)->double { return a->DistanceTo(arg0); });

    DEBUG_MSG("Adding wrapper for int mfem::Vector::CheckFinite() (" __HERE__ ")");
    // signature to use in the veto list: int mfem::Vector::CheckFinite()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:432:8
    t.method("CheckFinite", [](mfem::Vector const& a)->int { return a.CheckFinite(); });
    t.method("CheckFinite", [](mfem::Vector const* a)->int { return a->CheckFinite(); });

    DEBUG_MSG("Adding wrapper for const double * mfem::Vector::Read(bool) (" __HERE__ ")");
    // signature to use in the veto list: const double * mfem::Vector::Read(bool)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:438:26
    t.method("Read", [](mfem::Vector const& a)->const double * { return a.Read(); });
    t.method("Read", [](mfem::Vector const& a, bool arg0)->const double * { return a.Read(arg0); });
    t.method("Read", [](mfem::Vector const* a)->const double * { return a->Read(); });
    t.method("Read", [](mfem::Vector const* a, bool arg0)->const double * { return a->Read(arg0); });

    DEBUG_MSG("Adding wrapper for const double * mfem::Vector::HostRead() (" __HERE__ ")");
    // signature to use in the veto list: const double * mfem::Vector::HostRead()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:442:26
    t.method("HostRead", [](mfem::Vector const& a)->const double * { return a.HostRead(); });
    t.method("HostRead", [](mfem::Vector const* a)->const double * { return a->HostRead(); });

    DEBUG_MSG("Adding wrapper for double * mfem::Vector::Write(bool) (" __HERE__ ")");
    // signature to use in the veto list: double * mfem::Vector::Write(bool)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:446:20
    t.method("Write", [](mfem::Vector& a)->double * { return a.Write(); });
    t.method("Write", [](mfem::Vector& a, bool arg0)->double * { return a.Write(arg0); });
    t.method("Write", [](mfem::Vector* a)->double * { return a->Write(); });
    t.method("Write", [](mfem::Vector* a, bool arg0)->double * { return a->Write(arg0); });

    DEBUG_MSG("Adding wrapper for double * mfem::Vector::HostWrite() (" __HERE__ ")");
    // signature to use in the veto list: double * mfem::Vector::HostWrite()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:450:20
    t.method("HostWrite", [](mfem::Vector& a)->double * { return a.HostWrite(); });
    t.method("HostWrite", [](mfem::Vector* a)->double * { return a->HostWrite(); });

    DEBUG_MSG("Adding wrapper for double * mfem::Vector::ReadWrite(bool) (" __HERE__ ")");
    // signature to use in the veto list: double * mfem::Vector::ReadWrite(bool)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:454:20
    t.method("ReadWrite", [](mfem::Vector& a)->double * { return a.ReadWrite(); });
    t.method("ReadWrite", [](mfem::Vector& a, bool arg0)->double * { return a.ReadWrite(arg0); });
    t.method("ReadWrite", [](mfem::Vector* a)->double * { return a->ReadWrite(); });
    t.method("ReadWrite", [](mfem::Vector* a, bool arg0)->double * { return a->ReadWrite(arg0); });

    DEBUG_MSG("Adding wrapper for double * mfem::Vector::HostReadWrite() (" __HERE__ ")");
    // signature to use in the veto list: double * mfem::Vector::HostReadWrite()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/vector.hpp:458:20
    t.method("HostReadWrite", [](mfem::Vector& a)->double * { return a.HostReadWrite(); });
    t.method("HostReadWrite", [](mfem::Vector* a)->double * { return a->HostReadWrite(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<mfem::Vector>> type_;
};
std::shared_ptr<Wrapper> newJlmfem_Vector(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new Jlmfem_Vector(module));
}
