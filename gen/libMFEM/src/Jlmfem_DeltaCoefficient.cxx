// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jllibMFEM.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<mfem::DeltaCoefficient> : std::false_type { };
  template<> struct DefaultConstructible<mfem::DeltaCoefficient> : std::false_type { };
template<> struct SuperType<mfem::DeltaCoefficient> { typedef mfem::Coefficient type; };
}

// Class generating the wrapper for type mfem::DeltaCoefficient
// signature to use in the veto file: mfem::DeltaCoefficient
struct Jlmfem_DeltaCoefficient: public Wrapper {

  Jlmfem_DeltaCoefficient(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type mfem::DeltaCoefficient (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:318:7
    jlcxx::TypeWrapper<mfem::DeltaCoefficient>  t = jlModule.add_type<mfem::DeltaCoefficient>("mfem!DeltaCoefficient",
      jlcxx::julia_base_type<mfem::Coefficient>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<mfem::DeltaCoefficient>>(new jlcxx::TypeWrapper<mfem::DeltaCoefficient>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::DeltaCoefficient::DeltaCoefficient(double, double) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:336:4
    t.constructor<double, double>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::DeltaCoefficient::DeltaCoefficient(double, double, double) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:343:4
    t.constructor<double, double, double>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void mfem::DeltaCoefficient::DeltaCoefficient(double, double, double, double) (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:350:4
    t.constructor<double, double, double, double>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void mfem::DeltaCoefficient::SetTime(double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DeltaCoefficient::SetTime(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:357:9
    t.method("SetTime", [](mfem::DeltaCoefficient& a, double arg0)->void { a.SetTime(arg0); });
    t.method("SetTime", [](mfem::DeltaCoefficient* a, double arg0)->void { a->SetTime(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::DeltaCoefficient::SetDeltaCenter(const mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DeltaCoefficient::SetDeltaCenter(const mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:360:9
    t.method("SetDeltaCenter", [](mfem::DeltaCoefficient& a, const mfem::Vector & arg0)->void { a.SetDeltaCenter(arg0); });
    t.method("SetDeltaCenter", [](mfem::DeltaCoefficient* a, const mfem::Vector & arg0)->void { a->SetDeltaCenter(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::DeltaCoefficient::SetScale(double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DeltaCoefficient::SetScale(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:363:9
    t.method("SetScale", [](mfem::DeltaCoefficient& a, double arg0)->void { a.SetScale(arg0); });
    t.method("SetScale", [](mfem::DeltaCoefficient* a, double arg0)->void { a->SetScale(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::DeltaCoefficient::SetFunction(double (*)(double)) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DeltaCoefficient::SetFunction(double (*)(double))
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:366:9
    t.method("SetFunction", [](mfem::DeltaCoefficient& a, double (*arg0)(double))->void { a.SetFunction(arg0); });
    t.method("SetFunction", [](mfem::DeltaCoefficient* a, double (*arg0)(double))->void { a->SetFunction(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::DeltaCoefficient::SetTol(double) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DeltaCoefficient::SetTol(double)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:371:9
    t.method("SetTol", [](mfem::DeltaCoefficient& a, double arg0)->void { a.SetTol(arg0); });
    t.method("SetTol", [](mfem::DeltaCoefficient* a, double arg0)->void { a->SetTol(arg0); });

    DEBUG_MSG("Adding wrapper for void mfem::DeltaCoefficient::SetWeight(mfem::Coefficient *) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DeltaCoefficient::SetWeight(mfem::Coefficient *)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:379:9
    t.method("SetWeight", [](mfem::DeltaCoefficient& a, mfem::Coefficient * arg0)->void { a.SetWeight(arg0); });
    t.method("SetWeight", [](mfem::DeltaCoefficient* a, mfem::Coefficient * arg0)->void { a->SetWeight(arg0); });

    DEBUG_MSG("Adding wrapper for const double * mfem::DeltaCoefficient::Center() (" __HERE__ ")");
    // signature to use in the veto list: const double * mfem::DeltaCoefficient::Center()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:383:18
    t.method("Center", [](mfem::DeltaCoefficient& a)->const double * { return a.Center(); });
    t.method("Center", [](mfem::DeltaCoefficient* a)->const double * { return a->Center(); });

    DEBUG_MSG("Adding wrapper for double mfem::DeltaCoefficient::Scale() (" __HERE__ ")");
    // signature to use in the veto list: double mfem::DeltaCoefficient::Scale()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:388:11
    t.method("Scale", [](mfem::DeltaCoefficient& a)->double { return a.Scale(); });
    t.method("Scale", [](mfem::DeltaCoefficient* a)->double { return a->Scale(); });

    DEBUG_MSG("Adding wrapper for double mfem::DeltaCoefficient::Tol() (" __HERE__ ")");
    // signature to use in the veto list: double mfem::DeltaCoefficient::Tol()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:391:11
    t.method("Tol", [](mfem::DeltaCoefficient& a)->double { return a.Tol(); });
    t.method("Tol", [](mfem::DeltaCoefficient* a)->double { return a->Tol(); });

    DEBUG_MSG("Adding wrapper for mfem::Coefficient * mfem::DeltaCoefficient::Weight() (" __HERE__ ")");
    // signature to use in the veto list: mfem::Coefficient * mfem::DeltaCoefficient::Weight()
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:394:17
    t.method("Weight", [](mfem::DeltaCoefficient& a)->mfem::Coefficient * { return a.Weight(); });
    t.method("Weight", [](mfem::DeltaCoefficient* a)->mfem::Coefficient * { return a->Weight(); });

    DEBUG_MSG("Adding wrapper for void mfem::DeltaCoefficient::GetDeltaCenter(mfem::Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::DeltaCoefficient::GetDeltaCenter(mfem::Vector &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:397:9
    t.method("GetDeltaCenter", [](mfem::DeltaCoefficient& a, mfem::Vector & arg0)->void { a.GetDeltaCenter(arg0); });
    t.method("GetDeltaCenter", [](mfem::DeltaCoefficient* a, mfem::Vector & arg0)->void { a->GetDeltaCenter(arg0); });

    DEBUG_MSG("Adding wrapper for double mfem::DeltaCoefficient::EvalDelta(mfem::ElementTransformation &, const mfem::IntegrationPoint &) (" __HERE__ ")");
    // signature to use in the veto list: double mfem::DeltaCoefficient::EvalDelta(mfem::ElementTransformation &, const mfem::IntegrationPoint &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:400:19
    t.method("EvalDelta", [](mfem::DeltaCoefficient& a, mfem::ElementTransformation & arg0, const mfem::IntegrationPoint & arg1)->double { return a.EvalDelta(arg0, arg1); });
    t.method("EvalDelta", [](mfem::DeltaCoefficient* a, mfem::ElementTransformation & arg0, const mfem::IntegrationPoint & arg1)->double { return a->EvalDelta(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for double mfem::DeltaCoefficient::Eval(mfem::ElementTransformation &, const mfem::IntegrationPoint &) (" __HERE__ ")");
    // signature to use in the veto list: double mfem::DeltaCoefficient::Eval(mfem::ElementTransformation &, const mfem::IntegrationPoint &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/mesh/../fem/coefficient.hpp:403:19
    t.method("Eval", [](mfem::DeltaCoefficient& a, mfem::ElementTransformation & arg0, const mfem::IntegrationPoint & arg1)->double { return a.Eval(arg0, arg1); });
    t.method("Eval", [](mfem::DeltaCoefficient* a, mfem::ElementTransformation & arg0, const mfem::IntegrationPoint & arg1)->double { return a->Eval(arg0, arg1); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<mfem::DeltaCoefficient>> type_;
};
std::shared_ptr<Wrapper> newJlmfem_DeltaCoefficient(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new Jlmfem_DeltaCoefficient(module));
}
