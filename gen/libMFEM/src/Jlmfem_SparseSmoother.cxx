// this file was auto-generated by wrapit v1.5.0
#include "Wrapper.h"

#include "jllibMFEM.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<mfem::SparseSmoother> : std::false_type { };
  template<> struct DefaultConstructible<mfem::SparseSmoother> : std::false_type { };
template<> struct SuperType<mfem::SparseSmoother> { typedef mfem::MatrixInverse type; };
}

// Class generating the wrapper for type mfem::SparseSmoother
// signature to use in the veto file: mfem::SparseSmoother
struct Jlmfem_SparseSmoother: public Wrapper {

  Jlmfem_SparseSmoother(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type mfem::SparseSmoother (" __HERE__ ")");
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/sparsesmoothers.hpp:21:7
    jlcxx::TypeWrapper<mfem::SparseSmoother>  t = jlModule.add_type<mfem::SparseSmoother>("mfem!SparseSmoother",
      jlcxx::julia_base_type<mfem::MatrixInverse>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<mfem::SparseSmoother>>(new jlcxx::TypeWrapper<mfem::SparseSmoother>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void mfem::SparseSmoother::SetOperator(const mfem::Operator &) (" __HERE__ ")");
    // signature to use in the veto list: void mfem::SparseSmoother::SetOperator(const mfem::Operator &)
    // defined in /home/dogiermann/.julia/artifacts/820df874853553756f46ac6dc23173c05d8db01a/include/mfem/linalg/sparsesmoothers.hpp:32:17
    t.method("SetOperator", [](mfem::SparseSmoother& a, const mfem::Operator & arg0)->void { a.SetOperator(arg0); });
    t.method("SetOperator", [](mfem::SparseSmoother* a, const mfem::Operator & arg0)->void { a->SetOperator(arg0); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<mfem::SparseSmoother>> type_;
};
std::shared_ptr<Wrapper> newJlmfem_SparseSmoother(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new Jlmfem_SparseSmoother(module));
}
